fchg: 5 is a plain number, fine.
fvhd: 4 is a plain number, fine.
hjpd: ntvg * ntpl is an expression for the todo stack.
jhph: 7 is a plain number, fine.
fjlh: 4 is a plain number, fine.
tqsb: 2 is a plain number, fine.
slwq: zjzs + zctz is an expression for the todo stack.
cqfs: 3 is a plain number, fine.
qtlm: 4 is a plain number, fine.
sdsb: 2 is a plain number, fine.
lfcq: 2 is a plain number, fine.
nlvv: 5 is a plain number, fine.
zgcl: wqgd * zfbp is an expression for the todo stack.
tqvl: 4 is a plain number, fine.
qvds: wcmp * nsvf is an expression for the todo stack.
npcg: 3 is a plain number, fine.
wlqd: 2 is a plain number, fine.
nslf: 4 is a plain number, fine.
vfsl: wfdf + qpts is an expression for the todo stack.
tjft: wltb + jhdm is an expression for the todo stack.
dhmp: rrwd * shpj is an expression for the todo stack.
tbtc: 3 is a plain number, fine.
lgdv: 9 is a plain number, fine.
ftsd: vgqq + qsfp is an expression for the todo stack.
ldfn: 5 is a plain number, fine.
tvbh: 4 is a plain number, fine.
jvht: jpqn * mlcb is an expression for the todo stack.
jdvr: vlgs * nzwm is an expression for the todo stack.
pjbm: 5 is a plain number, fine.
rzcl: chdb * tbfz is an expression for the todo stack.
ltdt: fzgw + grlf is an expression for the todo stack.
rwbt: zzpr * tlzs is an expression for the todo stack.
bfrd: 14 is a plain number, fine.
dfwg: dpqr * tgff is an expression for the todo stack.
wqwm: 3 is a plain number, fine.
vbmh: vtln * jbbw is an expression for the todo stack.
rppb: gfgz * sjmz is an expression for the todo stack.
dmrz: tjft / jtnw is an expression for the todo stack.
wsjc: dwvm + bjsd is an expression for the todo stack.
msqm: vpnm * jzzh is an expression for the todo stack.
dwdv: 5 is a plain number, fine.
njsc: wngz * hdrg is an expression for the todo stack.
fbzr: 14 is a plain number, fine.
wqdp: 5 is a plain number, fine.
dpzc: wsqn * zsrr is an expression for the todo stack.
jgwr: 7 is a plain number, fine.
wfcz: mqrf - hbrq is an expression for the todo stack.
rgfr: 3 is a plain number, fine.
fpgs: 2 is a plain number, fine.
tbfz: zfvz * fngz is an expression for the todo stack.
mfbv: ltfv * mlzd is an expression for the todo stack.
fmvh: cnmh + cljv is an expression for the todo stack.
swft: bnlp * pdgl is an expression for the todo stack.
mrnp: bldf + zhtv is an expression for the todo stack.
wpms: rjnl + hnps is an expression for the todo stack.
pzzm: dpls / cvgg is an expression for the todo stack.
wpsf: 18 is a plain number, fine.
phtj: gbjw + wfmc is an expression for the todo stack.
sptt: 12 is a plain number, fine.
wcjj: 2 is a plain number, fine.
hgmj: sstv + qzhb is an expression for the todo stack.
fpnf: qmrq + bfcq is an expression for the todo stack.
prwp: mdhb - nlfw is an expression for the todo stack.
hzzf: jfpn + lvcm is an expression for the todo stack.
jrrg: 5 is a plain number, fine.
rbwf: qqvm / sjsp is an expression for the todo stack.
bpgt: 3 is a plain number, fine.
wngz: 4 is a plain number, fine.
sdjd: 3 is a plain number, fine.
hnbf: hddn / sghh is an expression for the todo stack.
cvzn: 2 is a plain number, fine.
tnlj: lbgm + ghsw is an expression for the todo stack.
jcqf: 2 is a plain number, fine.
shpj: lggg + wbcn is an expression for the todo stack.
mwgp: 11 is a plain number, fine.
wrwt: cghm / nzgd is an expression for the todo stack.
wpsm: 16 is a plain number, fine.
rprv: 5 is a plain number, fine.
nmcj: whhl * hjtv is an expression for the todo stack.
jlnn: tdjl + lmmw is an expression for the todo stack.
mlfr: 3 is a plain number, fine.
fjds: hblb + swft is an expression for the todo stack.
bqns: qjng + rppb is an expression for the todo stack.
tsrw: 3 is a plain number, fine.
gdhf: 3 is a plain number, fine.
gbsb: 5 is a plain number, fine.
qpgq: tgdl * vlzn is an expression for the todo stack.
wdhn: 2 is a plain number, fine.
qfqv: 3 is a plain number, fine.
vvdb: 3 is a plain number, fine.
cfhv: 2 is a plain number, fine.
nqzd: bllq * jpgb is an expression for the todo stack.
bjpv: tcrp * fhdl is an expression for the todo stack.
thdm: 7 is a plain number, fine.
dthc: sdgf + ltfn is an expression for the todo stack.
gndh: swtp * lfts is an expression for the todo stack.
svjb: 12 is a plain number, fine.
dsqp: 4 is a plain number, fine.
fwhd: 3 is a plain number, fine.
ctlr: mljd + dhzm is an expression for the todo stack.
fhmr: 3 is a plain number, fine.
frrd: nvpf * bgjp is an expression for the todo stack.
mlcb: 4 is a plain number, fine.
gbjs: 2 is a plain number, fine.
gmcs: 2 is a plain number, fine.
jfpt: 5 is a plain number, fine.
nzbc: 5 is a plain number, fine.
rglv: scmj + lcbh is an expression for the todo stack.
cjqh: 5 is a plain number, fine.
czdp: ndfm * szdh is an expression for the todo stack.
jllb: 2 is a plain number, fine.
fcfv: rrtv * cgqj is an expression for the todo stack.
mvmw: 4 is a plain number, fine.
rsrz: sdjz + llcg is an expression for the todo stack.
rcrh: bcfp * rtjd is an expression for the todo stack.
dfsw: 1 is a plain number, fine.
qmfh: fzrv + vgqs is an expression for the todo stack.
tssz: 4 is a plain number, fine.
wphf: cvtc + hnfl is an expression for the todo stack.
mztw: 2 is a plain number, fine.
bjwz: 5 is a plain number, fine.
dsmr: 4 is a plain number, fine.
mtqq: rhtv + sqfb is an expression for the todo stack.
mbjm: phmb + snzb is an expression for the todo stack.
nzds: vgdr + gnwt is an expression for the todo stack.
jdrn: 9 is a plain number, fine.
wnsj: 2 is a plain number, fine.
zgqn: 2 is a plain number, fine.
tjnv: qbcg / csfn is an expression for the todo stack.
fhcv: dctp * bhpw is an expression for the todo stack.
pvgt: cnlj * rvww is an expression for the todo stack.
fqlw: 5 is a plain number, fine.
tpbf: 4 is a plain number, fine.
crvv: ngsv - cwbn is an expression for the todo stack.
pwtv: 7 is a plain number, fine.
mpss: 3 is a plain number, fine.
dbwp: rjst * tgnh is an expression for the todo stack.
wzzd: lmvz * bfqg is an expression for the todo stack.
qsnc: 14 is a plain number, fine.
mfjq: 5 is a plain number, fine.
nbcq: 4 is a plain number, fine.
rfvv: 3 is a plain number, fine.
vpnm: 5 is a plain number, fine.
dgwm: 5 is a plain number, fine.
btdd: 2 is a plain number, fine.
cbcl: vlts + mzcw is an expression for the todo stack.
fjmd: nsqr * vfhr is an expression for the todo stack.
njjw: vvzt * qgft is an expression for the todo stack.
nmcr: fddz * wtzc is an expression for the todo stack.
ggfr: 2 is a plain number, fine.
mczh: 4 is a plain number, fine.
zfbf: 10 is a plain number, fine.
dclg: 5 is a plain number, fine.
bzgj: 3 is a plain number, fine.
fggm: szjv + jmsw is an expression for the todo stack.
bvww: 16 is a plain number, fine.
stvz: 7 is a plain number, fine.
szmh: 19 is a plain number, fine.
lclv: tpbc * zzsz is an expression for the todo stack.
gwrh: jrrg + pvlp is an expression for the todo stack.
mdhm: dthc * dwpr is an expression for the todo stack.
svbj: 5 is a plain number, fine.
nzwm: 3 is a plain number, fine.
zfdg: ntgl * rgrw is an expression for the todo stack.
wvwd: zhrt - tgfs is an expression for the todo stack.
bqjt: 3 is a plain number, fine.
cqrh: 5 is a plain number, fine.
mwwt: cwgg * vmfd is an expression for the todo stack.
bjdn: 2 is a plain number, fine.
bpwz: vtzr - cvrf is an expression for the todo stack.
jgpt: 2 is a plain number, fine.
czfc: ntgv * bpgt is an expression for the todo stack.
tdfb: hzgf * hpwz is an expression for the todo stack.
lmzz: 3 is a plain number, fine.
vpcf: 1 is a plain number, fine.
ntwf: 7 is a plain number, fine.
dqcp: 2 is a plain number, fine.
jhts: 11 is a plain number, fine.
zrpn: lnpz * mllb is an expression for the todo stack.
hdtp: cjbf * mmml is an expression for the todo stack.
dlmt: cpcn * jzwp is an expression for the todo stack.
qhsq: 4 is a plain number, fine.
hcpr: 3 is a plain number, fine.
rzfl: gchw * llrz is an expression for the todo stack.
gzcn: ncmp * snfr is an expression for the todo stack.
hrzh: 2 is a plain number, fine.
dfzf: 16 is a plain number, fine.
gmzb: 2 is a plain number, fine.
njcg: pzmn * vqqh is an expression for the todo stack.
znwp: 4 is a plain number, fine.
nfzb: 3 is a plain number, fine.
dpjv: qfmh * gqsd is an expression for the todo stack.
rvww: wpsf - rhrq is an expression for the todo stack.
tqpv: 4 is a plain number, fine.
prbf: jgsz * cqzs is an expression for the todo stack.
jttq: 10 is a plain number, fine.
zbsm: mhtn - bgbh is an expression for the todo stack.
wpwr: 5 is a plain number, fine.
bnrz: gjdc + fqlw is an expression for the todo stack.
bvzj: 3 is a plain number, fine.
lmjh: tcnv + prhw is an expression for the todo stack.
lrjm: 4 is a plain number, fine.
ldqv: frgr + lqcb is an expression for the todo stack.
qqwr: jdvr + tgwc is an expression for the todo stack.
bmqp: 4 is a plain number, fine.
tzlp: tsrt * cwgp is an expression for the todo stack.
grnp: 2 is a plain number, fine.
czwg: 2 is a plain number, fine.
pbcv: 3 is a plain number, fine.
mrbz: wqjf * fczv is an expression for the todo stack.
wrlb: 5 is a plain number, fine.
cmdr: mmsh * npwz is an expression for the todo stack.
mbdd: hpqc * vbww is an expression for the todo stack.
jvfj: svvl + twch is an expression for the todo stack.
mhjg: llff + bsnt is an expression for the todo stack.
rgrv: 5 is a plain number, fine.
pzbv: 2 is a plain number, fine.
njgp: bzgj * rnqg is an expression for the todo stack.
cjvp: 2 is a plain number, fine.
fgdv: qzbg * wszh is an expression for the todo stack.
npcf: dclt * llzt is an expression for the todo stack.
nzqw: 4 is a plain number, fine.
gsjq: 5 is a plain number, fine.
tvzz: cvnw * hvtg is an expression for the todo stack.
bglm: 3 is a plain number, fine.
dcrc: rsdd * phft is an expression for the todo stack.
cssf: zvhs + bhcp is an expression for the todo stack.
bfln: 5 is a plain number, fine.
hjmh: 5 is a plain number, fine.
rjls: 4 is a plain number, fine.
tzrp: 5 is a plain number, fine.
trgm: dvtc - zhss is an expression for the todo stack.
ghhj: jhtc * wrfq is an expression for the todo stack.
bbll: 3 is a plain number, fine.
nzpt: ltdt + dbnv is an expression for the todo stack.
slft: mmcn * fcwt is an expression for the todo stack.
pnhc: 3 is a plain number, fine.
mpgt: mwqt + vlnh is an expression for the todo stack.
wqjf: 3 is a plain number, fine.
nwfq: 3 is a plain number, fine.
vpqz: 11 is a plain number, fine.
gvlz: 3 is a plain number, fine.
hrlt: 3 is a plain number, fine.
psph: jbpv + thds is an expression for the todo stack.
hbqq: 16 is a plain number, fine.
bqbt: 2 is a plain number, fine.
qdwv: trfc + cswj is an expression for the todo stack.
qzsj: 19 is a plain number, fine.
gwnz: 3 is a plain number, fine.
vnvl: 5 is a plain number, fine.
tjrj: qpmc - hgjr is an expression for the todo stack.
wvqf: 3 is a plain number, fine.
brws: 3 is a plain number, fine.
bsrr: 11 is a plain number, fine.
grst: 20 is a plain number, fine.
lvpf: gzsf + bvsm is an expression for the todo stack.
lzcn: 2 is a plain number, fine.
fhvw: humn - jchs is an expression for the todo stack.
jbmf: ggpd * bljw is an expression for the todo stack.
gwwf: 3 is a plain number, fine.
pwpn: 2 is a plain number, fine.
ftnw: szbv + sdws is an expression for the todo stack.
lcvf: bdbh - rnft is an expression for the todo stack.
mqqr: fbmb * jjqs is an expression for the todo stack.
nqgd: jflp - rmmb is an expression for the todo stack.
rssw: 4 is a plain number, fine.
dcjs: wnjm * rssw is an expression for the todo stack.
rscg: fdhj * zcvc is an expression for the todo stack.
lsvp: trhb * znvd is an expression for the todo stack.
bqlh: jwvq * nhrq is an expression for the todo stack.
rltm: 4 is a plain number, fine.
hcsb: 9 is a plain number, fine.
mvgc: 2 is a plain number, fine.
wrnn: rthw + jwnt is an expression for the todo stack.
bprw: 3 is a plain number, fine.
jzvl: 4 is a plain number, fine.
fvct: 2 is a plain number, fine.
hrdp: lvpz * lfgv is an expression for the todo stack.
chdb: hwbf * mmbt is an expression for the todo stack.
blwr: 3 is a plain number, fine.
jvlz: 7 is a plain number, fine.
cjnw: gngd * fwmw is an expression for the todo stack.
sqcr: scvq * dmzl is an expression for the todo stack.
nbqm: pjnl - zgmg is an expression for the todo stack.
sgpw: qmwq * bfnt is an expression for the todo stack.
jjtn: ldjm + nvld is an expression for the todo stack.
pznw: 4 is a plain number, fine.
dpzm: zwqv - ffqb is an expression for the todo stack.
mlbf: jhrz * mcqq is an expression for the todo stack.
bjzb: 2 is a plain number, fine.
nlps: 15 is a plain number, fine.
phwz: mcmg - rfrr is an expression for the todo stack.
mgsd: 4 is a plain number, fine.
bcbd: brqw / dwhp is an expression for the todo stack.
shhc: hrbm / sfdp is an expression for the todo stack.
lmlr: 2 is a plain number, fine.
lpmh: 4 is a plain number, fine.
rswb: mpgt + dsvv is an expression for the todo stack.
chbm: pwpn * djsq is an expression for the todo stack.
gpwj: bltz + trvb is an expression for the todo stack.
phmp: slbb * dqnm is an expression for the todo stack.
scwl: fwpr + ntdl is an expression for the todo stack.
gmbj: 5 is a plain number, fine.
gmgn: ftnw * bcmt is an expression for the todo stack.
vrcs: 1 is a plain number, fine.
rbgm: jttt + zdpn is an expression for the todo stack.
pmtw: 3 is a plain number, fine.
npvz: ltmq - zqgd is an expression for the todo stack.
lddb: 10 is a plain number, fine.
dfnc: dcjm + dwwv is an expression for the todo stack.
fftm: 5 is a plain number, fine.
lchj: 9 is a plain number, fine.
qwwh: 6 is a plain number, fine.
lngv: pmbl * wgdc is an expression for the todo stack.
wnsd: jfgq * pvnc is an expression for the todo stack.
cqzf: 1 is a plain number, fine.
wcmp: 2 is a plain number, fine.
fczv: whjf * ffwp is an expression for the todo stack.
vpvb: hlzb * bnvt is an expression for the todo stack.
lvls: 5 is a plain number, fine.
lmfw: dlnf / ddtn is an expression for the todo stack.
pdtj: 2 is a plain number, fine.
hnmp: 2 is a plain number, fine.
dhhw: flwn + jsmh is an expression for the todo stack.
ngmh: 2 is a plain number, fine.
dzff: 7 is a plain number, fine.
wlzs: zzng * cvrt is an expression for the todo stack.
pgwj: 1 is a plain number, fine.
mcqn: glht * cfhv is an expression for the todo stack.
qptt: 2 is a plain number, fine.
jrhp: jlpm + tcwm is an expression for the todo stack.
dmmr: bzlt * jjpv is an expression for the todo stack.
rwpg: 13 is a plain number, fine.
qhgh: mdzr * zbcs is an expression for the todo stack.
pqwr: phqq - ctdq is an expression for the todo stack.
sjbt: 5 is a plain number, fine.
mtbg: 12 is a plain number, fine.
vbrc: fhmr + rmvl is an expression for the todo stack.
nrww: 3 is a plain number, fine.
dlfj: hhsz + cpzc is an expression for the todo stack.
jtcj: 8 is a plain number, fine.
whpl: 5 is a plain number, fine.
bltw: cssf - plrv is an expression for the todo stack.
ffdn: rnjh - zmmp is an expression for the todo stack.
bmhn: 2 is a plain number, fine.
bqtb: qhlp * dnrn is an expression for the todo stack.
dsgj: 2 is a plain number, fine.
dwsp: 3 is a plain number, fine.
njnq: 9 is a plain number, fine.
jpqn: 2 is a plain number, fine.
vflt: zpcw + dcjp is an expression for the todo stack.
cvqw: ztdq * rgrv is an expression for the todo stack.
tcrp: psnc / lhfg is an expression for the todo stack.
pqwf: 3 is a plain number, fine.
jllq: 5 is a plain number, fine.
hppd: rswb * pfnd is an expression for the todo stack.
mrtl: 16 is a plain number, fine.
pvlp: 3 is a plain number, fine.
dwpr: 11 is a plain number, fine.
fpvb: 2 is a plain number, fine.
bjrj: mcqn + jzgp is an expression for the todo stack.
hdsp: ttdt * mczm is an expression for the todo stack.
hrsn: 3 is a plain number, fine.
dmqv: 2 is a plain number, fine.
zbfv: lnbr * zfdw is an expression for the todo stack.
vwdj: drfv * ncjd is an expression for the todo stack.
rjst: mzcf + zldn is an expression for the todo stack.
bdsp: qclb + qrjr is an expression for the todo stack.
pmqr: 1 is a plain number, fine.
lpjz: brhh - zdjv is an expression for the todo stack.
dfpv: llhn * wpzc is an expression for the todo stack.
pwjn: nmvg + szrd is an expression for the todo stack.
qsll: 4 is a plain number, fine.
jsbw: 5 is a plain number, fine.
wgdr: rpmz + qbdz is an expression for the todo stack.
clgl: fjss / gbjs is an expression for the todo stack.
wrfr: pzpz * lfwp is an expression for the todo stack.
pnvj: qrjc / zlpf is an expression for the todo stack.
btmp: lbdb * fzwh is an expression for the todo stack.
dbmd: 11 is a plain number, fine.
wszs: nnjm * lcdn is an expression for the todo stack.
lbgm: vnpf * wzlh is an expression for the todo stack.
mvgt: rsrz * sbzp is an expression for the todo stack.
wlnf: 9 is a plain number, fine.
tfvm: drvf * cmrg is an expression for the todo stack.
rmbn: cbnq + crwn is an expression for the todo stack.
gszb: vqpf + brbg is an expression for the todo stack.
tcbw: 3 is a plain number, fine.
hsvl: 1 is a plain number, fine.
mtbv: gbhm + hlfl is an expression for the todo stack.
gwld: gmqt / mdgn is an expression for the todo stack.
wzww: dwhq + hfch is an expression for the todo stack.
zldn: zlbm * mwls is an expression for the todo stack.
jcjj: 3 is a plain number, fine.
zzzc: 2 is a plain number, fine.
gdvz: 13 is a plain number, fine.
zzpg: 3 is a plain number, fine.
mlrp: 2 is a plain number, fine.
mqng: 2 is a plain number, fine.
nntf: 5 is a plain number, fine.
cqbr: 5 is a plain number, fine.
nhrt: 3 is a plain number, fine.
zgdg: 3 is a plain number, fine.
qrjc: tvbh * ngng is an expression for the todo stack.
cbcf: 6 is a plain number, fine.
hrtp: 6 is a plain number, fine.
nssj: gslf * tcsl is an expression for the todo stack.
llff: 7 is a plain number, fine.
dlgh: 13 is a plain number, fine.
lswr: lmrl * nvwj is an expression for the todo stack.
gqws: 2 is a plain number, fine.
ncjd: frsc * jcng is an expression for the todo stack.
bgzs: 6 is a plain number, fine.
tgwc: fcjj / mlrp is an expression for the todo stack.
wwsc: 4 is a plain number, fine.
whgn: hgbb * qpsr is an expression for the todo stack.
qhvs: tsrw * vmqz is an expression for the todo stack.
fbdg: jlgj * mlfr is an expression for the todo stack.
qdbt: 2 is a plain number, fine.
cmbw: ggsl + dlfg is an expression for the todo stack.
qwwg: bnlg * gbtv is an expression for the todo stack.
nvwj: 5 is a plain number, fine.
brwm: tqhm - pvpm is an expression for the todo stack.
dtfj: zsfr - hdjh is an expression for the todo stack.
snfr: 2 is a plain number, fine.
pmfs: 2 is a plain number, fine.
bljw: 2 is a plain number, fine.
mczm: 3 is a plain number, fine.
bhmj: jcpz * dqfd is an expression for the todo stack.
fswn: qcvv - fbsb is an expression for the todo stack.
ptff: dbjl * bvvd is an expression for the todo stack.
cwch: hgjq * wfhm is an expression for the todo stack.
ggvb: wgrl + cqzf is an expression for the todo stack.
prgh: qggf * nwsv is an expression for the todo stack.
tmqv: bhjq + hsvn is an expression for the todo stack.
wldt: 2 is a plain number, fine.
hfsw: fzvw / dgzg is an expression for the todo stack.
ttwd: 2 is a plain number, fine.
ctzw: 13 is a plain number, fine.
rwss: hcjw / rvpf is an expression for the todo stack.
cgdd: jhts + zbfv is an expression for the todo stack.
sghh: 2 is a plain number, fine.
mhws: srft * lhmq is an expression for the todo stack.
qfcf: pzzm - jtrs is an expression for the todo stack.
pdsj: mvjf * hshp is an expression for the todo stack.
bhcp: rnwm + bsfr is an expression for the todo stack.
vsvb: 9 is a plain number, fine.
lsbc: rtmg + gtjw is an expression for the todo stack.
lmrn: 17 is a plain number, fine.
vlnh: lltb * ggfr is an expression for the todo stack.
cgrs: 1 is a plain number, fine.
trwt: 5 is a plain number, fine.
vbww: 3 is a plain number, fine.
bzps: bqbm * fpvt is an expression for the todo stack.
dddb: 3 is a plain number, fine.
qsnq: rzbs + dhmp is an expression for the todo stack.
nzgd: 2 is a plain number, fine.
tnbj: 10 is a plain number, fine.
rtlf: wpnd * hpdb is an expression for the todo stack.
mdhq: 4 is a plain number, fine.
qnzf: gbjm * slrq is an expression for the todo stack.
lfnn: jsfv * flwj is an expression for the todo stack.
dmtr: wfft * gwmn is an expression for the todo stack.
mmcn: 3 is a plain number, fine.
rqwt: tmvt * drml is an expression for the todo stack.
rvbv: 2 is a plain number, fine.
zrnf: 3 is a plain number, fine.
gszl: 2 is a plain number, fine.
lnwp: 2 is a plain number, fine.
ldlt: prgr * tpzc is an expression for the todo stack.
rdsv: rjls + lwbb is an expression for the todo stack.
sstv: cdtv * qmdj is an expression for the todo stack.
lhrp: sdzn + lwsp is an expression for the todo stack.
tcwm: tqsb * pbsd is an expression for the todo stack.
rrtr: njcm * nnzg is an expression for the todo stack.
zrjq: nznr / bccw is an expression for the todo stack.
wfps: 8 is a plain number, fine.
hpwz: jcpq * ttrs is an expression for the todo stack.
qmwq: 3 is a plain number, fine.
qgft: 2 is a plain number, fine.
fmjl: 5 is a plain number, fine.
jcfg: 17 is a plain number, fine.
bngt: 7 is a plain number, fine.
wzgz: 9 is a plain number, fine.
pdqp: 3 is a plain number, fine.
mncm: 19 is a plain number, fine.
fzzp: qjqr * spnd is an expression for the todo stack.
mcmj: vqrw + ccpr is an expression for the todo stack.
jdfz: 2 is a plain number, fine.
nhjs: mjdq + mdhq is an expression for the todo stack.
bpwh: 1 is a plain number, fine.
fzgw: nrrr * ngmh is an expression for the todo stack.
hqsf: svbj * pjch is an expression for the todo stack.
rflz: 4 is a plain number, fine.
zhrt: wlzs + qvhf is an expression for the todo stack.
glqg: 9 is a plain number, fine.
qdhg: 1 is a plain number, fine.
whqf: jdlj * mwmv is an expression for the todo stack.
dhwc: lsbc + brcv is an expression for the todo stack.
psws: nzzh + nfwb is an expression for the todo stack.
rswg: rtnc + zgcl is an expression for the todo stack.
trfr: 2 is a plain number, fine.
dnzt: bqgb * hbtf is an expression for the todo stack.
nhgc: nvfr * fcnl is an expression for the todo stack.
jmdf: 5 is a plain number, fine.
psnc: vflt * jcsc is an expression for the todo stack.
mlhj: pwtv * nhrt is an expression for the todo stack.
tsrt: 4 is a plain number, fine.
ltdw: 5 is a plain number, fine.
sjsp: 3 is a plain number, fine.
mwls: 7 is a plain number, fine.
hmnm: 10 is a plain number, fine.
gjcw: 3 is a plain number, fine.
fwpr: pswr + bcbg is an expression for the todo stack.
lhcm: vzrs * jbqj is an expression for the todo stack.
llhn: 3 is a plain number, fine.
hwnm: tlgw + qdwv is an expression for the todo stack.
rchm: 2 is a plain number, fine.
sttd: 3 is a plain number, fine.
dhgd: pzwm + bzhc is an expression for the todo stack.
lcfj: 17 is a plain number, fine.
bcdt: btbc / rzgq is an expression for the todo stack.
vnhf: bgql + nzqz is an expression for the todo stack.
fhnr: 4 is a plain number, fine.
jtlf: jbjl * vncg is an expression for the todo stack.
qnqz: jglm * bjvw is an expression for the todo stack.
dctp: 2 is a plain number, fine.
jnbv: hshd + nscv is an expression for the todo stack.
qnst: 2 is a plain number, fine.
vsdt: qpdh * dmqq is an expression for the todo stack.
lffg: thtq / tsbm is an expression for the todo stack.
stsz: 14 is a plain number, fine.
qfhf: 3 is a plain number, fine.
njcm: lmfw + mlgg is an expression for the todo stack.
pfsq: 2 is a plain number, fine.
ppcf: qjfj + bnrb is an expression for the todo stack.
pgmj: gvnz + zmqr is an expression for the todo stack.
nwsv: 5 is a plain number, fine.
qhgc: 5 is a plain number, fine.
jltt: fgdv + zbhp is an expression for the todo stack.
vplr: tpbf * ffbj is an expression for the todo stack.
brdn: chfb + hcsb is an expression for the todo stack.
rjrf: 4 is a plain number, fine.
mlzd: 2 is a plain number, fine.
hmgn: djbw * hzwp is an expression for the todo stack.
rhrq: 4 is a plain number, fine.
btbc: hfsw - stdj is an expression for the todo stack.
lwnq: 11 is a plain number, fine.
jsfv: 4 is a plain number, fine.
fpvt: grmh * jgsv is an expression for the todo stack.
dmqq: 3 is a plain number, fine.
trms: nvsf + qfst is an expression for the todo stack.
bhpw: mssb / wgvh is an expression for the todo stack.
lmdn: 2 is a plain number, fine.
ggvl: mrtl + jgtq is an expression for the todo stack.
pqvv: lflw * mtqq is an expression for the todo stack.
jmsw: 3 is a plain number, fine.
lnhh: zbjp + btqs is an expression for the todo stack.
sfdp: 2 is a plain number, fine.
qhjl: 3 is a plain number, fine.
dpqg: 2 is a plain number, fine.
qrff: 2 is a plain number, fine.
gsch: 4 is a plain number, fine.
nvhd: jjtn * gmcs is an expression for the todo stack.
dzdq: 4 is a plain number, fine.
tzvw: 8 is a plain number, fine.
lvmh: bdfs * wbqz is an expression for the todo stack.
jtmt: hqrm / lmdn is an expression for the todo stack.
gjfh: ffgz / nqsv is an expression for the todo stack.
cpzp: qncm + wdwf is an expression for the todo stack.
nzzw: 3 is a plain number, fine.
pwdf: 7 is a plain number, fine.
wjrt: 2 is a plain number, fine.
ffdf: mqqr / zpzp is an expression for the todo stack.
dsrz: 2 is a plain number, fine.
ddjn: 5 is a plain number, fine.
cljj: nljj + gzch is an expression for the todo stack.
hcwd: gtqp - jlwb is an expression for the todo stack.
scfs: qsnq - pblr is an expression for the todo stack.
pgbh: mznv + sldh is an expression for the todo stack.
rpmz: tght + dlfz is an expression for the todo stack.
qpzb: vnrf * mfnp is an expression for the todo stack.
vqdd: 7 is a plain number, fine.
jmnz: lpzl * fpgs is an expression for the todo stack.
stfm: 4 is a plain number, fine.
mjdq: hpzw / twrn is an expression for the todo stack.
gdww: bfsb / cjqh is an expression for the todo stack.
fdvd: 2 is a plain number, fine.
rscn: 11 is a plain number, fine.
bsdh: fbfg * mfbv is an expression for the todo stack.
zphm: psnv * tsvc is an expression for the todo stack.
ttds: vhpg * pmhs is an expression for the todo stack.
cvtc: 1 is a plain number, fine.
sptq: 4 is a plain number, fine.
jchv: 8 is a plain number, fine.
jwnv: 3 is a plain number, fine.
tfdh: 2 is a plain number, fine.
ndph: slcv + rrvj is an expression for the todo stack.
jtwc: cngl * fdvd is an expression for the todo stack.
nggs: 6 is a plain number, fine.
cmrg: vpvz * ppvh is an expression for the todo stack.
gtqp: qjqd / lvls is an expression for the todo stack.
tflh: 4 is a plain number, fine.
tshp: cnlh + hsvl is an expression for the todo stack.
slht: 5 is a plain number, fine.
lnpw: 2 is a plain number, fine.
mzdb: jqng + ghlb is an expression for the todo stack.
jzlh: 2 is a plain number, fine.
zqzw: vnrz * cqpj is an expression for the todo stack.
nsqr: 4 is a plain number, fine.
nwvw: 3 is a plain number, fine.
htqz: 8 is a plain number, fine.
vlzn: zssf + tnnc is an expression for the todo stack.
fcwt: vhmn / cqtt is an expression for the todo stack.
tjlv: 3 is a plain number, fine.
jszs: zztq * mgjb is an expression for the todo stack.
bmvb: hrbj * cmdr is an expression for the todo stack.
vlgs: tvzh * zjvw is an expression for the todo stack.
tgtg: thnc / cdgd is an expression for the todo stack.
ghsw: bdzl * qdmt is an expression for the todo stack.
cwgg: gmbs + mchq is an expression for the todo stack.
cvnw: 12 is a plain number, fine.
zhgz: 2 is a plain number, fine.
rtmg: 2 is a plain number, fine.
tlzs: 2 is a plain number, fine.
srqs: 5 is a plain number, fine.
wnwq: jbnf - zwrn is an expression for the todo stack.
nlnw: hzhf + ztvc is an expression for the todo stack.
drvf: 13 is a plain number, fine.
mfnz: 5 is a plain number, fine.
lqtm: trqf + mlhj is an expression for the todo stack.
dhnp: 2 is a plain number, fine.
dtrf: gwws * jhnh is an expression for the todo stack.
ggml: rmbm + tjdp is an expression for the todo stack.
mggf: 3 is a plain number, fine.
zfdd: 2 is a plain number, fine.
npwz: 3 is a plain number, fine.
zlbm: 9 is a plain number, fine.
dzcg: 2 is a plain number, fine.
hshp: 3 is a plain number, fine.
cntz: dclg * jvht is an expression for the todo stack.
mrgs: dmcl - zmql is an expression for the todo stack.
slpm: tqlz + jfpz is an expression for the todo stack.
ggmm: 3 is a plain number, fine.
mcqq: 7 is a plain number, fine.
nnfb: gflj * smfn is an expression for the todo stack.
dhzm: hbjt + rmbr is an expression for the todo stack.
pzdl: 2 is a plain number, fine.
zcvv: szfd + msqm is an expression for the todo stack.
trhb: 2 is a plain number, fine.
rdvh: 7 is a plain number, fine.
pwpl: 2 is a plain number, fine.
qddq: 5 is a plain number, fine.
vpgp: 5 is a plain number, fine.
vssc: zwqj * cmbv is an expression for the todo stack.
dmhj: flqq - cwvp is an expression for the todo stack.
gbsr: 2 is a plain number, fine.
jzrg: 10 is a plain number, fine.
vgwn: 2 is a plain number, fine.
hqft: 10 is a plain number, fine.
cqzs: 5 is a plain number, fine.
sbzd: 4 is a plain number, fine.
btdt: phtj - ndlf is an expression for the todo stack.
flmc: wwss + zdvp is an expression for the todo stack.
svfr: qzwt + nhgz is an expression for the todo stack.
jhnh: htfq * qbzh is an expression for the todo stack.
bfvq: 3 is a plain number, fine.
zrzv: lnnq + gnjv is an expression for the todo stack.
wbvm: 2 is a plain number, fine.
tqzf: 3 is a plain number, fine.
nvvv: dgbn * spcb is an expression for the todo stack.
sqjf: 3 is a plain number, fine.
dmhb: 2 is a plain number, fine.
vvlw: 3 is a plain number, fine.
wmcv: mdqz * ctmt is an expression for the todo stack.
hbgd: hspj * sbcs is an expression for the todo stack.
vpss: zrfv + nvtd is an expression for the todo stack.
zztq: 3 is a plain number, fine.
wnlr: ddlb + qpgq is an expression for the todo stack.
vlfp: 2 is a plain number, fine.
plqr: vhjz + cbcl is an expression for the todo stack.
mjdp: ljpr * nbcq is an expression for the todo stack.
scjv: hdrp * cmnq is an expression for the todo stack.
jgtq: hgbw * hmgn is an expression for the todo stack.
vzlt: gcjm + jjch is an expression for the todo stack.
twpl: jtmh + pgwj is an expression for the todo stack.
jfmw: 3 is a plain number, fine.
jcpq: hjmh + wwhp is an expression for the todo stack.
fqss: jgpt * sgrn is an expression for the todo stack.
dbfb: nhwd * tzzw is an expression for the todo stack.
lrtt: 7 is a plain number, fine.
whjf: vbmh + pqwf is an expression for the todo stack.
lmrz: 2 is a plain number, fine.
bcbg: bbll * nbsm is an expression for the todo stack.
twbn: 19 is a plain number, fine.
chmd: 3 is a plain number, fine.
vtdt: 5 is a plain number, fine.
jhrz: 11 is a plain number, fine.
tvzh: 3 is a plain number, fine.
vbqt: 2 is a plain number, fine.
fwqc: czfc - rrzv is an expression for the todo stack.
ltmj: 5 is a plain number, fine.
hdfz: dhtf / fjmd is an expression for the todo stack.
glfw: 3 is a plain number, fine.
wsjt: hcwd * bbdf is an expression for the todo stack.
jrpm: 4 is a plain number, fine.
vgmt: lfbg + wfps is an expression for the todo stack.
nwjp: lfbm / fbgq is an expression for the todo stack.
qlrc: 2 is a plain number, fine.
bhcl: 3 is a plain number, fine.
qmsm: mrbz / nlwl is an expression for the todo stack.
nhvw: 5 is a plain number, fine.
ndfm: lhlp * bhcl is an expression for the todo stack.
lgrv: lzfz + tlsq is an expression for the todo stack.
bvwd: 2 is a plain number, fine.
gtgv: snvw / jtmt is an expression for the todo stack.
ttrs: 2 is a plain number, fine.
pgpb: bhmj * nssh is an expression for the todo stack.
qrnh: bmvj + zhth is an expression for the todo stack.
prhw: lpbs * dqbq is an expression for the todo stack.
jmqd: 4 is a plain number, fine.
rqjg: 3 is a plain number, fine.
hvdj: vwqb + qgnt is an expression for the todo stack.
bnlg: 3 is a plain number, fine.
pmpl: 2 is a plain number, fine.
cwqv: 14 is a plain number, fine.
gzwc: 3 is a plain number, fine.
tnbb: 2 is a plain number, fine.
jdlt: hzpm / lnwp is an expression for the todo stack.
sfqj: 4 is a plain number, fine.
bzdc: qsjj * rfwp is an expression for the todo stack.
vmnl: qbrf / mpdd is an expression for the todo stack.
mdmd: 2 is a plain number, fine.
bbhm: 7 is a plain number, fine.
vsmd: btmp * hgmr is an expression for the todo stack.
hccl: gdzl / trfr is an expression for the todo stack.
pvtr: 9 is a plain number, fine.
dmwb: slwq + qbqs is an expression for the todo stack.
qqhs: hqft + gdvz is an expression for the todo stack.
dtpc: rgrf + rftg is an expression for the todo stack.
bdwd: 13 is a plain number, fine.
grlf: qcrv * bbhq is an expression for the todo stack.
pzlw: 5 is a plain number, fine.
hjqb: 2 is a plain number, fine.
bgvq: hwtj + ltzc is an expression for the todo stack.
vrzd: 4 is a plain number, fine.
zqmf: qfzj - msnn is an expression for the todo stack.
mgtt: bbhm * fpvb is an expression for the todo stack.
tbzr: 3 is a plain number, fine.
ndhs: tnlj + hdvz is an expression for the todo stack.
qzfj: 4 is a plain number, fine.
vtmn: tqmb * bbvl is an expression for the todo stack.
znnf: rvbv * rscn is an expression for the todo stack.
lncs: qzsj - ngjc is an expression for the todo stack.
ntgl: 5 is a plain number, fine.
jpsg: 7 is a plain number, fine.
cjbf: fzwg + rsqm is an expression for the todo stack.
djfz: vjlz + hhtb is an expression for the todo stack.
ztdq: 5 is a plain number, fine.
qpdh: 3 is a plain number, fine.
qmrq: 2 is a plain number, fine.
qzwt: 3 is a plain number, fine.
cwvj: 17 is a plain number, fine.
cmnh: 3 is a plain number, fine.
dzqj: 6 is a plain number, fine.
bdfs: tghr + mwhf is an expression for the todo stack.
lndz: 7 is a plain number, fine.
lbpg: 4 is a plain number, fine.
vcgb: glnl * blwr is an expression for the todo stack.
hrwm: 2 is a plain number, fine.
rvwz: lshr + lnmz is an expression for the todo stack.
vpwg: 16 is a plain number, fine.
wslc: bdcv * jdrn is an expression for the todo stack.
jtqr: qvds + pdsj is an expression for the todo stack.
zmqr: lhpr * qldd is an expression for the todo stack.
fprp: 11 is a plain number, fine.
jqrh: 2 is a plain number, fine.
vnvw: 2 is a plain number, fine.
vlss: 2 is a plain number, fine.
qpgm: whhb * vmrr is an expression for the todo stack.
wmzq: spwg / wghp is an expression for the todo stack.
qjqr: dtrf - rlzd is an expression for the todo stack.
qpbl: 5 is a plain number, fine.
qbhd: pjbm * sjwq is an expression for the todo stack.
vnmd: gjgs * ghhj is an expression for the todo stack.
nsjz: jbqr + vhzd is an expression for the todo stack.
wfmc: jnwq / vnbp is an expression for the todo stack.
mdmv: mvns + vdjc is an expression for the todo stack.
hcjw: rsfb * rvfw is an expression for the todo stack.
nwmp: hrwm * qfcf is an expression for the todo stack.
gwmn: 5 is a plain number, fine.
zhss: 3 is a plain number, fine.
qgpl: 10 is a plain number, fine.
pfnd: sqjf * fmjh is an expression for the todo stack.
rsfb: nvhd / tfcr is an expression for the todo stack.
clrl: 2 is a plain number, fine.
vnrf: 3 is a plain number, fine.
hzgf: 3 is a plain number, fine.
dhqz: sdpp + fdtp is an expression for the todo stack.
hscz: 2 is a plain number, fine.
brzt: 18 is a plain number, fine.
qnhh: zzfj + hgtp is an expression for the todo stack.
lgzs: 5 is a plain number, fine.
zvhs: hdsp * zwff is an expression for the todo stack.
dzfr: 2 is a plain number, fine.
wzlh: 2 is a plain number, fine.
lnbr: 8 is a plain number, fine.
vzqg: 3 is a plain number, fine.
mhcm: 14 is a plain number, fine.
mhsz: gftz + zsqb is an expression for the todo stack.
jwtg: lqgn + gqtd is an expression for the todo stack.
qbzh: 5 is a plain number, fine.
slpf: 2 is a plain number, fine.
pzpz: 4 is a plain number, fine.
jjzv: brwm * rgfr is an expression for the todo stack.
zfzt: 5 is a plain number, fine.
mmml: rgvf * tnbr is an expression for the todo stack.
llnc: 2 is a plain number, fine.
vsqp: pjmr + cmlh is an expression for the todo stack.
sjbj: ppvc * gsjq is an expression for the todo stack.
hfvv: wslc - whqf is an expression for the todo stack.
rthw: 11 is a plain number, fine.
bldf: nmrt * fldp is an expression for the todo stack.
nntd: 6 is a plain number, fine.
jnzb: csfh * rfmr is an expression for the todo stack.
dlfd: fjds * ltld is an expression for the todo stack.
vhht: 3 is a plain number, fine.
mfbs: rmdr + ftsd is an expression for the todo stack.
dbqm: vsvb + zptg is an expression for the todo stack.
wshh: 4 is a plain number, fine.
vjln: 2 is a plain number, fine.
stzh: wrpm * qtlm is an expression for the todo stack.
hqrm: mlsc * jpsg is an expression for the todo stack.
swcq: 2 is a plain number, fine.
ndgc: 7 is a plain number, fine.
fmvz: hbbq * czwg is an expression for the todo stack.
gqcz: 13 is a plain number, fine.
ztdn: tnmd + npqp is an expression for the todo stack.
cpnv: nbqm / tgtg is an expression for the todo stack.
mpbs: 2 is a plain number, fine.
cmtt: 4 is a plain number, fine.
rrzv: nnfq + cmtt is an expression for the todo stack.
vdgf: mqcq * qhvn is an expression for the todo stack.
wzrt: lngv - zpfz is an expression for the todo stack.
hzcm: rsnb * vpll is an expression for the todo stack.
qtdg: fbfh + wngv is an expression for the todo stack.
gnfz: dwsp + dfzf is an expression for the todo stack.
ndvf: 19 is a plain number, fine.
bdfc: qgff + tlhq is an expression for the todo stack.
zjvw: btsb - trgm is an expression for the todo stack.
wtmt: wtqc * pmtw is an expression for the todo stack.
lvcm: 5 is a plain number, fine.
rnwt: nwpf * qgzj is an expression for the todo stack.
pzgh: 2 is a plain number, fine.
gnwb: 7 is a plain number, fine.
bdbh: dbmd * vbgc is an expression for the todo stack.
gphc: cdlq * tbzt is an expression for the todo stack.
fmjh: 2 is a plain number, fine.
rmpd: 12 is a plain number, fine.
bgjj: 11 is a plain number, fine.
qpqh: tzds + hjzv is an expression for the todo stack.
dvtc: zfzt + slht is an expression for the todo stack.
fwzp: 3 is a plain number, fine.
hvtg: 4 is a plain number, fine.
bzhc: bhlh * fqvz is an expression for the todo stack.
npbc: fmvh + hwrj is an expression for the todo stack.
bfcq: jrmq * clwh is an expression for the todo stack.
bbbm: tmbj * cjfg is an expression for the todo stack.
dhdz: vcrt * tsbj is an expression for the todo stack.
hgzm: 2 is a plain number, fine.
whfd: htzb + zfgc is an expression for the todo stack.
lttm: 2 is a plain number, fine.
lrnh: 5 is a plain number, fine.
hnst: sbbv * bjhh is an expression for the todo stack.
vbjz: sldf * gwwf is an expression for the todo stack.
gqmp: 5 is a plain number, fine.
szbv: rjdm + jttj is an expression for the todo stack.
zjrv: dhhw * pdtj is an expression for the todo stack.
qmtz: zqvq * zdjn is an expression for the todo stack.
cfch: twbn + pgbb is an expression for the todo stack.
ttfc: lmvh * wmbv is an expression for the todo stack.
jwnt: lmrz * svfr is an expression for the todo stack.
nqhm: 13 is a plain number, fine.
qnwn: czwj / hgmg is an expression for the todo stack.
gcds: 5 is a plain number, fine.
thjf: rwns * nczd is an expression for the todo stack.
ztbw: rlcm + vsrf is an expression for the todo stack.
gnfc: 3 is a plain number, fine.
fqmn: 13 is a plain number, fine.
fglb: lcpf * cgqs is an expression for the todo stack.
sltt: nztr * hpnp is an expression for the todo stack.
fttp: 2 is a plain number, fine.
nsfp: zlvt + qzzm is an expression for the todo stack.
zhth: lqld + bvww is an expression for the todo stack.
tght: cvff * wszs is an expression for the todo stack.
rhqz: 2 is a plain number, fine.
gjdc: btfw + njcc is an expression for the todo stack.
dphc: zhvf + fvlq is an expression for the todo stack.
cswj: plvg - fmth is an expression for the todo stack.
jnwq: bdnr * fvct is an expression for the todo stack.
cngl: 8 is a plain number, fine.
snjd: 9 is a plain number, fine.
jcng: 2 is a plain number, fine.
rstn: nfbt + tsgb is an expression for the todo stack.
shzb: mfmv * dmgs is an expression for the todo stack.
ndlf: ngfz + gbpd is an expression for the todo stack.
vcrl: lswr / rrbl is an expression for the todo stack.
pjmr: tmnn - mwgb is an expression for the todo stack.
nwrq: nsfp * mqng is an expression for the todo stack.
drml: 4 is a plain number, fine.
rjwg: qgpl + fjnt is an expression for the todo stack.
qtfw: 4 is a plain number, fine.
dqnm: gtcw * bjbt is an expression for the todo stack.
cnmh: dwph * tqzf is an expression for the todo stack.
szdh: ddbh * bdfc is an expression for the todo stack.
zbnv: tjnv * qlfg is an expression for the todo stack.
glnl: cgcm + wjsb is an expression for the todo stack.
gbjm: tnzz * dmfw is an expression for the todo stack.
rjsj: gszl * bshw is an expression for the todo stack.
cjrh: wjrt * gzwc is an expression for the todo stack.
snzb: thgv * bfln is an expression for the todo stack.
hwpq: 2 is a plain number, fine.
rsqv: 2 is a plain number, fine.
qgff: ffdf * tcfw is an expression for the todo stack.
lhvj: 5 is a plain number, fine.
vrcg: nwjp + bqtb is an expression for the todo stack.
tlsc: 3 is a plain number, fine.
wltb: snvj * prqz is an expression for the todo stack.
rsrb: 2 is a plain number, fine.
hhch: 5 is a plain number, fine.
pbfn: hhch * mdbh is an expression for the todo stack.
hcgs: 18 is a plain number, fine.
hvjb: cmql + mgtt is an expression for the todo stack.
wsmd: 2 is a plain number, fine.
rjtc: 2 is a plain number, fine.
ctjg: pnqn + dfwh is an expression for the todo stack.
gflj: fggm * hljd is an expression for the todo stack.
glzb: vpcf + vlmj is an expression for the todo stack.
btrb: nzds * rhtd is an expression for the todo stack.
ptrb: 2 is a plain number, fine.
zfrq: 5 is a plain number, fine.
sbcs: 2 is a plain number, fine.
tnhf: 2 is a plain number, fine.
dgbn: 2 is a plain number, fine.
hfch: 11 is a plain number, fine.
zwgp: 2 is a plain number, fine.
rnsn: 3 is a plain number, fine.
psjq: 6 is a plain number, fine.
jmln: 9 is a plain number, fine.
mgnw: 4 is a plain number, fine.
hcsf: hzcm / dpcj is an expression for the todo stack.
fqjt: qtbp + nfcp is an expression for the todo stack.
jlwb: dvrg * wwsc is an expression for the todo stack.
rgrf: pzcv + cfzn is an expression for the todo stack.
chth: tlgz * rgnt is an expression for the todo stack.
trqf: zmhp * ltwn is an expression for the todo stack.
cphq: 2 is a plain number, fine.
mnrt: qqjf + fwlc is an expression for the todo stack.
cqtt: vqws * dhjp is an expression for the todo stack.
mjms: gwsq + glzb is an expression for the todo stack.
ffbj: 2 is a plain number, fine.
hwtj: wgss + hzmw is an expression for the todo stack.
bfct: jszs / ltbc is an expression for the todo stack.
zlvt: 18 is a plain number, fine.
lldv: rbgm + dgwm is an expression for the todo stack.
wlcr: vdgf + gllg is an expression for the todo stack.
hljd: 2 is a plain number, fine.
sjpq: 1 is a plain number, fine.
bvzm: qbhd - rttm is an expression for the todo stack.
gmvc: rpzm * nntp is an expression for the todo stack.
fvzh: 14 is a plain number, fine.
trmz: tqqh * vpff is an expression for the todo stack.
prtw: 20 is a plain number, fine.
pvvt: hlzl + dlmt is an expression for the todo stack.
qmdj: nmcr + spcv is an expression for the todo stack.
nlwf: pqfh * csct is an expression for the todo stack.
bqgb: 4 is a plain number, fine.
bvnq: mztw * cbnw is an expression for the todo stack.
sdfb: swwc + dzhw is an expression for the todo stack.
cwmz: 2 is a plain number, fine.
swwc: stcn / wdqz is an expression for the todo stack.
zfgc: jmnh * mdmm is an expression for the todo stack.
ltdh: 3 is a plain number, fine.
jwdv: zfcr * dhjw is an expression for the todo stack.
hddn: fmjl * sptt is an expression for the todo stack.
bsfr: wtmt + fwfq is an expression for the todo stack.
rzwp: 5 is a plain number, fine.
zzfj: 6 is a plain number, fine.
bbwp: tflh + jtcj is an expression for the todo stack.
rmbr: snjd + qwwh is an expression for the todo stack.
nvsf: mhsb + rscg is an expression for the todo stack.
fwzc: shtm - mvmw is an expression for the todo stack.
njsw: dccg * mzvs is an expression for the todo stack.
rlzd: crpd + tstq is an expression for the todo stack.
rbcb: czbw - tqpv is an expression for the todo stack.
cnlh: dhtj * bpjv is an expression for the todo stack.
rlcm: 1 is a plain number, fine.
twqn: 3 is a plain number, fine.
csvm: 7 is a plain number, fine.
fhqw: qcbc / rsrb is an expression for the todo stack.
vllt: 3 is a plain number, fine.
wgvh: ppzb + zmss is an expression for the todo stack.
jmnh: wzww + vqdr is an expression for the todo stack.
pgsd: 2 is a plain number, fine.
whhb: vlpr * nzzw is an expression for the todo stack.
fnrq: dlfd - tjjh is an expression for the todo stack.
ttcb: qrff * gphc is an expression for the todo stack.
sglf: mjgq * dtpc is an expression for the todo stack.
mhtn: djhj * lbpg is an expression for the todo stack.
vvmd: 2 is a plain number, fine.
qctq: lncs + tqjz is an expression for the todo stack.
ltvl: 12 is a plain number, fine.
cmsl: qgbs + qtvs is an expression for the todo stack.
gnhm: brvq + vldd is an expression for the todo stack.
qsdz: 3 is a plain number, fine.
dnqf: 3 is a plain number, fine.
lcbh: 8 is a plain number, fine.
spnd: 5 is a plain number, fine.
wpzc: 11 is a plain number, fine.
pjsf: qzpn * rzwp is an expression for the todo stack.
rhht: qtfw + nhld is an expression for the todo stack.
fgbl: 15 is a plain number, fine.
fqvz: zhfh + vfmq is an expression for the todo stack.
dbmf: 3 is a plain number, fine.
flwj: 4 is a plain number, fine.
rmzh: 3 is a plain number, fine.
rjgc: 4 is a plain number, fine.
snpq: cfch + fjtz is an expression for the todo stack.
zqjr: 2 is a plain number, fine.
htsd: 5 is a plain number, fine.
qjqd: mzvc + wwmv is an expression for the todo stack.
gfpc: 2 is a plain number, fine.
dfrp: lrmn * llql is an expression for the todo stack.
ppvh: 2 is a plain number, fine.
rmhm: vnhf * pmlw is an expression for the todo stack.
vhgd: zjfs * zgtw is an expression for the todo stack.
rfrr: 5 is a plain number, fine.
zhcf: ffdv * qzqh is an expression for the todo stack.
rmzr: bcbd + gqcb is an expression for the todo stack.
qvfb: trqs * njgp is an expression for the todo stack.
qgmr: 5 is a plain number, fine.
sncv: vjnf * gszb is an expression for the todo stack.
cwmw: 3 is a plain number, fine.
wtnn: vpbr - fcfv is an expression for the todo stack.
zfvc: 13 is a plain number, fine.
gztr: dcvd - dgnd is an expression for the todo stack.
sptr: 4 is a plain number, fine.
hwrr: dbfb + rjsj is an expression for the todo stack.
zsrr: hfvv + pfwc is an expression for the todo stack.
slrq: 2 is a plain number, fine.
twrn: 2 is a plain number, fine.
qpsr: 7 is a plain number, fine.
fdjt: 3 is a plain number, fine.
pwvl: ptcl + fwqh is an expression for the todo stack.
csct: 7 is a plain number, fine.
vtcl: jbwr + rbdh is an expression for the todo stack.
phlq: 2 is a plain number, fine.
ntpl: wnnc * pwjn is an expression for the todo stack.
zzpr: 9 is a plain number, fine.
bpjv: 7 is a plain number, fine.
hpzw: jqss * zfdd is an expression for the todo stack.
lbdb: 2 is a plain number, fine.
bvbp: 4 is a plain number, fine.
gllg: wlcn * tqzz is an expression for the todo stack.
hdlj: 1 is a plain number, fine.
vdgc: 14 is a plain number, fine.
dbbw: twmt * vhgd is an expression for the todo stack.
gpdv: 2 is a plain number, fine.
plfn: cwmz * gvlz is an expression for the todo stack.
ldhd: wsgj * ffdn is an expression for the todo stack.
cgtp: 2 is a plain number, fine.
bbqc: 4 is a plain number, fine.
znsz: pngn * qvsp is an expression for the todo stack.
dcjp: tcjp + lzgf is an expression for the todo stack.
wnml: 14 is a plain number, fine.
gbcl: bgzs + gzvn is an expression for the todo stack.
mgjb: 4 is a plain number, fine.
tcvr: 5 is a plain number, fine.
nhtm: 3 is a plain number, fine.
jmnv: rvmz + bvzm is an expression for the todo stack.
vncg: dnzt + strv is an expression for the todo stack.
ddff: 10 is a plain number, fine.
twfn: qbnc * tvtg is an expression for the todo stack.
zjzs: 2 is a plain number, fine.
vgqq: 4 is a plain number, fine.
mwnv: 2 is a plain number, fine.
cdlq: 3 is a plain number, fine.
tvtg: 5 is a plain number, fine.
wpnd: pqvq + qqhs is an expression for the todo stack.
dtbc: jwtj * vsqp is an expression for the todo stack.
mjgq: 13 is a plain number, fine.
ffqb: 8 is a plain number, fine.
gbhm: 3 is a plain number, fine.
hbtg: mjcr * mqmq is an expression for the todo stack.
zgtw: qnzf - nlqv is an expression for the todo stack.
lsdg: 2 is a plain number, fine.
qlfg: 3 is a plain number, fine.
grff: 5 is a plain number, fine.
jbjl: 2 is a plain number, fine.
qwsj: 3 is a plain number, fine.
zhfh: 6 is a plain number, fine.
psnv: 3 is a plain number, fine.
zfzp: 12 is a plain number, fine.
vhzd: 17 is a plain number, fine.
nnqn: stfm * nmgp is an expression for the todo stack.
gght: hscz * lrtg is an expression for the todo stack.
rtzl: qhhc * rcbb is an expression for the todo stack.
gcwd: 2 is a plain number, fine.
tssg: 2 is a plain number, fine.
qsgr: sgcc * wpdr is an expression for the todo stack.
jhdm: mjdp * fjlh is an expression for the todo stack.
lnmz: dfwg + vcbz is an expression for the todo stack.
hmnh: wchg / qhgc is an expression for the todo stack.
bwbl: 1 is a plain number, fine.
bgql: 4 is a plain number, fine.
bjbt: hhbl + dbpn is an expression for the todo stack.
nhpv: 2 is a plain number, fine.
lrdv: rzfl + hwdd is an expression for the todo stack.
hjbf: 3 is a plain number, fine.
vwng: 4 is a plain number, fine.
vmrc: hgff * tbjv is an expression for the todo stack.
hvpt: rqwt + pfnq is an expression for the todo stack.
lwqz: hvww / zrwf is an expression for the todo stack.
rqzl: 2 is a plain number, fine.
qzqg: 2 is a plain number, fine.
zhlj: ndsm / rvnn is an expression for the todo stack.
lstf: hfws * cwvj is an expression for the todo stack.
wtqc: 9 is a plain number, fine.
jzpr: qwwg * pzgh is an expression for the todo stack.
lwwb: 2 is a plain number, fine.
wgqs: rnws / mvmf is an expression for the todo stack.
pcjl: 15 is a plain number, fine.
wrfq: 2 is a plain number, fine.
njsn: jmln + mrgs is an expression for the todo stack.
vbhn: rmhm + jjns is an expression for the todo stack.
zmss: 5 is a plain number, fine.
vmrr: 3 is a plain number, fine.
vcrt: wpbb * hvgq is an expression for the todo stack.
qnvz: slnd * dlqv is an expression for the todo stack.
zwbl: 4 is a plain number, fine.
fjtz: 6 is a plain number, fine.
vgqs: 2 is a plain number, fine.
zdnj: 2 is a plain number, fine.
flrj: 9 is a plain number, fine.
fzrv: 5 is a plain number, fine.
qfmh: vssc + hccl is an expression for the todo stack.
ljpr: 5 is a plain number, fine.
djqv: 2 is a plain number, fine.
jzwp: 2 is a plain number, fine.
mwhf: fdvq * ssps is an expression for the todo stack.
lqgn: tzlp + fnfs is an expression for the todo stack.
pgbb: 4 is a plain number, fine.
nfwb: dsgj * bgvq is an expression for the todo stack.
cscp: 2 is a plain number, fine.
ltld: 3 is a plain number, fine.
zhvf: 3 is a plain number, fine.
rfwp: 3 is a plain number, fine.
sswd: ftlh + fplh is an expression for the todo stack.
gbvl: 1 is a plain number, fine.
brps: 2 is a plain number, fine.
pnqn: 4 is a plain number, fine.
vfnh: 2 is a plain number, fine.
dqbq: 3 is a plain number, fine.
tzpt: 1 is a plain number, fine.
jpvl: 2 is a plain number, fine.
cbrg: 4 is a plain number, fine.
csfh: bgwv + mjjz is an expression for the todo stack.
tcqg: rbwf + vpwg is an expression for the todo stack.
ztvc: 1 is a plain number, fine.
ngng: mdbg * nwsd is an expression for the todo stack.
dqsh: pzlw * wcjj is an expression for the todo stack.
dzjq: 4 is a plain number, fine.
bjhh: 2 is a plain number, fine.
vlts: qwfj * mlfd is an expression for the todo stack.
vtgm: 4 is a plain number, fine.
gqcb: wclj * lhrp is an expression for the todo stack.
pqfp: bcbv + lhbr is an expression for the todo stack.
cqcm: cmpm * wmfv is an expression for the todo stack.
qbhr: wnml * cbzs is an expression for the todo stack.
brhh: nhtm * rfvr is an expression for the todo stack.
hgmr: 2 is a plain number, fine.
pgrq: hdtp + psws is an expression for the todo stack.
pftt: 2 is a plain number, fine.
gztw: 3 is a plain number, fine.
gtqm: qczq + dzdq is an expression for the todo stack.
wwpw: qqtj * rzml is an expression for the todo stack.
vltb: 2 is a plain number, fine.
pgvp: tssg * jnbv is an expression for the todo stack.
cghm: tvsv * dbwp is an expression for the todo stack.
lhmq: 2 is a plain number, fine.
vlmj: bzdc + bssz is an expression for the todo stack.
mcvt: 2 is a plain number, fine.
hhsz: dtpg * prbf is an expression for the todo stack.
ppzb: 1 is a plain number, fine.
czbc: tczr + slpf is an expression for the todo stack.
nnzg: 4 is a plain number, fine.
lwtd: vzmc * ttwd is an expression for the todo stack.
pbln: vgvp * gjbd is an expression for the todo stack.
ffrs: 2 is a plain number, fine.
vqqh: zhrn / zgdg is an expression for the todo stack.
grqp: 2 is a plain number, fine.
hbrq: jfmw * djqv is an expression for the todo stack.
tqnd: 6 is a plain number, fine.
rmvl: 8 is a plain number, fine.
jfpz: jqrh * jjmv is an expression for the todo stack.
rmwh: 11 is a plain number, fine.
lvzt: fglb - fqss is an expression for the todo stack.
bdcr: 4 is a plain number, fine.
lzfz: wmdq - shql is an expression for the todo stack.
mpvb: vprd - vcfn is an expression for the todo stack.
ccch: 18 is a plain number, fine.
bzlt: 3 is a plain number, fine.
zrfv: 5 is a plain number, fine.
ggdg: cphq * dmbs is an expression for the todo stack.
gjgm: pzdl * blzn is an expression for the todo stack.
cmpm: 5 is a plain number, fine.
hbtf: 2 is a plain number, fine.
wlzl: czdw * nnsj is an expression for the todo stack.
fdtp: qgmr + wphf is an expression for the todo stack.
mthm: jmcg + dlfj is an expression for the todo stack.
dfwh: 3 is a plain number, fine.
ntvg: 17 is a plain number, fine.
rzbs: lnsv * pmtp is an expression for the todo stack.
ngsv: gqws * vshz is an expression for the todo stack.
hhbl: sgbt * wgzn is an expression for the todo stack.
jdgh: wrbt / pmfs is an expression for the todo stack.
qtvs: mfrs * fvfs is an expression for the todo stack.
bnvt: 5 is a plain number, fine.
dlbt: 4 is a plain number, fine.
phqq: nttr + zlzq is an expression for the todo stack.
jqbl: 3 is a plain number, fine.
cfzn: 13 is a plain number, fine.
dszn: 5 is a plain number, fine.
qtgg: 1 is a plain number, fine.
zmmp: dhwc - rwss is an expression for the todo stack.
zbhp: cqrh + jmnv is an expression for the todo stack.
tblf: njjw / jpvl is an expression for the todo stack.
ndjh: 3 is a plain number, fine.
hztf: 3 is a plain number, fine.
rrbw: 2 is a plain number, fine.
dqfd: 3 is a plain number, fine.
vvzt: prcj + hrhl is an expression for the todo stack.
pspq: dsvz * bqcz is an expression for the todo stack.
drnl: bpsz * ssdw is an expression for the todo stack.
wclj: 15 is a plain number, fine.
lmmw: rwpg * dzhz is an expression for the todo stack.
qqtj: 3 is a plain number, fine.
zpfn: dbqm + dbrd is an expression for the todo stack.
cbnw: 11 is a plain number, fine.
qcvv: vfzp * jwdv is an expression for the todo stack.
zjmw: zflg + bzrn is an expression for the todo stack.
pfnq: 1 is a plain number, fine.
mmbt: 2 is a plain number, fine.
wlcn: pwbl * dzqj is an expression for the todo stack.
jhtc: 3 is a plain number, fine.
qbdz: 8 is a plain number, fine.
mfrs: nwfq * bvwd is an expression for the todo stack.
hgbw: 20 is a plain number, fine.
qrsq: ggvl + mfbs is an expression for the todo stack.
mbbm: jjcl * gncw is an expression for the todo stack.
qzhw: hjpd - jzvr is an expression for the todo stack.
dlqv: 7 is a plain number, fine.
bwsq: mpss + jmgj is an expression for the todo stack.
vqws: 2 is a plain number, fine.
qdqr: nfgv * rglv is an expression for the todo stack.
dchw: 3 is a plain number, fine.
wrpm: 3 is a plain number, fine.
fzwg: lfcq * bbqc is an expression for the todo stack.
lpdr: jgwr * stvz is an expression for the todo stack.
mmsh: 3 is a plain number, fine.
jglm: 2 is a plain number, fine.
frjt: nqhm * vddb is an expression for the todo stack.
hzvv: zblw + njrm is an expression for the todo stack.
hzwp: 3 is a plain number, fine.
czzm: 1 is a plain number, fine.
jqng: gbhn + tqvl is an expression for the todo stack.
qvhf: rrbw + zntq is an expression for the todo stack.
dfzz: szsh + cwch is an expression for the todo stack.
lmnn: jvbh * fdjt is an expression for the todo stack.
hsrf: mbps / ptpl is an expression for the todo stack.
wdqz: 5 is a plain number, fine.
cbrv: 7 is a plain number, fine.
dmfw: gdhf + mtzt is an expression for the todo stack.
jmll: 2 is a plain number, fine.
fhfg: zqdl - dfsw is an expression for the todo stack.
ntmv: 19 is a plain number, fine.
rnwp: hfdc + vpqp is an expression for the todo stack.
lwbq: jswd * gcds is an expression for the todo stack.
mjcr: jbtb + gmwl is an expression for the todo stack.
zsfr: zprb + mqtv is an expression for the todo stack.
rvnn: 2 is a plain number, fine.
vbfz: pqgb * mcmj is an expression for the todo stack.
fzvw: dfrp * fmvz is an expression for the todo stack.
nvmb: mzdb * tzqz is an expression for the todo stack.
fvlq: 4 is a plain number, fine.
nwss: 5 is a plain number, fine.
drzg: jtlf + mhvn is an expression for the todo stack.
snzj: pgvp / hmrd is an expression for the todo stack.
hwgh: 3 is a plain number, fine.
wszh: nqbm * hrtp is an expression for the todo stack.
mdvf: wpds * qhgh is an expression for the todo stack.
cqqr: bstf - mwgt is an expression for the todo stack.
cjgp: hrzb + jdlt is an expression for the todo stack.
wwmv: hwrr + rzqd is an expression for the todo stack.
tgzw: 5 is a plain number, fine.
gbwj: zvgh * wvfg is an expression for the todo stack.
jmcg: wcvt * npwq is an expression for the todo stack.
jfpf: plqr + ldhd is an expression for the todo stack.
sdtm: tnbb * nmdg is an expression for the todo stack.
ddlb: zcrl / bglm is an expression for the todo stack.
qbsh: 9 is a plain number, fine.
lcdn: 9 is a plain number, fine.
zrff: 2 is a plain number, fine.
gtzb: fqrm + grqp is an expression for the todo stack.
snbb: 2 is a plain number, fine.
wwss: 11 is a plain number, fine.
vpvz: 5 is a plain number, fine.
bhzf: pgpb * tmwt is an expression for the todo stack.
pnnt: 6 is a plain number, fine.
cfgq: 3 is a plain number, fine.
qtbp: 4 is a plain number, fine.
bhfj: 13 is a plain number, fine.
vnbp: 2 is a plain number, fine.
rlrr: 4 is a plain number, fine.
dcwm: gchz + prgh is an expression for the todo stack.
hcbt: 2 is a plain number, fine.
tsgb: 4 is a plain number, fine.
lrtg: 5 is a plain number, fine.
pqgb: 3 is a plain number, fine.
pvpm: 1 is a plain number, fine.
fplh: bcdt * zrnf is an expression for the todo stack.
stcn: snzj * cvqw is an expression for the todo stack.
csgw: gjzp / lnpw is an expression for the todo stack.
zfvz: 13 is a plain number, fine.
nthv: 5 is a plain number, fine.
cthp: 10 is a plain number, fine.
jmgj: 4 is a plain number, fine.
mnfq: 2 is a plain number, fine.
lvpz: 19 is a plain number, fine.
rgrw: 2 is a plain number, fine.
whtn: 5 is a plain number, fine.
gcjm: gvss * dlbf is an expression for the todo stack.
tgfs: cljj * zfdg is an expression for the todo stack.
rmdr: bzcl * szmh is an expression for the todo stack.
vhpg: ndph + nvmb is an expression for the todo stack.
pmbl: hzls + gdjg is an expression for the todo stack.
gpsj: 13 is a plain number, fine.
fnfs: pcjl + llqn is an expression for the todo stack.
tpzc: 3 is a plain number, fine.
phwf: tdfb + dzdf is an expression for the todo stack.
tvwc: 1 is a plain number, fine.
gqsd: dcwm * bscb is an expression for the todo stack.
nhld: 3 is a plain number, fine.
tmzz: 2 is a plain number, fine.
lnnq: 14 is a plain number, fine.
cnww: gcrr * wnsj is an expression for the todo stack.
mljd: pfvv - fvfc is an expression for the todo stack.
bqcz: 5 is a plain number, fine.
dpcj: 2 is a plain number, fine.
cvgg: 3 is a plain number, fine.
sdjz: 6 is a plain number, fine.
fhdl: 3 is a plain number, fine.
qvrg: 1 is a plain number, fine.
llbf: 2 is a plain number, fine.
gftz: lsvp * sswd is an expression for the todo stack.
bdcv: 9 is a plain number, fine.
sjgf: bjwz * wdhn is an expression for the todo stack.
nhrq: tttm + ltmj is an expression for the todo stack.
qftw: vcdg * wnlr is an expression for the todo stack.
zjnw: fhvw / qptt is an expression for the todo stack.
wvvn: jzrg * nggs is an expression for the todo stack.
dbrd: dnmq * twgf is an expression for the todo stack.
lmvh: 14 is a plain number, fine.
zjfs: 3 is a plain number, fine.
mqcj: fbzr * pzfd is an expression for the todo stack.
bqbm: 2 is a plain number, fine.
tcjp: 2 is a plain number, fine.
ncsp: 2 is a plain number, fine.
dgzg: 2 is a plain number, fine.
czrw: mrzj * tptp is an expression for the todo stack.
fbfh: gnwb * gdww is an expression for the todo stack.
frsc: qfjv / rfvv is an expression for the todo stack.
wnjd: pqvv + cthp is an expression for the todo stack.
ctqj: vrcs + tnbj is an expression for the todo stack.
cnsr: 5 is a plain number, fine.
hpzq: 4 is a plain number, fine.
jztg: tvzz - tgzw is an expression for the todo stack.
ngfz: qgwz + wdwg is an expression for the todo stack.
dznm: gztw + srqs is an expression for the todo stack.
wdwg: nsgd * jdth is an expression for the todo stack.
bfnt: 3 is a plain number, fine.
vcjv: hrdh + nrww is an expression for the todo stack.
jpgb: 2 is a plain number, fine.
czdw: ppcf * mthg is an expression for the todo stack.
ftft: 3 is a plain number, fine.
lfbg: qvcr + drnl is an expression for the todo stack.
wsgj: 11 is a plain number, fine.
hmwp: 2 is a plain number, fine.
cmlh: prtw + fqjt is an expression for the todo stack.
fspt: tnwz + jttq is an expression for the todo stack.
zzvp: crrl + zhpb is an expression for the todo stack.
wgrl: 10 is a plain number, fine.
nczd: lgdv + tmfb is an expression for the todo stack.
nssh: 3 is a plain number, fine.
pdgl: vhht * zmth is an expression for the todo stack.
tqlz: 5 is a plain number, fine.
slnd: 2 is a plain number, fine.
tftj: zpfn + crqs is an expression for the todo stack.
htrg: npvz / cghg is an expression for the todo stack.
fmth: 1 is a plain number, fine.
vlcl: 3 is a plain number, fine.
zmcz: mbqp * gmhw is an expression for the todo stack.
gmqt: nsjz + ppvr is an expression for the todo stack.
wgpc: 5 is a plain number, fine.
wfts: fwzp * pgrq is an expression for the todo stack.
ccfq: gnfc * fjrv is an expression for the todo stack.
tmnn: gpmz + pvqj is an expression for the todo stack.
vnpf: 6 is a plain number, fine.
lqcb: 13 is a plain number, fine.
tsbm: lfnn / cscp is an expression for the todo stack.
rhtd: 2 is a plain number, fine.
lwfm: qtgg + jvfj is an expression for the todo stack.
nztr: 4 is a plain number, fine.
humn: 721 is a plain number, fine.
zrtr: 3 is a plain number, fine.
wmdq: vhmw * mpvb is an expression for the todo stack.
sqfw: 2 is a plain number, fine.
nntp: 3 is a plain number, fine.
jczp: 5 is a plain number, fine.
gjgr: ngsz + tznr is an expression for the todo stack.
vddb: 7 is a plain number, fine.
cqpj: lpvq * lbjf is an expression for the todo stack.
vhst: bmjj + zrpn is an expression for the todo stack.
hshd: 4 is a plain number, fine.
vgdr: 15 is a plain number, fine.
rpgs: 6 is a plain number, fine.
tmbj: jqbl * bnfw is an expression for the todo stack.
llqn: vfnh * rjgc is an expression for the todo stack.
hrbm: zcvv + nbrt is an expression for the todo stack.
tmzp: 2 is a plain number, fine.
hwbf: 3 is a plain number, fine.
vprd: ldmv + ldlt is an expression for the todo stack.
qpts: zlpv + czrw is an expression for the todo stack.
jlgj: 3 is a plain number, fine.
pzwm: 4 is a plain number, fine.
qmzb: wlcc + dcbm is an expression for the todo stack.
ztbc: 4 is a plain number, fine.
vtsh: jvfm * bglc is an expression for the todo stack.
wmfv: 2 is a plain number, fine.
mbps: dztc + tplh is an expression for the todo stack.
pslj: hvdr * fqfv is an expression for the todo stack.
mtzt: 4 is a plain number, fine.
hwdd: dmhb * tnmj is an expression for the todo stack.
pwjq: 3 is a plain number, fine.
tcsl: chbm + nbfl is an expression for the todo stack.
gvnz: pbln / mbmd is an expression for the todo stack.
zvhh: 1 is a plain number, fine.
nbch: hnbf - dqsh is an expression for the todo stack.
sbbv: dmmr / cgzf is an expression for the todo stack.
vwmb: mdvf + bcwn is an expression for the todo stack.
dnqh: 5 is a plain number, fine.
wfhm: tpdj + vlcl is an expression for the todo stack.
hrhl: vvmd * dbns is an expression for the todo stack.
lrhp: shhc + gtwp is an expression for the todo stack.
wzzv: pwpl * gvnb is an expression for the todo stack.
qhhr: 15 is a plain number, fine.
dclt: zbsm + brdn is an expression for the todo stack.
rbdh: 14 is a plain number, fine.
bjsd: 15 is a plain number, fine.
ltwn: 4 is a plain number, fine.
nbrn: ttvd * tmzp is an expression for the todo stack.
lrmn: 2 is a plain number, fine.
swtp: jzpr + bsrr is an expression for the todo stack.
jpsm: 2 is a plain number, fine.
btfw: 6 is a plain number, fine.
rvjq: lqjn + vpgp is an expression for the todo stack.
mqrf: nmcj + msfn is an expression for the todo stack.
dncn: qsgr - lrjm is an expression for the todo stack.
mwsp: 11 is a plain number, fine.
zcpw: 2 is a plain number, fine.
qbnc: 2 is a plain number, fine.
ssps: 3 is a plain number, fine.
rjqm: cghs * jzdv is an expression for the todo stack.
tjjl: ghtd + cbcf is an expression for the todo stack.
hjmn: cpzp + hcvz is an expression for the todo stack.
zgmg: btbb * pqwr is an expression for the todo stack.
mflh: 5 is a plain number, fine.
tqmb: wmzq + clqj is an expression for the todo stack.
lflw: 2 is a plain number, fine.
vhjz: jbfl * qnvz is an expression for the todo stack.
svvl: 3 is a plain number, fine.
qcgt: ztdn - zjtq is an expression for the todo stack.
zptg: vtdt * rwrh is an expression for the todo stack.
qcrv: 3 is a plain number, fine.
tnmj: 4 is a plain number, fine.
frpz: 4 is a plain number, fine.
brbg: 4 is a plain number, fine.
bgmc: wcfz + pvwn is an expression for the todo stack.
qltz: 5 is a plain number, fine.
root: hppd + czdp is an expression for the todo stack.
crwj: pdqp + sjgf is an expression for the todo stack.
srnz: 5 is a plain number, fine.
fqrm: cwmw * sbrn is an expression for the todo stack.
rnqg: pnvj - zvhh is an expression for the todo stack.
pflr: bgmc + qnhh is an expression for the todo stack.
cbnq: bdwd + jzhp is an expression for the todo stack.
sbzp: 3 is a plain number, fine.
mghf: 4 is a plain number, fine.
hvsz: 13 is a plain number, fine.
hcjq: jhbj + ztqz is an expression for the todo stack.
mznv: 6 is a plain number, fine.
slcv: grst + qzbv is an expression for the todo stack.
gmsz: pbcv * ttcb is an expression for the todo stack.
wgmq: qpqd * dbvm is an expression for the todo stack.
zqdl: 7 is a plain number, fine.
dbns: ldgn + vsdt is an expression for the todo stack.
hgtp: qwnd * dslw is an expression for the todo stack.
ddbh: dcrc + mthm is an expression for the todo stack.
npjg: 6 is a plain number, fine.
zbjp: cntb * gnhm is an expression for the todo stack.
ffbn: 2 is a plain number, fine.
mdqz: smmq / qhvs is an expression for the todo stack.
pzfd: bwsq * rdsv is an expression for the todo stack.
bdzl: 7 is a plain number, fine.
ftwr: 4 is a plain number, fine.
fwfq: vbfz + snpq is an expression for the todo stack.
gwsq: 3 is a plain number, fine.
ngzn: mgdb + fhqw is an expression for the todo stack.
blzn: zcws * fttp is an expression for the todo stack.
jsdt: jfzh + dwdv is an expression for the todo stack.
cvrf: btbd * dmrz is an expression for the todo stack.
lzgf: 4 is a plain number, fine.
hgjq: 3 is a plain number, fine.
gnfg: qnqz * qwsj is an expression for the todo stack.
wnfd: rqjg * jnzb is an expression for the todo stack.
nhwd: 5 is a plain number, fine.
vvvs: 4 is a plain number, fine.
gdsd: pvgt / rvqh is an expression for the todo stack.
mllb: brjj + vcjv is an expression for the todo stack.
brqw: gwlf * nzpt is an expression for the todo stack.
dwph: mslq - jfjf is an expression for the todo stack.
hwqr: 2 is a plain number, fine.
dbnv: jnsh - gjgr is an expression for the todo stack.
pmhs: mngp + qdhg is an expression for the todo stack.
cfwz: jltc + bngt is an expression for the todo stack.
gtwp: zvmf + jmnz is an expression for the todo stack.
ptcl: 1 is a plain number, fine.
ctmt: 3 is a plain number, fine.
qmjh: 4 is a plain number, fine.
fcmr: jzlh * zrzv is an expression for the todo stack.
mzqt: 3 is a plain number, fine.
cbzs: 2 is a plain number, fine.
thgv: bfhg + bzts is an expression for the todo stack.
rvpf: 2 is a plain number, fine.
gbjw: zmsn * wwmm is an expression for the todo stack.
jpjv: 9 is a plain number, fine.
rglj: lcfj + nbch is an expression for the todo stack.
rzgq: 6 is a plain number, fine.
mnld: 2 is a plain number, fine.
rlmt: cntz + wnjd is an expression for the todo stack.
rrbl: 5 is a plain number, fine.
trmd: 3 is a plain number, fine.
mfqp: jcjj * tcqg is an expression for the todo stack.
thds: gmvc + tzpt is an expression for the todo stack.
fdvq: 7 is a plain number, fine.
hdqg: 12 is a plain number, fine.
bssg: vsmd * hptn is an expression for the todo stack.
dmnl: wzzv + lldv is an expression for the todo stack.
mngp: hbbd * mdmd is an expression for the todo stack.
hptn: 2 is a plain number, fine.
pbpf: 2 is a plain number, fine.
hbbd: 3 is a plain number, fine.
jflp: tshp - bwdn is an expression for the todo stack.
sgtj: dvnn - sbzd is an expression for the todo stack.
ldlr: 2 is a plain number, fine.
lmrl: zzpp * vlfp is an expression for the todo stack.
ltht: 9 is a plain number, fine.
smfn: 2 is a plain number, fine.
vshz: jfpt * tgnl is an expression for the todo stack.
dhjw: 5 is a plain number, fine.
nvtm: 2 is a plain number, fine.
pvnc: zhgz + mmmq is an expression for the todo stack.
ltfn: cvhr * twqn is an expression for the todo stack.
cpzc: ntwf * lhtf is an expression for the todo stack.
hjvp: 5 is a plain number, fine.
mthw: vmrc + smpr is an expression for the todo stack.
jfgq: 2 is a plain number, fine.
qzbv: 13 is a plain number, fine.
tznr: 15 is a plain number, fine.
bwqn: 3 is a plain number, fine.
wghp: 2 is a plain number, fine.
dwhq: 2 is a plain number, fine.
nltl: 3 is a plain number, fine.
strv: 1 is a plain number, fine.
cqws: 3 is a plain number, fine.
qbcg: pgbh * zzvp is an expression for the todo stack.
mgfn: qmzb + cqcm is an expression for the todo stack.
gmbs: 11 is a plain number, fine.
vbgj: 4 is a plain number, fine.
crqs: cfjg + whmn is an expression for the todo stack.
szsh: ttfc + blsf is an expression for the todo stack.
trqs: 14 is a plain number, fine.
ngsz: sjdd / pmpl is an expression for the todo stack.
djvg: cpnv + tvrv is an expression for the todo stack.
lwbb: 3 is a plain number, fine.
gzch: 14 is a plain number, fine.
ghtd: 5 is a plain number, fine.
dwwv: jhzj * dhgd is an expression for the todo stack.
tgff: bjpv - rltm is an expression for the todo stack.
hhqb: hmnm + zmrf is an expression for the todo stack.
twmt: dmqv * gjcw is an expression for the todo stack.
jbqr: bdsp + wgdr is an expression for the todo stack.
vhmw: 5 is a plain number, fine.
dpqr: qmjh * gfvf is an expression for the todo stack.
plrv: gczc / tmcj is an expression for the todo stack.
bncf: 2 is a plain number, fine.
gjgs: 19 is a plain number, fine.
bbtr: sdtm + fhtv is an expression for the todo stack.
lwwj: lhvj + mdbr is an expression for the todo stack.
srtj: 4 is a plain number, fine.
tmwt: 6 is a plain number, fine.
nfbt: 3 is a plain number, fine.
bdvg: 13 is a plain number, fine.
czbw: 17 is a plain number, fine.
sgjl: gtzb * qnwm is an expression for the todo stack.
dmpl: 3 is a plain number, fine.
qpqd: 3 is a plain number, fine.
rtcm: 5 is a plain number, fine.
dvrg: ggml + sjbj is an expression for the todo stack.
zzrq: wfmw + lrhp is an expression for the todo stack.
mflt: 2 is a plain number, fine.
sfvc: 6 is a plain number, fine.
jtnf: 4 is a plain number, fine.
cgzf: 3 is a plain number, fine.
hrbj: 3 is a plain number, fine.
vprg: 14 is a plain number, fine.
gslf: 3 is a plain number, fine.
fvfj: 3 is a plain number, fine.
zcfz: 6 is a plain number, fine.
gnwt: 2 is a plain number, fine.
rsqm: 5 is a plain number, fine.
zblw: cbtd + pnnt is an expression for the todo stack.
hpqc: mzqt * nfzb is an expression for the todo stack.
tbjv: 5 is a plain number, fine.
gbzp: wjrb * tqwn is an expression for the todo stack.
ttfw: jlnn - mthw is an expression for the todo stack.
nnsh: 11 is a plain number, fine.
jbtb: 9 is a plain number, fine.
qpmc: 9 is a plain number, fine.
mhvn: 10 is a plain number, fine.
bnrr: dqwn * zcfz is an expression for the todo stack.
qbzf: 3 is a plain number, fine.
dsvv: qzhw / ffbn is an expression for the todo stack.
dsvz: 2 is a plain number, fine.
twjr: 2 is a plain number, fine.
rrvj: lgqf * wtlf is an expression for the todo stack.
trfs: 2 is a plain number, fine.
cmnq: 5 is a plain number, fine.
mrpz: mhzh * dbmf is an expression for the todo stack.
spcv: 5 is a plain number, fine.
lzrz: dpzm * wvwd is an expression for the todo stack.
nvtd: mbbm * pznw is an expression for the todo stack.
thnc: hfdb * lzdv is an expression for the todo stack.
gqtd: 6 is a plain number, fine.
zlzq: qvqz + zfvc is an expression for the todo stack.
pbhs: 2 is a plain number, fine.
sqzj: mrbj * jhph is an expression for the todo stack.
qgzj: 3 is a plain number, fine.
wcfz: nqzd * crph is an expression for the todo stack.
jpzz: 4 is a plain number, fine.
tdjl: 4 is a plain number, fine.
btbd: 3 is a plain number, fine.
jdlj: 2 is a plain number, fine.
hvlt: sglv - zfzp is an expression for the todo stack.
zssf: wrnn * ndvf is an expression for the todo stack.
zbcs: 4 is a plain number, fine.
wngv: twfn * bvnq is an expression for the todo stack.
lnsv: vtcl * bbdh is an expression for the todo stack.
dmpf: vnmd + jnsf is an expression for the todo stack.
hltd: 4 is a plain number, fine.
jfzh: 2 is a plain number, fine.
bccw: 2 is a plain number, fine.
bnrb: njsw * lwqz is an expression for the todo stack.
frst: rcnm * ccfq is an expression for the todo stack.
vzrs: nbrn / pwjq is an expression for the todo stack.
npnt: 4 is a plain number, fine.
jqbh: sltt + wqdp is an expression for the todo stack.
bzcl: 3 is a plain number, fine.
qggf: hlwh * crdm is an expression for the todo stack.
nbsm: 2 is a plain number, fine.
fzqs: 3 is a plain number, fine.
mgdb: jgnr * hcbt is an expression for the todo stack.
ggpd: 6 is a plain number, fine.
zmhp: 2 is a plain number, fine.
hgvq: rnwt - pjss is an expression for the todo stack.
nttr: 5 is a plain number, fine.
qhlp: wmzg * zlmz is an expression for the todo stack.
nmwc: twwv * rpwg is an expression for the todo stack.
vpff: 4 is a plain number, fine.
hjqh: gscz + nqgd is an expression for the todo stack.
vnsp: vjsg + crwb is an expression for the todo stack.
gncw: 3 is a plain number, fine.
dcvp: slfg * pgsd is an expression for the todo stack.
scvs: tbzr * mncm is an expression for the todo stack.
nzzh: mczh * wrlb is an expression for the todo stack.
rnwm: hcgp / nvtm is an expression for the todo stack.
qncm: rjdl * lssr is an expression for the todo stack.
gwws: pftt * cfgg is an expression for the todo stack.
nlqv: 5 is a plain number, fine.
zfbp: 2 is a plain number, fine.
dzdf: fchg * jchv is an expression for the todo stack.
qbrf: dctw + pbfn is an expression for the todo stack.
lggg: ttds + lgrv is an expression for the todo stack.
hpnp: 6 is a plain number, fine.
mfnj: 2 is a plain number, fine.
wvfg: 2 is a plain number, fine.
cqfg: 5 is a plain number, fine.
gztj: hgzm * qsvf is an expression for the todo stack.
csbg: hqhm + bfvq is an expression for the todo stack.
jzzh: 5 is a plain number, fine.
vlpr: 3 is a plain number, fine.
whsj: 3 is a plain number, fine.
cmbv: rzcl + sbzz is an expression for the todo stack.
brjj: lcjr * zhcf is an expression for the todo stack.
ftlh: 11 is a plain number, fine.
qgnt: mwnv + cbrg is an expression for the todo stack.
nmdg: 4 is a plain number, fine.
sldf: 2 is a plain number, fine.
zspq: swqh * mhlv is an expression for the todo stack.
whhl: 2 is a plain number, fine.
bnfv: 14 is a plain number, fine.
thrc: qctq + htqz is an expression for the todo stack.
bblj: qftw * mhsz is an expression for the todo stack.
zhtv: gbwj / zbpj is an expression for the todo stack.
mvjf: 3 is a plain number, fine.
njzs: sljl + wpwr is an expression for the todo stack.
wchg: ctjg * tzrp is an expression for the todo stack.
dvnn: 15 is a plain number, fine.
mqtv: rtwt + pnhv is an expression for the todo stack.
lzcp: mbqg + tfdh is an expression for the todo stack.
snvj: zzpg * jjmj is an expression for the todo stack.
qzqh: vzqg + fzqs is an expression for the todo stack.
bzts: cfdf * gsch is an expression for the todo stack.
fbmb: 2 is a plain number, fine.
fhtv: wnsd + dtbs is an expression for the todo stack.
mwqt: fzzp + crvv is an expression for the todo stack.
bvvd: pbbp + ngzn is an expression for the todo stack.
sqgr: hjqh * bqfr is an expression for the todo stack.
pnhv: cqws * qhnp is an expression for the todo stack.
hpcs: vhst * gbsr is an expression for the todo stack.
nfcp: njsn + qqvl is an expression for the todo stack.
jgsv: dfnc / jrpm is an expression for the todo stack.
hdrp: 2 is a plain number, fine.
dmbs: clvh - ltht is an expression for the todo stack.
mbqg: qzvh + hdlj is an expression for the todo stack.
tghr: 10 is a plain number, fine.
whmn: sqcr + lpdr is an expression for the todo stack.
nsvf: 17 is a plain number, fine.
twns: vllt * dmpf is an expression for the todo stack.
gdjg: bjrj * wldt is an expression for the todo stack.
fjrv: 11 is a plain number, fine.
czwj: ctlr * wnmh is an expression for the todo stack.
crwb: zqmf * whfd is an expression for the todo stack.
ddtn: 2 is a plain number, fine.
tfcr: 2 is a plain number, fine.
lgqf: cjvp + mbdd is an expression for the todo stack.
dpls: mqcj + htrg is an expression for the todo stack.
fwmw: 2 is a plain number, fine.
fjng: 5 is a plain number, fine.
slbb: 4 is a plain number, fine.
mthg: 3 is a plain number, fine.
vjsg: gpjc * twns is an expression for the todo stack.
drnt: nwrq - dwfp is an expression for the todo stack.
lhbr: dpjv + vzfl is an expression for the todo stack.
nfgv: vbrh * lpmh is an expression for the todo stack.
lzvh: prwp / bvbp is an expression for the todo stack.
njqv: 4 is a plain number, fine.
fzwh: vcrs + mgsd is an expression for the todo stack.
fpgw: zzrq / wsmd is an expression for the todo stack.
mhcd: trmd + gzcn is an expression for the todo stack.
lbjf: 7 is a plain number, fine.
dwfp: nnfb * chrh is an expression for the todo stack.
sztg: zbnv + ctbm is an expression for the todo stack.
hzhf: 7 is a plain number, fine.
jhzj: mnwq * wlqd is an expression for the todo stack.
wmbv: 5 is a plain number, fine.
gzsf: 2 is a plain number, fine.
jjch: dsjn * qpgm is an expression for the todo stack.
hfdb: 7 is a plain number, fine.
nlwl: 3 is a plain number, fine.
wnjm: bhrd + sgjl is an expression for the todo stack.
cwvp: bbpl * nzhs is an expression for the todo stack.
hdjh: 11 is a plain number, fine.
bbpl: qqmc * snmj is an expression for the todo stack.
rtmn: 9 is a plain number, fine.
ftpn: lrql - nrrj is an expression for the todo stack.
npwq: 6 is a plain number, fine.
mbqp: 2 is a plain number, fine.
vvhl: mcfl * vpvb is an expression for the todo stack.
cdmg: qmnw + dltq is an expression for the todo stack.
mcfl: ztvl * flrq is an expression for the todo stack.
qlpp: wzgn + wjjd is an expression for the todo stack.
nwpf: bhzf + shzg is an expression for the todo stack.
wbbv: 3 is a plain number, fine.
mmcr: ztbw * hjvp is an expression for the todo stack.
pblr: sjhh * hpcs is an expression for the todo stack.
mmmq: 9 is a plain number, fine.
hhtb: 4 is a plain number, fine.
whcf: ltgh * cwcg is an expression for the todo stack.
jjgr: 5 is a plain number, fine.
nrwg: 1 is a plain number, fine.
qnms: 2 is a plain number, fine.
sqfb: 4 is a plain number, fine.
jqtt: hvsz * twjr is an expression for the todo stack.
pwbl: 3 is a plain number, fine.
cvhr: 2 is a plain number, fine.
jrmq: 3 is a plain number, fine.
bfsb: zlbt * hrsn is an expression for the todo stack.
trfc: 18 is a plain number, fine.
rjbc: 12 is a plain number, fine.
dlbf: 2 is a plain number, fine.
zbpj: 2 is a plain number, fine.
fwqv: 19 is a plain number, fine.
bgwb: nwvw * cbrv is an expression for the todo stack.
hgjr: 2 is a plain number, fine.
gjbd: 3 is a plain number, fine.
hjzv: hdqg + lzps is an expression for the todo stack.
mwmv: nlnw + tbtc is an expression for the todo stack.
sdws: 1 is a plain number, fine.
tsbj: qdbt + trwt is an expression for the todo stack.
rtnc: bbdm * bgwb is an expression for the todo stack.
qclb: vvph * drch is an expression for the todo stack.
mjjz: 9 is a plain number, fine.
bhjq: 3 is a plain number, fine.
vcbz: dncn * lldw is an expression for the todo stack.
mhsb: bfrd * sfqj is an expression for the todo stack.
szrd: mphf * hvmj is an expression for the todo stack.
dwvm: 1 is a plain number, fine.
jgsz: 5 is a plain number, fine.
qvqz: qlrc * jllq is an expression for the todo stack.
hgbb: vltb + tssz is an expression for the todo stack.
ngpw: 3 is a plain number, fine.
hgff: 2 is a plain number, fine.
fddz: 3 is a plain number, fine.
cghg: 2 is a plain number, fine.
ntdl: pgmj * trfs is an expression for the todo stack.
htdz: qfhf * crwj is an expression for the todo stack.
lfgv: 2 is a plain number, fine.
mdmm: 11 is a plain number, fine.
fqjf: cshv * vbjz is an expression for the todo stack.
qfst: sqgr + dcrf is an expression for the todo stack.
fbfg: scwl - cmbw is an expression for the todo stack.
cgvd: 2 is a plain number, fine.
tstq: 1 is a plain number, fine.
brcv: qtdg * sqfw is an expression for the todo stack.
sjwq: 5 is a plain number, fine.
nmvg: pnbg + zhrb is an expression for the todo stack.
bpsz: 3 is a plain number, fine.
clsj: 5 is a plain number, fine.
qsfp: gnfg + fvhd is an expression for the todo stack.
chrh: 2 is a plain number, fine.
wdwf: vpjv + cvhj is an expression for the todo stack.
zcws: 11 is a plain number, fine.
lcjr: 5 is a plain number, fine.
crpd: 6 is a plain number, fine.
jjpv: bvms - wwjr is an expression for the todo stack.
mqrj: 20 is a plain number, fine.
vnrz: 6 is a plain number, fine.
nrrj: cqfg * qvrm is an expression for the todo stack.
wgjb: 3 is a plain number, fine.
nljj: 5 is a plain number, fine.
lhtf: tzgb / psjq is an expression for the todo stack.
hpdb: pgzh * vvdb is an expression for the todo stack.
prpb: vwng * mnbd is an expression for the todo stack.
lfwp: 2 is a plain number, fine.
mnwq: 8 is a plain number, fine.
frcq: 2 is a plain number, fine.
nmrt: mztr - tjjl is an expression for the todo stack.
mrzq: 2 is a plain number, fine.
nzqz: 19 is a plain number, fine.
pmtp: nhjs * csbg is an expression for the todo stack.
jttj: 6 is a plain number, fine.
vdsm: rhht + gmnz is an expression for the todo stack.
wcvt: vlqf + zjrv is an expression for the todo stack.
gtcw: 3 is a plain number, fine.
tnnc: drpc * gpwj is an expression for the todo stack.
bhfb: 2 is a plain number, fine.
njcc: 7 is a plain number, fine.
flqq: wlcr / vnvl is an expression for the todo stack.
rsnb: 17 is a plain number, fine.
dccg: cdlg * ggmm is an expression for the todo stack.
vhss: 10 is a plain number, fine.
pvwn: 19 is a plain number, fine.
stpv: 4 is a plain number, fine.
jbwr: 5 is a plain number, fine.
djsq: 16 is a plain number, fine.
bwgm: cgvd * mwwt is an expression for the todo stack.
lnzl: 5 is a plain number, fine.
rfmr: 2 is a plain number, fine.
grmh: 2 is a plain number, fine.
jbnf: 13 is a plain number, fine.
tgnl: 5 is a plain number, fine.
phmb: btdt * ntmv is an expression for the todo stack.
zvbj: 10 is a plain number, fine.
ctdq: dnqf * swnb is an expression for the todo stack.
rtwt: 2 is a plain number, fine.
fzdc: bqns + qnwn is an expression for the todo stack.
mssb: lqnc + mmcr is an expression for the todo stack.
dzhz: 3 is a plain number, fine.
dnmq: 13 is a plain number, fine.
qrgv: gztr + ltvl is an expression for the todo stack.
dltq: 5 is a plain number, fine.
cvff: 2 is a plain number, fine.
bcbv: vvhl + wlzl is an expression for the todo stack.
jvbh: 5 is a plain number, fine.
jdrw: lmzz * gbsb is an expression for the todo stack.
qzzm: fwqc + qmtz is an expression for the todo stack.
mfmv: ztbc + jvlz is an expression for the todo stack.
nbsd: 3 is a plain number, fine.
bglc: tdnw + brzt is an expression for the todo stack.
hwsb: pblp + dczv is an expression for the todo stack.
wmzg: 2 is a plain number, fine.
mslq: jmqd * whfz is an expression for the todo stack.
lnvq: vqcr + rtlf is an expression for the todo stack.
pbhh: bflz * frpz is an expression for the todo stack.
twgf: 10 is a plain number, fine.
qqjh: 4 is a plain number, fine.
lvvt: 2 is a plain number, fine.
zdjv: 2 is a plain number, fine.
bstf: phlq * hqnj is an expression for the todo stack.
rtdf: htsd * ntzg is an expression for the todo stack.
zvgh: mrpz + zspq is an expression for the todo stack.
srwc: 5 is a plain number, fine.
bwlh: bjzb * zdzj is an expression for the todo stack.
gscz: 3 is a plain number, fine.
jdwm: 5 is a plain number, fine.
rrpg: wnfd / njhn is an expression for the todo stack.
mwgb: 5 is a plain number, fine.
vcqb: mjms / snbb is an expression for the todo stack.
njhn: hrlt * vnvw is an expression for the todo stack.
llrz: 3 is a plain number, fine.
btqs: rvwz / jpsm is an expression for the todo stack.
dzhw: czrb * qsnc is an expression for the todo stack.
vqdr: fqjf / grnp is an expression for the todo stack.
fvfs: 6 is a plain number, fine.
pqfh: 5 is a plain number, fine.
zwqv: lrrd + jldf is an expression for the todo stack.
thpf: jdwm * dqcp is an expression for the todo stack.
mrzj: 4 is a plain number, fine.
gjrq: 3 is a plain number, fine.
zlqv: psph * rprv is an expression for the todo stack.
jcpz: 3 is a plain number, fine.
sgrn: hcgb + ljhg is an expression for the todo stack.
hnps: tjlv * wsjc is an expression for the todo stack.
vqpf: 3 is a plain number, fine.
lqjn: 2 is a plain number, fine.
rgnt: 5 is a plain number, fine.
zpzp: 2 is a plain number, fine.
pswr: 2 is a plain number, fine.
vgcf: 9 is a plain number, fine.
slfg: 5 is a plain number, fine.
bshw: 7 is a plain number, fine.
hcgb: 5 is a plain number, fine.
lfph: hnmp * bmvb is an expression for the todo stack.
hmrd: 2 is a plain number, fine.
pmlw: mnld * gnfz is an expression for the todo stack.
qsjj: 7 is a plain number, fine.
mfnp: 2 is a plain number, fine.
vmqz: 2 is a plain number, fine.
qsvf: jmdf * wgjb is an expression for the todo stack.
zdvp: rvjq + gmbj is an expression for the todo stack.
hfdc: 5 is a plain number, fine.
vpbr: wtdg + qrnh is an expression for the todo stack.
zfmc: 1 is a plain number, fine.
zlgw: wgmq * lmnn is an expression for the todo stack.
vtln: 2 is a plain number, fine.
jldf: cmnh * rbcb is an expression for the todo stack.
znvs: lwwj + wvvn is an expression for the todo stack.
rtjd: nntd * hpzq is an expression for the todo stack.
sjdd: qzqg * cnww is an expression for the todo stack.
btsb: lmlr * gmgn is an expression for the todo stack.
zrvc: 3 is a plain number, fine.
hrdh: sthr * hmwt is an expression for the todo stack.
mlhq: 7 is a plain number, fine.
pmzs: zthj * whtn is an expression for the todo stack.
jwtj: 2 is a plain number, fine.
hbbq: 4 is a plain number, fine.
gpjc: cjgp - rcfm is an expression for the todo stack.
blzj: bpwh + ddff is an expression for the todo stack.
mqcq: 19 is a plain number, fine.
ttvd: czgm * zhlj is an expression for the todo stack.
nnmv: tplb * qzfj is an expression for the todo stack.
zrwf: 2 is a plain number, fine.
tmfh: 2 is a plain number, fine.
mqmq: 11 is a plain number, fine.
gnjv: 3 is a plain number, fine.
gbpd: chth + wzrt is an expression for the todo stack.
sztf: qqbf / dbww is an expression for the todo stack.
hmmt: tfcn + ddjn is an expression for the todo stack.
snvw: jsdt * fspt is an expression for the todo stack.
fqfv: qhsq + swnv is an expression for the todo stack.
tbzt: 3 is a plain number, fine.
prgr: 3 is a plain number, fine.
dtpg: 5 is a plain number, fine.
wqgd: 4 is a plain number, fine.
qrjr: 9 is a plain number, fine.
vqrw: 6 is a plain number, fine.
mzvc: qhzz * wgqs is an expression for the todo stack.
jltc: 12 is a plain number, fine.
lqld: ffrs * qpbl is an expression for the todo stack.
bcwn: cqqr / zzzc is an expression for the todo stack.
bqjn: jcqf + fvlh is an expression for the todo stack.
shtm: mlhh * fbdg is an expression for the todo stack.
lpbs: fmzc + vmnl is an expression for the todo stack.
jlpm: 14 is a plain number, fine.
bbvl: 2 is a plain number, fine.
wfdf: zfhs * ltdw is an expression for the todo stack.
tcnv: ggdg * wmcv is an expression for the todo stack.
znbn: 4 is a plain number, fine.
nznr: 14 is a plain number, fine.
sqtt: bltw * hvpt is an expression for the todo stack.
rmmb: nbsd * ndjh is an expression for the todo stack.
tmvt: 4 is a plain number, fine.
mlgg: scnr + bblj is an expression for the todo stack.
jzvr: hcjq / ctqj is an expression for the todo stack.
nsgd: 3 is a plain number, fine.
bgjp: fwqv - cjrh is an expression for the todo stack.
tpfs: dszn * cmsl is an expression for the todo stack.
tgsc: 18 is a plain number, fine.
qnwm: 8 is a plain number, fine.
tcfw: rpgs * fbbv is an expression for the todo stack.
jdth: 12 is a plain number, fine.
bdnr: hvlt - qcgt is an expression for the todo stack.
jchs: scts * jztg is an expression for the todo stack.
gcns: brps * dchw is an expression for the todo stack.
hdrg: 2 is a plain number, fine.
cjfg: rfhn + pslj is an expression for the todo stack.
pblp: qqwr * vbrc is an expression for the todo stack.
dlfg: nthv * chtn is an expression for the todo stack.
dwvt: 6 is a plain number, fine.
sldh: 1 is a plain number, fine.
cdlg: 3 is a plain number, fine.
jzdv: lbqw * gjfh is an expression for the todo stack.
hjhj: 3 is a plain number, fine.
fwlc: gztj + sqzj is an expression for the todo stack.
ltmq: jfpf * cmwv is an expression for the todo stack.
zlpf: 2 is a plain number, fine.
hqcs: rtmn + mhcm is an expression for the todo stack.
mdbh: phmp / dsqp is an expression for the todo stack.
gmnz: 1 is a plain number, fine.
wwhp: 2 is a plain number, fine.
tgdl: 5 is a plain number, fine.
cdtv: 15 is a plain number, fine.
nwsd: 3 is a plain number, fine.
clwh: 5 is a plain number, fine.
wpbb: 2 is a plain number, fine.
jsmh: jnsg * clsj is an expression for the todo stack.
zsqb: qvfb + zphm is an expression for the todo stack.
mchq: qnms * ntln is an expression for the todo stack.
zhrn: ldqv * rmzh is an expression for the todo stack.
wsqn: lnzs * npnt is an expression for the todo stack.
hlzl: npcf - flmc is an expression for the todo stack.
nlfw: hdfz * bjzd is an expression for the todo stack.
tsjb: dznm + qfhv is an expression for the todo stack.
qhvn: hcnp + bwqn is an expression for the todo stack.
rgqs: 2 is a plain number, fine.
hjfs: scfs * mtbv is an expression for the todo stack.
hfws: 3 is a plain number, fine.
qnrq: rglj * mqrj is an expression for the todo stack.
sdzn: bgjj * btdd is an expression for the todo stack.
vrgh: nrtr + zrjq is an expression for the todo stack.
hzpm: dlvh * cjnw is an expression for the todo stack.
mztr: wrfr * gvgc is an expression for the todo stack.
tczr: 5 is a plain number, fine.
cgqs: 3 is a plain number, fine.
qfjv: zjmw * tcbw is an expression for the todo stack.
bqfr: fjng + swcq is an expression for the todo stack.
bzrn: wvqf * nlbs is an expression for the todo stack.
drch: 4 is a plain number, fine.
tnmd: rtcm * pjsf is an expression for the todo stack.
lldw: bfct + lrtt is an expression for the todo stack.
cvrt: 5 is a plain number, fine.
crdm: mhcd + qmfh is an expression for the todo stack.
zqgd: drnt * mfnj is an expression for the todo stack.
vfhr: 2 is a plain number, fine.
vjlz: 4 is a plain number, fine.
wrst: gcwd * cqbr is an expression for the todo stack.
vlqf: drzg + pmqr is an expression for the todo stack.
nqbm: 3 is a plain number, fine.
qmcr: 7 is a plain number, fine.
gtrr: 2 is a plain number, fine.
zdvl: gsqp * wgpc is an expression for the todo stack.
hpdp: 10 is a plain number, fine.
prpd: fwbj * dgtq is an expression for the todo stack.
lngb: 2 is a plain number, fine.
csfn: 7 is a plain number, fine.
ztfw: 3 is a plain number, fine.
jmhn: tzzv + jnqp is an expression for the todo stack.
smpr: 2 is a plain number, fine.
jqss: 7 is a plain number, fine.
bltz: zcpw * scvs is an expression for the todo stack.
jsfc: mlbf / vntw is an expression for the todo stack.
lndq: 6 is a plain number, fine.
tfcn: 12 is a plain number, fine.
bqwv: djql + slft is an expression for the todo stack.
bnph: 1 is a plain number, fine.
tvrv: hrzh * npcg is an expression for the todo stack.
zmrf: 1 is a plain number, fine.
cshv: fftm * ggcc is an expression for the todo stack.
snmj: 9 is a plain number, fine.
nnfq: 3 is a plain number, fine.
bmvj: 13 is a plain number, fine.
ccpr: 1 is a plain number, fine.
zgfh: 3 is a plain number, fine.
bfqg: 2 is a plain number, fine.
bllq: 10 is a plain number, fine.
jfjf: 1 is a plain number, fine.
cfgg: 4 is a plain number, fine.
gvgc: 9 is a plain number, fine.
hcgp: znvs * gbgz is an expression for the todo stack.
tptp: 8 is a plain number, fine.
vgjd: 2 is a plain number, fine.
hgmg: nzqw * sntr is an expression for the todo stack.
dlpm: lwnq * qrgv is an expression for the todo stack.
gqqr: gqmp + zghq is an expression for the todo stack.
sntr: 2 is a plain number, fine.
fngz: 2 is a plain number, fine.
llcg: 1 is a plain number, fine.
qldd: bdcr + mlhq is an expression for the todo stack.
hqnj: vpss + wsjt is an expression for the todo stack.
rzqd: gght * djvg is an expression for the todo stack.
qqjf: mfnz * ncsp is an expression for the todo stack.
swps: 4 is a plain number, fine.
vzmc: 19 is a plain number, fine.
mdgn: 2 is a plain number, fine.
gwlf: czzj * jzvl is an expression for the todo stack.
vwqb: jsbw * tgfj is an expression for the todo stack.
lwsp: tzvw * zgfh is an expression for the todo stack.
jwvq: 2 is a plain number, fine.
vljr: 19 is a plain number, fine.
jjns: gmqs + hbgd is an expression for the todo stack.
zpfz: wzgz * wsmq is an expression for the todo stack.
rvqh: 4 is a plain number, fine.
jtnw: 2 is a plain number, fine.
ffwp: 5 is a plain number, fine.
tqjz: vgjd * tlsc is an expression for the todo stack.
cntb: 5 is a plain number, fine.
chfb: 2 is a plain number, fine.
mzcf: qzrf + dlgh is an expression for the todo stack.
zhrb: 16 is a plain number, fine.
dlfz: lqtm * pnhc is an expression for the todo stack.
vvph: 4 is a plain number, fine.
bbdf: 2 is a plain number, fine.
tzqz: 2 is a plain number, fine.
ptpl: zgqn * slmc is an expression for the todo stack.
ptgr: 2 is a plain number, fine.
ssdw: hgnl + zfmc is an expression for the todo stack.
sfzc: ldwp + cdds is an expression for the todo stack.
wtbb: rhqz + lnzl is an expression for the todo stack.
pzmn: 2 is a plain number, fine.
dcvd: hhqb * swcw is an expression for the todo stack.
ppvc: 8 is a plain number, fine.
nhgz: 6 is a plain number, fine.
rnws: rjtc * dfjr is an expression for the todo stack.
nrtr: tblf * rqzl is an expression for the todo stack.
cbtd: 1 is a plain number, fine.
prcj: blzj * qnfl is an expression for the todo stack.
jdqn: swps * srtj is an expression for the todo stack.
nlbs: 10 is a plain number, fine.
tttz: 2 is a plain number, fine.
dzdv: 5 is a plain number, fine.
hnfl: 7 is a plain number, fine.
qzhb: gmsz + njzs is an expression for the todo stack.
ncmp: 5 is a plain number, fine.
fnfv: 2 is a plain number, fine.
qmnw: 4 is a plain number, fine.
chtn: 5 is a plain number, fine.
dbpn: 16 is a plain number, fine.
msnn: fprp * jsfc is an expression for the todo stack.
nfqb: 2 is a plain number, fine.
dslw: 5 is a plain number, fine.
jcsc: 2 is a plain number, fine.
zzng: mjzc + lvmh is an expression for the todo stack.
crwn: gjrq * cgdd is an expression for the todo stack.
wnnc: rrtr + lcwh is an expression for the todo stack.
thwb: 4 is a plain number, fine.
bssw: fswn * llbf is an expression for the todo stack.
wvcw: vljr + htgl is an expression for the todo stack.
dsjn: 2 is a plain number, fine.
mrpw: 4 is a plain number, fine.
thtq: jdqn * zwbl is an expression for the todo stack.
zcrl: zmcz * fjsz is an expression for the todo stack.
swcw: 7 is a plain number, fine.
wjjd: sttd * ngpw is an expression for the todo stack.
ltfv: srnz + ccch is an expression for the todo stack.
wrbt: tmfh * gwld is an expression for the todo stack.
sthr: 10 is a plain number, fine.
dmgs: 2 is a plain number, fine.
qjfj: csht * pvvt is an expression for the todo stack.
mvns: 2 is a plain number, fine.
lvgs: 2 is a plain number, fine.
brvq: vcgb + pspq is an expression for the todo stack.
gchw: vgcf + njsc is an expression for the todo stack.
vbgc: 5 is a plain number, fine.
rhtv: 3 is a plain number, fine.
mzcw: jpzz * hbqd is an expression for the todo stack.
zmsn: lrfr * wngf is an expression for the todo stack.
swqh: ndcg * rdvh is an expression for the todo stack.
rzjq: 3 is a plain number, fine.
fjss: mfjw + rstn is an expression for the todo stack.
qvsp: ltdh + vdsm is an expression for the todo stack.
bjvw: 3 is a plain number, fine.
ttqn: 4 is a plain number, fine.
fjsz: rtdf + dhdz is an expression for the todo stack.
lzdv: dzjq + qhjl is an expression for the todo stack.
jttt: 3 is a plain number, fine.
nscv: 7 is a plain number, fine.
tnwz: 13 is a plain number, fine.
qjwl: jbmf - qvrg is an expression for the todo stack.
djql: 2 is a plain number, fine.
fmtc: sjbt * wbbv is an expression for the todo stack.
bscb: mrnp / mrmm is an expression for the todo stack.
mdbg: 3 is a plain number, fine.
ggsl: 6 is a plain number, fine.
zwrn: 2 is a plain number, fine.
lqnc: ndgc * bhfj is an expression for the todo stack.
mplh: 3 is a plain number, fine.
qfjp: lwtd / zrff is an expression for the todo stack.
qzrf: rrpg * vmvr is an expression for the todo stack.
wfmw: sfvc * fcmr is an expression for the todo stack.
zctz: 6 is a plain number, fine.
ffvc: 2 is a plain number, fine.
wpds: 13 is a plain number, fine.
vmfd: 2 is a plain number, fine.
ffdv: 2 is a plain number, fine.
lwhv: 2 is a plain number, fine.
scmj: 3 is a plain number, fine.
vhmn: pfwp + dcjs is an expression for the todo stack.
zlzp: 5 is a plain number, fine.
scnr: zqjr * pqfp is an expression for the todo stack.
tlgz: 6 is a plain number, fine.
pzcv: 11 is a plain number, fine.
jgcb: gfpc * cfwz is an expression for the todo stack.
qcbc: zfwm * ffvc is an expression for the todo stack.
mwgt: vbqt * qlzb is an expression for the todo stack.
cljv: 1 is a plain number, fine.
nvfr: nwss * dmpl is an expression for the todo stack.
tgnh: 19 is a plain number, fine.
zghq: sjpq + wfcz is an expression for the todo stack.
jwwc: 14 is a plain number, fine.
dtbs: 20 is a plain number, fine.
mhzh: 13 is a plain number, fine.
mbmd: 3 is a plain number, fine.
rnjh: vwmb / lgzs is an expression for the todo stack.
tmcj: 2 is a plain number, fine.
qnfl: 3 is a plain number, fine.
wgdc: 2 is a plain number, fine.
vstb: 5 is a plain number, fine.
jjcl: 4 is a plain number, fine.
glht: 5 is a plain number, fine.
djhj: jllb * hbqq is an expression for the todo stack.
qjng: 8 is a plain number, fine.
fcnl: 4 is a plain number, fine.
vtzr: fjcc / pwdf is an expression for the todo stack.
mbld: qwcd - bqwv is an expression for the todo stack.
sgcc: rzjq * zrtr is an expression for the todo stack.
gfgz: 2 is a plain number, fine.
lvmq: 13 is a plain number, fine.
lzps: 8 is a plain number, fine.
pbsd: zlzp + rjbc is an expression for the todo stack.
ndcg: 2 is a plain number, fine.
rfhn: nnsh + bnph is an expression for the todo stack.
twch: 6 is a plain number, fine.
jbqj: 4 is a plain number, fine.
tjdp: 2 is a plain number, fine.
mlfd: 7 is a plain number, fine.
tplh: whcj - trms is an expression for the todo stack.
bflz: 2 is a plain number, fine.
qvrm: vzlt - jcfg is an expression for the todo stack.
brvf: mtbg + vplr is an expression for the todo stack.
jjgl: fvzh - bwbl is an expression for the todo stack.
dhtf: csgw + zlgw is an expression for the todo stack.
flwn: 6 is a plain number, fine.
vmvr: 3 is a plain number, fine.
wzgn: scjv + zdvl is an expression for the todo stack.
ltbc: 2 is a plain number, fine.
hcvz: lhcm * tpfs is an expression for the todo stack.
bfhg: 5 is a plain number, fine.
bnlp: llnc * frrd is an expression for the todo stack.
ntgv: gmzb * dwvt is an expression for the todo stack.
cwcg: 2 is a plain number, fine.
jbfl: 3 is a plain number, fine.
lfsr: 2 is a plain number, fine.
mcmg: hcpr + vtmn is an expression for the todo stack.
cgqj: 2 is a plain number, fine.
fbbv: 13 is a plain number, fine.
ntzg: lvgs + hwnm is an expression for the todo stack.
sdgf: 1 is a plain number, fine.
dqwn: 2 is a plain number, fine.
mphf: 2 is a plain number, fine.
zlpv: prpd - dphc is an expression for the todo stack.
gbtv: ptgr + vstb is an expression for the todo stack.
bnwn: 12 is a plain number, fine.
zpcw: 1 is a plain number, fine.
mjzc: lwbq + vvcp is an expression for the todo stack.
tpbc: 5 is a plain number, fine.
rmbm: 5 is a plain number, fine.
lhfg: 2 is a plain number, fine.
hvww: qdph + rgnr is an expression for the todo stack.
zqvq: 2 is a plain number, fine.
tttm: tvwc + wrst is an expression for the todo stack.
zprb: lfsr * jtnf is an expression for the todo stack.
qzpn: 3 is a plain number, fine.
jjmv: vhss - bttn is an expression for the todo stack.
rfvr: 3 is a plain number, fine.
rpwg: 3 is a plain number, fine.
hlfl: 4 is a plain number, fine.
dsbr: hzvv + nhgc is an expression for the todo stack.
lltb: 19 is a plain number, fine.
qvpv: 8 is a plain number, fine.
crph: jjjt * bqjt is an expression for the todo stack.
hvmj: 3 is a plain number, fine.
gbhn: 3 is a plain number, fine.
rnft: mcvt * gcns is an expression for the todo stack.
vjnf: mplh * hcsf is an expression for the todo stack.
trcj: vfsl * dfpc is an expression for the todo stack.
dmcn: frcq * mbld is an expression for the todo stack.
rwns: grff * whpl is an expression for the todo stack.
jnqp: jdgh + rnwp is an expression for the todo stack.
sfrp: 3 is a plain number, fine.
mhlv: vbgj * jdfz is an expression for the todo stack.
gbgz: 2 is a plain number, fine.
gmqs: jjzv + jgcb is an expression for the todo stack.
pbqq: mwgp - tsbp is an expression for the todo stack.
vcdg: 5 is a plain number, fine.
fwbj: 6 is a plain number, fine.
ldmv: sgtj * tjrj is an expression for the todo stack.
gqgg: 3 is a plain number, fine.
wtlf: 4 is a plain number, fine.
qnvr: lwfm + ctzw is an expression for the todo stack.
spwg: lngb + bnrr is an expression for the todo stack.
gvnb: 5 is a plain number, fine.
wjsb: 1 is a plain number, fine.
jbpv: 3 is a plain number, fine.
gtjw: 20 is a plain number, fine.
pqvq: 8 is a plain number, fine.
cnlj: 2 is a plain number, fine.
gchz: pwvl + rcrh is an expression for the todo stack.
gbnr: 2 is a plain number, fine.
gwqq: 2 is a plain number, fine.
mpdd: 4 is a plain number, fine.
djbw: sdjd * hztf is an expression for the todo stack.
rcbb: 19 is a plain number, fine.
hmwt: 2 is a plain number, fine.
sjmz: 5 is a plain number, fine.
vcrq: zvbj * jwwc is an expression for the todo stack.
mfjw: qfqv + bssg is an expression for the todo stack.
rjdm: 4 is a plain number, fine.
gzhn: 2 is a plain number, fine.
lbqw: 3 is a plain number, fine.
cmwv: 2 is a plain number, fine.
bvsm: mflh * rqps is an expression for the todo stack.
tnbr: 5 is a plain number, fine.
srft: 6 is a plain number, fine.
zwff: hltd + hjqb is an expression for the todo stack.
twwv: 5 is a plain number, fine.
nnsj: trcj + qnrq is an expression for the todo stack.
mvmf: 2 is a plain number, fine.
trnd: 4 is a plain number, fine.
pfwc: bnfv / lzcn is an expression for the todo stack.
zdpn: 5 is a plain number, fine.
ndsm: lttm * dhvn is an expression for the todo stack.
zthj: 2 is a plain number, fine.
rjnl: 11 is a plain number, fine.
ldjm: twpl + wpms is an expression for the todo stack.
hjtv: 5 is a plain number, fine.
gzvn: stsz / vlss is an expression for the todo stack.
zzzb: rmbn + thjf is an expression for the todo stack.
wsbm: 2 is a plain number, fine.
zfhs: npjg * ztfw is an expression for the todo stack.
lfbm: dpqg * gtgv is an expression for the todo stack.
gjzp: lvvt * hgmj is an expression for the todo stack.
htgl: tgsc - lndq is an expression for the todo stack.
wbqz: 2 is a plain number, fine.
msfn: 19 is a plain number, fine.
cdgd: cvzn + tcvr is an expression for the todo stack.
stdj: wsbm * gqcz is an expression for the todo stack.
zdzj: 16 is a plain number, fine.
vfmq: 7 is a plain number, fine.
spcb: rdtg + gwrh is an expression for the todo stack.
wwcs: 4 is a plain number, fine.
lrfr: dmwb + vdgc is an expression for the todo stack.
bjzd: 2 is a plain number, fine.
nvld: ttqn * bnwn is an expression for the todo stack.
rvmz: svjb - qbzf is an expression for the todo stack.
wtdg: phwz + bhfb is an expression for the todo stack.
cwgp: 2 is a plain number, fine.
gcrr: 16 is a plain number, fine.
pfwp: fzld + sdfb is an expression for the todo stack.
tzwj: 2 is a plain number, fine.
fbgq: 2 is a plain number, fine.
zqzn: dmtr + cnsr is an expression for the todo stack.
bmjj: mhjg * grjb is an expression for the todo stack.
bbhq: bvzj * zfrq is an expression for the todo stack.
mlsc: 2 is a plain number, fine.
vvcp: wnwq + jpjv is an expression for the todo stack.
dhjp: 3 is a plain number, fine.
qfzj: lcvf * rjwg is an expression for the todo stack.
ztqz: hvjb * ttfw is an expression for the todo stack.
sbht: 3 is a plain number, fine.
dbvm: gpdv + sgpw is an expression for the todo stack.
tqqh: 5 is a plain number, fine.
srdc: 4 is a plain number, fine.
bvms: dzfr * wtnn is an expression for the todo stack.
thzg: 3 is a plain number, fine.
zntq: dzff * mvgt is an expression for the todo stack.
dnrn: 2 is a plain number, fine.
smmq: gbzp * gtrr is an expression for the todo stack.
wgss: jqtt + lvpf is an expression for the todo stack.
rcnm: jwtg + htps is an expression for the todo stack.
njrm: lffg * srwc is an expression for the todo stack.
gmwl: 2 is a plain number, fine.
gpmz: 3 is a plain number, fine.
tsbp: 3 is a plain number, fine.
mdbr: 2 is a plain number, fine.
sdpp: 4 is a plain number, fine.
rgnr: vrgh * mflt is an expression for the todo stack.
hdvz: pzbv * bdvg is an expression for the todo stack.
hzmw: bqjn * ptrb is an expression for the todo stack.
pjch: 5 is a plain number, fine.
clqj: lsdg * mmcc is an expression for the todo stack.
ljhg: njnq + fgbl is an expression for the todo stack.
zlbt: 15 is a plain number, fine.
nmgp: 8 is a plain number, fine.
wwmm: 2 is a plain number, fine.
hwqf: fhnr * gwqq is an expression for the todo stack.
scts: 5 is a plain number, fine.
czzj: rwbt + nhvw is an expression for the todo stack.
dcbm: vrcg + pbqq is an expression for the todo stack.
cmql: 17 is a plain number, fine.
lhpr: 2 is a plain number, fine.
qqmc: jwnv + qvpv is an expression for the todo stack.
fmzc: dtbc + whgn is an expression for the todo stack.
lrrd: rmwh * jzww is an expression for the todo stack.
jbbw: 5 is a plain number, fine.
drpc: 4 is a plain number, fine.
hspj: nnmv + nlwf is an expression for the todo stack.
ngjc: 2 is a plain number, fine.
hvgq: hqcs * hwpq is an expression for the todo stack.
rrwd: cfgq * vbhn is an expression for the todo stack.
phft: htdz + rflz is an expression for the todo stack.
dhfc: bnrz + pqgz is an expression for the todo stack.
nbrt: ldfn + pfsq is an expression for the todo stack.
tzds: 17 is a plain number, fine.
wlcc: 3 is a plain number, fine.
hgnl: 7 is a plain number, fine.
swnb: 3 is a plain number, fine.
mnbd: 16 is a plain number, fine.
scvq: 2 is a plain number, fine.
crrl: clgl + qddq is an expression for the todo stack.
zmql: 1 is a plain number, fine.
nldh: 5 is a plain number, fine.
cpcn: czbc + thpf is an expression for the todo stack.
tzzw: bnhm + bwlh is an expression for the todo stack.
jqcj: 15 is a plain number, fine.
hgdl: 4 is a plain number, fine.
jjjt: 2 is a plain number, fine.
whcj: mggf * rgjs is an expression for the todo stack.
jvnj: prpb + hpdp is an expression for the todo stack.
bbdh: vcrq + wwpw is an expression for the todo stack.
rgjs: dmcn + rtzl is an expression for the todo stack.
hjfc: lzvh - rlmt is an expression for the todo stack.
lssr: fqrv * wqwm is an expression for the todo stack.
qzvh: pbpf * wshh is an expression for the todo stack.
qvcr: 5 is a plain number, fine.
zqsw: wzrg + trmz is an expression for the todo stack.
llzt: 2 is a plain number, fine.
zfcr: 6 is a plain number, fine.
qgbs: vwdj - frjt is an expression for the todo stack.
flrq: whcf / zdnj is an expression for the todo stack.
sbrn: 2 is a plain number, fine.
bfbn: 4 is a plain number, fine.
lfts: 2 is a plain number, fine.
mzwb: 3 is a plain number, fine.
htps: wwcs + gbnr is an expression for the todo stack.
hqvs: njqv * fqmn is an expression for the todo stack.
sljl: fhfg * vgwn is an expression for the todo stack.
cvhj: qmsm * njcg is an expression for the todo stack.
fwqh: vtgm * gbcl is an expression for the todo stack.
sbvj: 3 is a plain number, fine.
rlqt: jtqr + gqqr is an expression for the todo stack.
ldwp: 9 is a plain number, fine.
mzvs: dsmr + gqgg is an expression for the todo stack.
hlwh: 2 is a plain number, fine.
fbsb: bwgm + qhhr is an expression for the todo stack.
tzzv: vtsh * mvgc is an expression for the todo stack.
nzhs: dddb * thzg is an expression for the todo stack.
fcjj: prtl * mnfq is an expression for the todo stack.
plvg: 14 is a plain number, fine.
qdph: hmwp * jvnj is an expression for the todo stack.
qwnd: 5 is a plain number, fine.
hdlp: 2 is a plain number, fine.
tqzz: zjnw + qrsq is an expression for the todo stack.
gjgv: 15 is a plain number, fine.
rgvf: 5 is a plain number, fine.
fjcc: hsrf + dlpm is an expression for the todo stack.
tzgb: hzzf * zbrj is an expression for the todo stack.
nrrr: 4 is a plain number, fine.
dgnd: cgtp * flrj is an expression for the todo stack.
trvb: wvcw * jjgr is an expression for the todo stack.
ggcc: 2 is a plain number, fine.
qqbf: dfzz * bqbt is an expression for the todo stack.
vpqp: cqfs + sfzc is an expression for the todo stack.
szjv: tttz * bmqp is an expression for the todo stack.
mrsv: ndhs * dhnp is an expression for the todo stack.
pbbp: znsz + fpgw is an expression for the todo stack.
nvpf: 2 is a plain number, fine.
dcjm: bfbn * vgmt is an expression for the todo stack.
jtrs: lrdv * jjgl is an expression for the todo stack.
bhlh: 2 is a plain number, fine.
zmth: 5 is a plain number, fine.
bgwv: 2 is a plain number, fine.
fmwf: 18 is a plain number, fine.
zfdw: 5 is a plain number, fine.
lshr: bssw + fnrq is an expression for the todo stack.
tgfj: lndz * bprw is an expression for the todo stack.
sgbt: 5 is a plain number, fine.
dfpc: 2 is a plain number, fine.
ghcc: 2 is a plain number, fine.
hsvn: sptq * qjwl is an expression for the todo stack.
hqhm: wtbb * shzb is an expression for the todo stack.
zlmz: 11 is a plain number, fine.
znvd: btrb + tsvr is an expression for the todo stack.
mrbj: rgqs + hmmh is an expression for the todo stack.
dcrf: tnhf * qnvr is an expression for the todo stack.
cwbn: 12 is a plain number, fine.
dfjr: hrdp - fpbf is an expression for the todo stack.
dhtj: 6 is a plain number, fine.
prtl: mdmv * mwsp is an expression for the todo stack.
cfdf: 3 is a plain number, fine.
dgtq: sbvj * hwqr is an expression for the todo stack.
rvfw: 2 is a plain number, fine.
zcvc: jqcj * pbhs is an expression for the todo stack.
ppvr: vcqb * slpm is an expression for the todo stack.
gfvf: 2 is a plain number, fine.
czgm: 3 is a plain number, fine.
zbrj: mrsv / lwwb is an expression for the todo stack.
ldgn: 4 is a plain number, fine.
vbrh: tltn + fmwf is an expression for the todo stack.
zhpb: lchj + vprg is an expression for the todo stack.
rsdd: bbtr / fnfv is an expression for the todo stack.
rjdl: rjqm + rmzr is an expression for the todo stack.
tmfb: 2 is a plain number, fine.
ltzc: mhws * bmqt is an expression for the todo stack.
bcmt: 2 is a plain number, fine.
clvh: ldlr * cwqv is an expression for the todo stack.
rzml: wpsm + czzm is an expression for the todo stack.
shql: rlqt + dzjd is an expression for the todo stack.
qgwz: 1 is a plain number, fine.
tvsv: 2 is a plain number, fine.
hblb: tqnd * dmhj is an expression for the todo stack.
qqvm: fvfj * lmrn is an expression for the todo stack.
sjhh: 2 is a plain number, fine.
drfv: 3 is a plain number, fine.
jtmh: hcgs + lrnh is an expression for the todo stack.
blsf: 13 is a plain number, fine.
hzls: qnst * glqg is an expression for the todo stack.
ltgh: hwsb + wcfh is an expression for the todo stack.
ctbm: brvf * stzh is an expression for the todo stack.
bnhm: 9 is a plain number, fine.
hbqd: wbvm * sptr is an expression for the todo stack.
jgnr: mrpw * sztf is an expression for the todo stack.
bbdm: 3 is a plain number, fine.
bgbh: 16 is a plain number, fine.
gczc: rswg * nhpv is an expression for the todo stack.
tlsq: hwqf * brws is an expression for the todo stack.
qhzz: 3 is a plain number, fine.
dztc: cdmg * nssj is an expression for the todo stack.
zwqj: 5 is a plain number, fine.
hcnp: 8 is a plain number, fine.
zjtq: znnf + jdrw is an expression for the todo stack.
wwjr: nrzt * dtcr is an expression for the todo stack.
qqvl: 3 is a plain number, fine.
pjnl: bpwz * fhcv is an expression for the todo stack.
hvdr: 5 is a plain number, fine.
jvfm: 5 is a plain number, fine.
dmzl: phwf / tzwj is an expression for the todo stack.
lpvq: 3 is a plain number, fine.
zzpp: jmhn - mnrt is an expression for the todo stack.
lhlp: hjmn * nfqb is an expression for the todo stack.
bwdn: 2 is a plain number, fine.
wzrg: 2 is a plain number, fine.
jnsg: 3 is a plain number, fine.
dwhp: 2 is a plain number, fine.
sglv: lzcp * qpqh is an expression for the todo stack.
nbfl: 5 is a plain number, fine.
wcfh: lzrz + bsdh is an expression for the todo stack.
zzsz: 5 is a plain number, fine.
fqrv: 2 is a plain number, fine.
hbjt: zwgp * hjhj is an expression for the todo stack.
ntln: 13 is a plain number, fine.
tdnw: 11 is a plain number, fine.
jhbj: srdc * hjfc is an expression for the todo stack.
mzzd: zlqv * rchm is an expression for the todo stack.
ttdt: chmd + qqjh is an expression for the todo stack.
cgcm: 6 is a plain number, fine.
ngwj: 3 is a plain number, fine.
swnv: 3 is a plain number, fine.
jnsf: nntf + dtfj is an expression for the todo stack.
tsvc: mzzd + npbc is an expression for the todo stack.
qzbg: 3 is a plain number, fine.
cghs: 7 is a plain number, fine.
qwcd: lnhh / qsll is an expression for the todo stack.
tltn: bmhn + qbsh is an expression for the todo stack.
pqgz: 4 is a plain number, fine.
rwrh: 2 is a plain number, fine.
zvmf: nltl * lvzt is an expression for the todo stack.
qjzc: 3 is a plain number, fine.
gvss: rlrr + hmmt is an expression for the todo stack.
lmvz: 3 is a plain number, fine.
rftg: 13 is a plain number, fine.
wpdr: 3 is a plain number, fine.
qbqs: 1 is a plain number, fine.
qfhv: 3 is a plain number, fine.
pvqj: ghcc * gjgv is an expression for the todo stack.
dbww: 2 is a plain number, fine.
prqz: 2 is a plain number, fine.
grjb: ptff + wrwt is an expression for the todo stack.
rrtv: 10 is a plain number, fine.
ffgz: zzzb * nldh is an expression for the todo stack.
bttn: 3 is a plain number, fine.
rttm: 3 is a plain number, fine.
dzjd: gzhn + nzbc is an expression for the todo stack.
qwfj: pvtr * dzdv is an expression for the todo stack.
btbb: rmpd + lclv is an expression for the todo stack.
wgzn: 5 is a plain number, fine.
fzld: nvvv / dzcg is an expression for the todo stack.
jlgn: gjgm / rjrf is an expression for the todo stack.
pnbg: 7 is a plain number, fine.
lrql: dpzc / mrzq is an expression for the todo stack.
cfjg: glfw * thrc is an expression for the todo stack.
frgr: tmzz * bpmc is an expression for the todo stack.
vpll: 2 is a plain number, fine.
pgzh: 2 is a plain number, fine.
qhnp: 13 is a plain number, fine.
htzb: gdsd * plfn is an expression for the todo stack.
dczv: fwhd * sqtt is an expression for the todo stack.
pngn: csvm * vqdd is an expression for the todo stack.
mdzr: 2 is a plain number, fine.
npqp: dsrz * bqlh is an expression for the todo stack.
bnfw: 3 is a plain number, fine.
wnmh: 2 is a plain number, fine.
wssv: qbhr / vvvs is an expression for the todo stack.
nnjm: 3 is a plain number, fine.
vcfn: 13 is a plain number, fine.
rcfm: tftj - jltt is an expression for the todo stack.
dhvn: jqbh + nnqn is an expression for the todo stack.
gdzl: lwhv * bzps is an expression for the todo stack.
lcpf: zqzw / clrl is an expression for the todo stack.
bhrd: qltz * nlvv is an expression for the todo stack.
jfpn: 1 is a plain number, fine.
dmcl: tsjb * vrzd is an expression for the todo stack.
czrb: bncf * hgdl is an expression for the todo stack.
hlzb: hqvs + qmcr is an expression for the todo stack.
cdds: stpv * gwnz is an expression for the todo stack.
bpmc: ngwj + fzdc is an expression for the todo stack.
dctw: nwmp - mfjq is an expression for the todo stack.
mmcc: 5 is a plain number, fine.
vsrf: zfbf * rnsn is an expression for the todo stack.
tplb: mgnw * vpqz is an expression for the todo stack.
vfzp: vvlw * thdm is an expression for the todo stack.
jzww: 2 is a plain number, fine.
dlvh: zqsw + gbvl is an expression for the todo stack.
whfz: dhfc / hdlp is an expression for the todo stack.
llql: jlgn + bjdn is an expression for the todo stack.
wngf: 2 is a plain number, fine.
hrzb: sglf + gndh is an expression for the todo stack.
rqps: 5 is a plain number, fine.
htfq: 2 is a plain number, fine.
jnsh: djfz * fwzc is an expression for the todo stack.
qdmt: 3 is a plain number, fine.
rpzm: 3 is a plain number, fine.
vqcr: whsj * mfqp is an expression for the todo stack.
jzgp: 3 is a plain number, fine.
gngd: 13 is a plain number, fine.
fjnt: 1 is a plain number, fine.
bcfp: jrhp / sdsb is an expression for the todo stack.
hmmh: 5 is a plain number, fine.
fldp: 4 is a plain number, fine.
lcwh: hbtg * hjfs is an expression for the todo stack.
shzg: hnst + hvdj is an expression for the todo stack.
dlnf: vnsp * mbjm is an expression for the todo stack.
jjmj: dhqz - znbn is an expression for the todo stack.
mlhh: 3 is a plain number, fine.
mrmm: 5 is a plain number, fine.
nqsv: 5 is a plain number, fine.
sbzz: qlpp - qpzb is an expression for the todo stack.
gmhw: hjbf * hmnh is an expression for the todo stack.
nrzt: 3 is a plain number, fine.
fpbf: 1 is a plain number, fine.
tsvr: pflr - wssv is an expression for the todo stack.
tpdj: 5 is a plain number, fine.
fvlh: 11 is a plain number, fine.
bsnt: rsqv * ggvb is an expression for the todo stack.
zfwm: qdqr - bbbm is an expression for the todo stack.
jzhp: 8 is a plain number, fine.
qlzb: dbbw + mdhm is an expression for the todo stack.
tqwn: ftft + dlbt is an expression for the todo stack.
vgvp: fmtc + lddb is an expression for the todo stack.
dtcr: dfpv / hwgh is an expression for the todo stack.
dbjl: 2 is a plain number, fine.
szfd: 6 is a plain number, fine.
vzfl: ftpn * vcrl is an expression for the todo stack.
rdtg: nlps * jczp is an expression for the todo stack.
vldd: sbht * hqsf is an expression for the todo stack.
jjqs: nmwc + znwp is an expression for the todo stack.
slmc: 5 is a plain number, fine.
lnzs: nslf * qsdz is an expression for the todo stack.
wfft: fpnf + bbwp is an expression for the todo stack.
qczq: cgrs + wzzd is an expression for the todo stack.
bssz: zrvc * sfrp is an expression for the todo stack.
fvfc: 2 is a plain number, fine.
fdhj: mghf * dnqh is an expression for the todo stack.
hwrj: mgfn + gtqm is an expression for the todo stack.
lnpz: frst + hgvq is an expression for the todo stack.
pfvv: pmzs + qjzc is an expression for the todo stack.
gsqp: 2 is a plain number, fine.
tqhm: 12 is a plain number, fine.
qhhc: jtwc * mpbs is an expression for the todo stack.
pjss: sncv - dsbr is an expression for the todo stack.
tjjh: dmnl + zqzn is an expression for the todo stack.
wtzc: 3 is a plain number, fine.
mdhb: lmjh * jmll is an expression for the todo stack.
ztvl: 2 is a plain number, fine.
vntw: pbhh - nrwg is an expression for the todo stack.
zdjn: lvmq + lfph is an expression for the todo stack.
vpjv: sztg * lnvq is an expression for the todo stack.
tnzz: 2 is a plain number, fine.
bmqt: 4 is a plain number, fine.
tlhq: lpjz * tmqv is an expression for the todo stack.
lpzl: qfjp + thwb is an expression for the todo stack.
ghlb: vjln * lstf is an expression for the todo stack.
wjrb: 3 is a plain number, fine.
wbcn: wfts - tfvm is an expression for the todo stack.
jswd: 5 is a plain number, fine.
vdjc: mzwb * wlnf is an expression for the todo stack.
tlgw: 10 is a plain number, fine.
csht: dcvp * ftwr is an expression for the todo stack.
zflg: trnd + gpsj is an expression for the todo stack.
wsmq: 3 is a plain number, fine.
vcrs: 3 is a plain number, fine.
got 1376 known numbers and 1375 expressions to determine.

can eval 'hcgs + lrnh' to get value for monkey jtmh ... evaluating '$nums{hcgs} + $nums{lrnh}' ... 23
can eval 'csvm * vqdd' to get value for monkey pngn ... evaluating '$nums{csvm} * $nums{vqdd}' ... 49
can eval 'rpzm * nntp' to get value for monkey gmvc ... evaluating '$nums{rpzm} * $nums{nntp}' ... 9
can eval 'lfsr * jtnf' to get value for monkey zprb ... evaluating '$nums{lfsr} * $nums{jtnf}' ... 8
can eval 'jfzh + dwdv' to get value for monkey jsdt ... evaluating '$nums{jfzh} + $nums{dwdv}' ... 7
can eval 'nwss * dmpl' to get value for monkey nvfr ... evaluating '$nums{nwss} * $nums{dmpl}' ... 15
can eval 'rjls + lwbb' to get value for monkey rdsv ... evaluating '$nums{rjls} + $nums{lwbb}' ... 7
can eval 'cgtp * flrj' to get value for monkey dgnd ... evaluating '$nums{cgtp} * $nums{flrj}' ... 18
can eval 'sthr * hmwt' to get value for monkey hrdh ... evaluating '$nums{sthr} * $nums{hmwt}' ... 20
can eval 'mflh * rqps' to get value for monkey bvsm ... evaluating '$nums{mflh} * $nums{rqps}' ... 25
can eval 'bllq * jpgb' to get value for monkey nqzd ... evaluating '$nums{bllq} * $nums{jpgb}' ... 20
can eval 'qzpn * rzwp' to get value for monkey pjsf ... evaluating '$nums{qzpn} * $nums{rzwp}' ... 15
can eval 'nqhm * vddb' to get value for monkey frjt ... evaluating '$nums{nqhm} * $nums{vddb}' ... 91
can eval 'rwpg * dzhz' to get value for monkey lmmw ... evaluating '$nums{rwpg} * $nums{dzhz}' ... 39
can eval 'mzwb * wlnf' to get value for monkey vdjc ... evaluating '$nums{mzwb} * $nums{wlnf}' ... 27
can eval 'qpmc - hgjr' to get value for monkey tjrj ... evaluating '$nums{qpmc} - $nums{hgjr}' ... 7
can eval 'tsrw * vmqz' to get value for monkey qhvs ... evaluating '$nums{tsrw} * $nums{vmqz}' ... 6
can eval 'gztw + srqs' to get value for monkey dznm ... evaluating '$nums{gztw} + $nums{srqs}' ... 8
can eval 'ghtd + cbcf' to get value for monkey tjjl ... evaluating '$nums{ghtd} + $nums{cbcf}' ... 11
can eval 'tlgz * rgnt' to get value for monkey chth ... evaluating '$nums{tlgz} * $nums{rgnt}' ... 30
can eval 'sdjz + llcg' to get value for monkey rsrz ... evaluating '$nums{sdjz} + $nums{llcg}' ... 7
can eval 'hgff * tbjv' to get value for monkey vmrc ... evaluating '$nums{hgff} * $nums{tbjv}' ... 10
can eval 'hqft + gdvz' to get value for monkey qqhs ... evaluating '$nums{hqft} + $nums{gdvz}' ... 23
can eval 'qmjh * gfvf' to get value for monkey dpqr ... evaluating '$nums{qmjh} * $nums{gfvf}' ... 8
can eval 'hrlt * vnvw' to get value for monkey njhn ... evaluating '$nums{hrlt} * $nums{vnvw}' ... 6
can eval 'fddz * wtzc' to get value for monkey nmcr ... evaluating '$nums{fddz} * $nums{wtzc}' ... 9
can eval 'lmzz * gbsb' to get value for monkey jdrw ... evaluating '$nums{lmzz} * $nums{gbsb}' ... 15
can eval 'zjzs + zctz' to get value for monkey slwq ... evaluating '$nums{zjzs} + $nums{zctz}' ... 8
can eval 'vvlw * thdm' to get value for monkey vfzp ... evaluating '$nums{vvlw} * $nums{thdm}' ... 21
can eval 'nsgd * jdth' to get value for monkey wdwg ... evaluating '$nums{nsgd} * $nums{jdth}' ... 36
can eval 'zzpr * tlzs' to get value for monkey rwbt ... evaluating '$nums{zzpr} * $nums{tlzs}' ... 18
can eval 'wnml * cbzs' to get value for monkey qbhr ... evaluating '$nums{wnml} * $nums{cbzs}' ... 28
can eval 'bfrd * sfqj' to get value for monkey mhsb ... evaluating '$nums{bfrd} * $nums{sfqj}' ... 56
can eval 'zhfh + vfmq' to get value for monkey fqvz ... evaluating '$nums{zhfh} + $nums{vfmq}' ... 13
can eval 'nslf * qsdz' to get value for monkey lnzs ... evaluating '$nums{nslf} * $nums{qsdz}' ... 12
can eval 'zztq * mgjb' to get value for monkey jszs ... evaluating '$nums{zztq} * $nums{mgjb}' ... 12
can eval 'tpdj + vlcl' to get value for monkey wfhm ... evaluating '$nums{tpdj} + $nums{vlcl}' ... 8
can eval 'hvsz * twjr' to get value for monkey jqtt ... evaluating '$nums{hvsz} * $nums{twjr}' ... 26
can eval 'tpbf * ffbj' to get value for monkey vplr ... evaluating '$nums{tpbf} * $nums{ffbj}' ... 8
can eval 'pzpz * lfwp' to get value for monkey wrfr ... evaluating '$nums{pzpz} * $nums{lfwp}' ... 8
can eval 'vqrw + ccpr' to get value for monkey mcmj ... evaluating '$nums{vqrw} + $nums{ccpr}' ... 7
can eval 'jqcj * pbhs' to get value for monkey zcvc ... evaluating '$nums{jqcj} * $nums{pbhs}' ... 30
can eval 'nthv * chtn' to get value for monkey dlfg ... evaluating '$nums{nthv} * $nums{chtn}' ... 25
can eval 'sqjf * fmjh' to get value for monkey pfnd ... evaluating '$nums{sqjf} * $nums{fmjh}' ... 6
can eval 'nqbm * hrtp' to get value for monkey wszh ... evaluating '$nums{nqbm} * $nums{hrtp}' ... 18
can eval 'pwbl * dzqj' to get value for monkey wlcn ... evaluating '$nums{pwbl} * $nums{dzqj}' ... 18
can eval 'vqpf + brbg' to get value for monkey gszb ... evaluating '$nums{vqpf} + $nums{brbg}' ... 7
can eval 'grff * whpl' to get value for monkey rwns ... evaluating '$nums{grff} * $nums{whpl}' ... 25
can eval 'vvph * drch' to get value for monkey qclb ... evaluating '$nums{vvph} * $nums{drch}' ... 16
can eval 'lndz * bprw' to get value for monkey tgfj ... evaluating '$nums{lndz} * $nums{bprw}' ... 21
can eval 'stfm * nmgp' to get value for monkey nnqn ... evaluating '$nums{stfm} * $nums{nmgp}' ... 32
can eval 'wngz * hdrg' to get value for monkey njsc ... evaluating '$nums{wngz} * $nums{hdrg}' ... 8
can eval 'rsnb * vpll' to get value for monkey hzcm ... evaluating '$nums{rsnb} * $nums{vpll}' ... 34
can eval 'nrrr * ngmh' to get value for monkey fzgw ... evaluating '$nums{nrrr} * $nums{ngmh}' ... 8
can eval 'mrzj * tptp' to get value for monkey czrw ... evaluating '$nums{mrzj} * $nums{tptp}' ... 32
can eval 'vgdr + gnwt' to get value for monkey nzds ... evaluating '$nums{vgdr} + $nums{gnwt}' ... 17
can eval 'jgwr * stvz' to get value for monkey lpdr ... evaluating '$nums{jgwr} * $nums{stvz}' ... 49
can eval 'tbzr * mncm' to get value for monkey scvs ... evaluating '$nums{tbzr} * $nums{mncm}' ... 57
can eval 'svbj * pjch' to get value for monkey hqsf ... evaluating '$nums{svbj} * $nums{pjch}' ... 25
can eval 'bbll * nbsm' to get value for monkey bcbg ... evaluating '$nums{bbll} * $nums{nbsm}' ... 6
can eval 'sgbt * wgzn' to get value for monkey hhbl ... evaluating '$nums{sgbt} * $nums{wgzn}' ... 25
can eval 'tsrt * cwgp' to get value for monkey tzlp ... evaluating '$nums{tsrt} * $nums{cwgp}' ... 8
can eval 'zmhp * ltwn' to get value for monkey trqf ... evaluating '$nums{zmhp} * $nums{ltwn}' ... 8
can eval 'stsz / vlss' to get value for monkey gzvn ... evaluating '$nums{stsz} / $nums{vlss}' ... 7
can eval 'gngd * fwmw' to get value for monkey cjnw ... evaluating '$nums{gngd} * $nums{fwmw}' ... 26
can eval 'tdjl + lmmw' to get value for monkey jlnn ... evaluating '$nums{tdjl} + $nums{lmmw}' ... 43
can eval 'jjjt * bqjt' to get value for monkey crph ... evaluating '$nums{jjjt} * $nums{bqjt}' ... 6
can eval 'ffrs * qpbl' to get value for monkey lqld ... evaluating '$nums{ffrs} * $nums{qpbl}' ... 10
can eval 'vrcs + tnbj' to get value for monkey ctqj ... evaluating '$nums{vrcs} + $nums{tnbj}' ... 11
can eval 'plvg - fmth' to get value for monkey cswj ... evaluating '$nums{plvg} - $nums{fmth}' ... 13
can eval 'mwnv + cbrg' to get value for monkey qgnt ... evaluating '$nums{mwnv} + $nums{cbrg}' ... 6
can eval 'lnbr * zfdw' to get value for monkey zbfv ... evaluating '$nums{lnbr} * $nums{zfdw}' ... 40
can eval 'pzlw * wcjj' to get value for monkey dqsh ... evaluating '$nums{pzlw} * $nums{wcjj}' ... 10
can eval 'vzqg + fzqs' to get value for monkey qzqh ... evaluating '$nums{vzqg} + $nums{fzqs}' ... 6
can eval 'lhvj + mdbr' to get value for monkey lwwj ... evaluating '$nums{lhvj} + $nums{mdbr}' ... 7
can eval 'dqwn * zcfz' to get value for monkey bnrr ... evaluating '$nums{dqwn} * $nums{zcfz}' ... 12
can eval 'lchj + vprg' to get value for monkey zhpb ... evaluating '$nums{lchj} + $nums{vprg}' ... 23
can eval 'lnzs * npnt' to get value for monkey wsqn ... evaluating '$nums{lnzs} * $nums{npnt}' ... 48
can eval 'jcqf + fvlh' to get value for monkey bqjn ... evaluating '$nums{jcqf} + $nums{fvlh}' ... 13
can eval 'cdlg * ggmm' to get value for monkey dccg ... evaluating '$nums{cdlg} * $nums{ggmm}' ... 9
can eval 'vfnh * rjgc' to get value for monkey llqn ... evaluating '$nums{vfnh} * $nums{rjgc}' ... 8
can eval 'zcws * fttp' to get value for monkey blzn ... evaluating '$nums{zcws} * $nums{fttp}' ... 22
can eval 'dwsp + dfzf' to get value for monkey gnfz ... evaluating '$nums{dwsp} + $nums{dfzf}' ... 19
can eval 'ppvc * gsjq' to get value for monkey sjbj ... evaluating '$nums{ppvc} * $nums{gsjq}' ... 40
can eval 'cvnw * hvtg' to get value for monkey tvzz ... evaluating '$nums{cvnw} * $nums{hvtg}' ... 48
can eval 'mtbg + vplr' to get value for monkey brvf ... evaluating '$nums{mtbg} + $nums{vplr}' ... 20
can eval 'srnz + ccch' to get value for monkey ltfv ... evaluating '$nums{srnz} + $nums{ccch}' ... 23
can eval 'tttz * bmqp' to get value for monkey szjv ... evaluating '$nums{tttz} * $nums{bmqp}' ... 8
can eval 'cgcm + wjsb' to get value for monkey glnl ... evaluating '$nums{cgcm} + $nums{wjsb}' ... 7
can eval 'dnqf * swnb' to get value for monkey ctdq ... evaluating '$nums{dnqf} * $nums{swnb}' ... 9
can eval 'pqgb * mcmj' to get value for monkey vbfz ... evaluating '$nums{pqgb} * $nums{mcmj}' ... 21
can eval 'mlsc * jpsg' to get value for monkey hqrm ... evaluating '$nums{mlsc} * $nums{jpsg}' ... 14
can eval 'lqjn + vpgp' to get value for monkey rvjq ... evaluating '$nums{lqjn} + $nums{vpgp}' ... 7
can eval 'ldlr * cwqv' to get value for monkey clvh ... evaluating '$nums{ldlr} * $nums{cwqv}' ... 28
can eval 'jmdf * wgjb' to get value for monkey qsvf ... evaluating '$nums{jmdf} * $nums{wgjb}' ... 15
can eval 'qhsq + swnv' to get value for monkey fqfv ... evaluating '$nums{qhsq} + $nums{swnv}' ... 7
can eval 'srft * lhmq' to get value for monkey mhws ... evaluating '$nums{srft} * $nums{lhmq}' ... 12
can eval 'mphf * hvmj' to get value for monkey szrd ... evaluating '$nums{mphf} * $nums{hvmj}' ... 6
can eval 'vjlz + hhtb' to get value for monkey djfz ... evaluating '$nums{vjlz} + $nums{hhtb}' ... 8
can eval 'vnrf * mfnp' to get value for monkey qpzb ... evaluating '$nums{vnrf} * $nums{mfnp}' ... 6
can eval 'hscz * lrtg' to get value for monkey gght ... evaluating '$nums{hscz} * $nums{lrtg}' ... 10
can eval 'lqld + bvww' to get value for monkey zhth ... evaluating '$nums{lqld} + $nums{bvww}' ... 26
can eval 'mhzh * dbmf' to get value for monkey mrpz ... evaluating '$nums{mhzh} * $nums{dbmf}' ... 39
can eval 'rzjq * zrtr' to get value for monkey sgcc ... evaluating '$nums{rzjq} * $nums{zrtr}' ... 9
can eval 'zgqn * slmc' to get value for monkey ptpl ... evaluating '$nums{zgqn} * $nums{slmc}' ... 10
can eval 'lsdg * mmcc' to get value for monkey clqj ... evaluating '$nums{lsdg} * $nums{mmcc}' ... 10
can eval 'qzwt + nhgz' to get value for monkey svfr ... evaluating '$nums{qzwt} + $nums{nhgz}' ... 9
can eval 'nwvw * cbrv' to get value for monkey bgwb ... evaluating '$nums{nwvw} * $nums{cbrv}' ... 21
can eval 'gbhn + tqvl' to get value for monkey jqng ... evaluating '$nums{gbhn} + $nums{tqvl}' ... 7
can eval 'zfbf * rnsn' to get value for monkey vsrf ... evaluating '$nums{zfbf} * $nums{rnsn}' ... 30
can eval 'pqfh * csct' to get value for monkey nlwf ... evaluating '$nums{pqfh} * $nums{csct}' ... 35
can eval 'qgwz + wdwg' to get value for monkey ngfz ... evaluating '$nums{qgwz} + $nums{wdwg}' ... 37
can eval 'hvdr * fqfv' to get value for monkey pslj ... evaluating '$nums{hvdr} * $nums{fqfv}' ... 35
can eval 'dmqv * gjcw' to get value for monkey twmt ... evaluating '$nums{dmqv} * $nums{gjcw}' ... 6
can eval 'vpnm * jzzh' to get value for monkey msqm ... evaluating '$nums{vpnm} * $nums{jzzh}' ... 25
can eval 'bdzl * qdmt' to get value for monkey ghsw ... evaluating '$nums{bdzl} * $nums{qdmt}' ... 21
can eval 'tdnw + brzt' to get value for monkey bglc ... evaluating '$nums{tdnw} + $nums{brzt}' ... 29
can eval 'rmwh * jzww' to get value for monkey lrrd ... evaluating '$nums{rmwh} * $nums{jzww}' ... 22
can eval 'fvfj * lmrn' to get value for monkey qqvm ... evaluating '$nums{fvfj} * $nums{lmrn}' ... 51
can eval 'nvfr * fcnl' to get value for monkey nhgc ... evaluating '$nums{nvfr} * $nums{fcnl}' ... 60
can eval 'pzbv * bdvg' to get value for monkey hdvz ... evaluating '$nums{pzbv} * $nums{bdvg}' ... 26
can eval 'rlcm + vsrf' to get value for monkey ztbw ... evaluating '$nums{rlcm} + $nums{vsrf}' ... 31
can eval 'rhtv + sqfb' to get value for monkey mtqq ... evaluating '$nums{rhtv} + $nums{sqfb}' ... 7
can eval 'hcnp + bwqn' to get value for monkey qhvn ... evaluating '$nums{hcnp} + $nums{bwqn}' ... 11
can eval 'ptgr + vstb' to get value for monkey gbtv ... evaluating '$nums{ptgr} + $nums{vstb}' ... 7
can eval 'stpv * gwnz' to get value for monkey cdds ... evaluating '$nums{stpv} * $nums{gwnz}' ... 12
can eval 'bhlh * fqvz' to get value for monkey bzhc ... evaluating '$nums{bhlh} * $nums{fqvz}' ... 26
can eval 'nmcr + spcv' to get value for monkey qmdj ... evaluating '$nums{nmcr} + $nums{spcv}' ... 14
can eval 'qwnd * dslw' to get value for monkey hgtp ... evaluating '$nums{qwnd} * $nums{dslw}' ... 25
can eval 'ftft + dlbt' to get value for monkey tqwn ... evaluating '$nums{ftft} + $nums{dlbt}' ... 7
can eval 'cmpm * wmfv' to get value for monkey cqcm ... evaluating '$nums{cmpm} * $nums{wmfv}' ... 10
can eval 'clvh - ltht' to get value for monkey dmbs ... evaluating '$nums{clvh} - $nums{ltht}' ... 19
can eval 'vlpr * nzzw' to get value for monkey whhb ... evaluating '$nums{vlpr} * $nums{nzzw}' ... 9
can eval 'jnsg * clsj' to get value for monkey jsmh ... evaluating '$nums{jnsg} * $nums{clsj}' ... 15
can eval 'fzrv + vgqs' to get value for monkey qmfh ... evaluating '$nums{fzrv} + $nums{vgqs}' ... 7
can eval 'qzbg * wszh' to get value for monkey fgdv ... evaluating '$nums{qzbg} * $nums{wszh}' ... 54
can eval 'bgzs + gzvn' to get value for monkey gbcl ... evaluating '$nums{bgzs} + $nums{gzvn}' ... 13
can eval 'tmvt * drml' to get value for monkey rqwt ... evaluating '$nums{tmvt} * $nums{drml}' ... 16
can eval 'jgsz * cqzs' to get value for monkey prbf ... evaluating '$nums{jgsz} * $nums{cqzs}' ... 25
can eval 'dmhb * tnmj' to get value for monkey hwdd ... evaluating '$nums{dmhb} * $nums{tnmj}' ... 8
can eval 'jbnf - zwrn' to get value for monkey wnwq ... evaluating '$nums{jbnf} - $nums{zwrn}' ... 11
can eval 'rsrz * sbzp' to get value for monkey mvgt ... evaluating '$nums{rsrz} * $nums{sbzp}' ... 21
can eval 'sjbt * wbbv' to get value for monkey fmtc ... evaluating '$nums{sjbt} * $nums{wbbv}' ... 15
can eval 'wjrt * gzwc' to get value for monkey cjrh ... evaluating '$nums{wjrt} * $nums{gzwc}' ... 6
can eval 'wpsf - rhrq' to get value for monkey rvww ... evaluating '$nums{wpsf} - $nums{rhrq}' ... 14
can eval 'qmnw + dltq' to get value for monkey cdmg ... evaluating '$nums{qmnw} + $nums{dltq}' ... 9
can eval 'grst + qzbv' to get value for monkey slcv ... evaluating '$nums{grst} + $nums{qzbv}' ... 33
can eval 'qzsj - ngjc' to get value for monkey lncs ... evaluating '$nums{qzsj} - $nums{ngjc}' ... 17
can eval 'pjbm * sjwq' to get value for monkey qbhd ... evaluating '$nums{pjbm} * $nums{sjwq}' ... 25
can eval 'cdlq * tbzt' to get value for monkey gphc ... evaluating '$nums{cdlq} * $nums{tbzt}' ... 9
can eval 'mnwq * wlqd' to get value for monkey jhzj ... evaluating '$nums{mnwq} * $nums{wlqd}' ... 16
can eval 'rmbm + tjdp' to get value for monkey ggml ... evaluating '$nums{rmbm} + $nums{tjdp}' ... 7
can eval 'tfcn + ddjn' to get value for monkey hmmt ... evaluating '$nums{tfcn} + $nums{ddjn}' ... 17
can eval 'snjd + qwwh' to get value for monkey rmbr ... evaluating '$nums{snjd} + $nums{qwwh}' ... 15
can eval 'zlbt * hrsn' to get value for monkey bfsb ... evaluating '$nums{zlbt} * $nums{hrsn}' ... 45
can eval 'hbbq * czwg' to get value for monkey fmvz ... evaluating '$nums{hbbq} * $nums{czwg}' ... 8
can eval 'vmrc + smpr' to get value for monkey mthw ... evaluating '$nums{vmrc} + $nums{smpr}' ... 12
can eval 'lmvz * bfqg' to get value for monkey wzzd ... evaluating '$nums{lmvz} * $nums{bfqg}' ... 6
can eval 'nnsh + bnph' to get value for monkey rfhn ... evaluating '$nums{nnsh} + $nums{bnph}' ... 12
can eval 'flwn + jsmh' to get value for monkey dhhw ... evaluating '$nums{flwn} + $nums{jsmh}' ... 21
can eval 'jltc + bngt' to get value for monkey cfwz ... evaluating '$nums{jltc} + $nums{bngt}' ... 19
can eval 'qgpl + fjnt' to get value for monkey rjwg ... evaluating '$nums{qgpl} + $nums{fjnt}' ... 11
can eval 'fhnr * gwqq' to get value for monkey hwqf ... evaluating '$nums{fhnr} * $nums{gwqq}' ... 8
can eval 'hhbl + dbpn' to get value for monkey bjbt ... evaluating '$nums{hhbl} + $nums{dbpn}' ... 41
can eval 'bnfv / lzcn' to get value for monkey pfwc ... evaluating '$nums{bnfv} / $nums{lzcn}' ... 7
can eval 'jlgj * mlfr' to get value for monkey fbdg ... evaluating '$nums{jlgj} * $nums{mlfr}' ... 9
can eval 'bqjn * ptrb' to get value for monkey hzmw ... evaluating '$nums{bqjn} * $nums{ptrb}' ... 26
can eval 'mdbg * nwsd' to get value for monkey ngng ... evaluating '$nums{mdbg} * $nums{nwsd}' ... 9
can eval 'rrtv * cgqj' to get value for monkey fcfv ... evaluating '$nums{rrtv} * $nums{cgqj}' ... 20
can eval 'njnq + fgbl' to get value for monkey ljhg ... evaluating '$nums{njnq} + $nums{fgbl}' ... 24
can eval 'glht * cfhv' to get value for monkey mcqn ... evaluating '$nums{glht} * $nums{cfhv}' ... 10
can eval 'sdjd * hztf' to get value for monkey djbw ... evaluating '$nums{sdjd} * $nums{hztf}' ... 9
can eval 'jbwr + rbdh' to get value for monkey vtcl ... evaluating '$nums{jbwr} + $nums{rbdh}' ... 19
can eval 'rtmn + mhcm' to get value for monkey hqcs ... evaluating '$nums{rtmn} + $nums{mhcm}' ... 23
can eval 'jfmw * djqv' to get value for monkey hbrq ... evaluating '$nums{jfmw} * $nums{djqv}' ... 6
can eval 'zfzt + slht' to get value for monkey dvtc ... evaluating '$nums{zfzt} + $nums{slht}' ... 10
can eval 'prgr * tpzc' to get value for monkey ldlt ... evaluating '$nums{prgr} * $nums{tpzc}' ... 9
can eval 'rhqz + lnzl' to get value for monkey wtbb ... evaluating '$nums{rhqz} + $nums{lnzl}' ... 7
can eval 'jszs / ltbc' to get value for monkey bfct ... evaluating '$nums{jszs} / $nums{ltbc}' ... 6
can eval 'ndgc * bhfj' to get value for monkey lqnc ... evaluating '$nums{ndgc} * $nums{bhfj}' ... 91
can eval 'cphq * dmbs' to get value for monkey ggdg ... evaluating '$nums{cphq} * $nums{dmbs}' ... 38
can eval 'jzrg * nggs' to get value for monkey wvvn ... evaluating '$nums{jzrg} * $nums{nggs}' ... 60
can eval 'bmhn + qbsh' to get value for monkey tltn ... evaluating '$nums{bmhn} + $nums{qbsh}' ... 11
can eval 'zfvz * fngz' to get value for monkey tbfz ... evaluating '$nums{zfvz} * $nums{fngz}' ... 26
can eval 'wrpm * qtlm' to get value for monkey stzh ... evaluating '$nums{wrpm} * $nums{qtlm}' ... 12
can eval 'wsbm * gqcz' to get value for monkey stdj ... evaluating '$nums{wsbm} * $nums{gqcz}' ... 26
can eval 'jvbh * fdjt' to get value for monkey lmnn ... evaluating '$nums{jvbh} * $nums{fdjt}' ... 15
can eval 'cbtd + pnnt' to get value for monkey zblw ... evaluating '$nums{cbtd} + $nums{pnnt}' ... 7
can eval 'fmtc + lddb' to get value for monkey vgvp ... evaluating '$nums{fmtc} + $nums{lddb}' ... 25
can eval 'htfq * qbzh' to get value for monkey jhnh ... evaluating '$nums{htfq} * $nums{qbzh}' ... 10
can eval 'lngb + bnrr' to get value for monkey spwg ... evaluating '$nums{lngb} + $nums{bnrr}' ... 14
can eval 'hgjq * wfhm' to get value for monkey cwch ... evaluating '$nums{hgjq} * $nums{wfhm}' ... 24
can eval 'fftm * ggcc' to get value for monkey cshv ... evaluating '$nums{fftm} * $nums{ggcc}' ... 10
can eval 'zlzp + rjbc' to get value for monkey pbsd ... evaluating '$nums{zlzp} + $nums{rjbc}' ... 17
can eval 'pvtr * dzdv' to get value for monkey qwfj ... evaluating '$nums{pvtr} * $nums{dzdv}' ... 45
can eval 'nzds * rhtd' to get value for monkey btrb ... evaluating '$nums{nzds} * $nums{rhtd}' ... 34
can eval 'nlps * jczp' to get value for monkey rdtg ... evaluating '$nums{nlps} * $nums{jczp}' ... 75
can eval 'zqdl - dfsw' to get value for monkey fhfg ... evaluating '$nums{zqdl} - $nums{dfsw}' ... 6
can eval 'jglm * bjvw' to get value for monkey qnqz ... evaluating '$nums{jglm} * $nums{bjvw}' ... 6
can eval 'vhht * zmth' to get value for monkey pdgl ... evaluating '$nums{vhht} * $nums{zmth}' ... 15
can eval 'dsvz * bqcz' to get value for monkey pspq ... evaluating '$nums{dsvz} * $nums{bqcz}' ... 10
can eval 'pwpl * gvnb' to get value for monkey wzzv ... evaluating '$nums{pwpl} * $nums{gvnb}' ... 10
can eval 'fwqv - cjrh' to get value for monkey bgjp ... evaluating '$nums{fwqv} - $nums{cjrh}' ... 13
can eval 'tqhm - pvpm' to get value for monkey brwm ... evaluating '$nums{tqhm} - $nums{pvpm}' ... 11
can eval 'qqvm / sjsp' to get value for monkey rbwf ... evaluating '$nums{qqvm} / $nums{sjsp}' ... 17
can eval 'qbnc * tvtg' to get value for monkey twfn ... evaluating '$nums{qbnc} * $nums{tvtg}' ... 10
can eval 'svvl + twch' to get value for monkey jvfj ... evaluating '$nums{svvl} + $nums{twch}' ... 9
can eval 'wbvm * sptr' to get value for monkey hbqd ... evaluating '$nums{wbvm} * $nums{sptr}' ... 8
can eval 'vtln * jbbw' to get value for monkey vbmh ... evaluating '$nums{vtln} * $nums{jbbw}' ... 10
can eval 'fjng + swcq' to get value for monkey bqfr ... evaluating '$nums{fjng} + $nums{swcq}' ... 7
can eval 'jpzz * hbqd' to get value for monkey mzcw ... evaluating '$nums{jpzz} * $nums{hbqd}' ... 32
can eval 'hwbf * mmbt' to get value for monkey chdb ... evaluating '$nums{hwbf} * $nums{mmbt}' ... 6
can eval 'vgjd * tlsc' to get value for monkey tqjz ... evaluating '$nums{vgjd} * $nums{tlsc}' ... 6
can eval 'bnlg * gbtv' to get value for monkey qwwg ... evaluating '$nums{bnlg} * $nums{gbtv}' ... 21
can eval 'hbbd * mdmd' to get value for monkey mngp ... evaluating '$nums{hbbd} * $nums{mdmd}' ... 6
can eval 'crpd + tstq' to get value for monkey rlzd ... evaluating '$nums{crpd} + $nums{tstq}' ... 7
can eval 'qnms * ntln' to get value for monkey mchq ... evaluating '$nums{qnms} * $nums{ntln}' ... 26
can eval 'hgzm * qsvf' to get value for monkey gztj ... evaluating '$nums{hgzm} * $nums{qsvf}' ... 30
can eval 'pnbg + zhrb' to get value for monkey nmvg ... evaluating '$nums{pnbg} + $nums{zhrb}' ... 23
can eval 'qpdh * dmqq' to get value for monkey vsdt ... evaluating '$nums{qpdh} * $nums{dmqq}' ... 9
can eval 'qbhr / vvvs' to get value for monkey wssv ... evaluating '$nums{qbhr} / $nums{vvvs}' ... 7
can eval 'jdwm * dqcp' to get value for monkey thpf ... evaluating '$nums{jdwm} * $nums{dqcp}' ... 10
can eval 'ppzb + zmss' to get value for monkey wgvh ... evaluating '$nums{ppzb} + $nums{zmss}' ... 6
can eval 'lflw * mtqq' to get value for monkey pqvv ... evaluating '$nums{lflw} * $nums{mtqq}' ... 14
can eval 'mfnz * ncsp' to get value for monkey qqjf ... evaluating '$nums{mfnz} * $nums{ncsp}' ... 10
can eval 'dwvm + bjsd' to get value for monkey wsjc ... evaluating '$nums{dwvm} + $nums{bjsd}' ... 16
can eval 'bjwz * wdhn' to get value for monkey sjgf ... evaluating '$nums{bjwz} * $nums{wdhn}' ... 10
can eval 'jrrg + pvlp' to get value for monkey gwrh ... evaluating '$nums{jrrg} + $nums{pvlp}' ... 8
can eval 'ffdv * qzqh' to get value for monkey zhcf ... evaluating '$nums{ffdv} * $nums{qzqh}' ... 12
can eval 'swps * srtj' to get value for monkey jdqn ... evaluating '$nums{swps} * $nums{srtj}' ... 16
can eval 'qclb + qrjr' to get value for monkey bdsp ... evaluating '$nums{qclb} + $nums{qrjr}' ... 25
can eval 'bbdm * bgwb' to get value for monkey rtnc ... evaluating '$nums{bbdm} * $nums{bgwb}' ... 63
can eval 'hfws * cwvj' to get value for monkey lstf ... evaluating '$nums{hfws} * $nums{cwvj}' ... 51
can eval 'zthj * whtn' to get value for monkey pmzs ... evaluating '$nums{zthj} * $nums{whtn}' ... 10
can eval 'dbmd * vbgc' to get value for monkey bdbh ... evaluating '$nums{dbmd} * $nums{vbgc}' ... 55
can eval 'dhtj * bpjv' to get value for monkey cnlh ... evaluating '$nums{dhtj} * $nums{bpjv}' ... 42
can eval 'nfbt + tsgb' to get value for monkey rstn ... evaluating '$nums{nfbt} + $nums{tsgb}' ... 7
can eval 'brps * dchw' to get value for monkey gcns ... evaluating '$nums{brps} * $nums{dchw}' ... 6
can eval 'cvhr * twqn' to get value for monkey ltfn ... evaluating '$nums{cvhr} * $nums{twqn}' ... 6
can eval 'jttt + zdpn' to get value for monkey rbgm ... evaluating '$nums{jttt} + $nums{zdpn}' ... 8
can eval 'mghf * dnqh' to get value for monkey fdhj ... evaluating '$nums{mghf} * $nums{dnqh}' ... 20
can eval 'gbhm + hlfl' to get value for monkey mtbv ... evaluating '$nums{gbhm} + $nums{hlfl}' ... 7
can eval 'gcwd * cqbr' to get value for monkey wrst ... evaluating '$nums{gcwd} * $nums{cqbr}' ... 10
can eval 'hshd + nscv' to get value for monkey jnbv ... evaluating '$nums{hshd} + $nums{nscv}' ... 11
can eval 'bgql + nzqz' to get value for monkey vnhf ... evaluating '$nums{bgql} + $nums{nzqz}' ... 23
can eval 'nnfq + cmtt' to get value for monkey rrzv ... evaluating '$nums{nnfq} + $nums{cmtt}' ... 7
can eval 'ggpd * bljw' to get value for monkey jbmf ... evaluating '$nums{ggpd} * $nums{bljw}' ... 12
can eval 'npjg * ztfw' to get value for monkey zfhs ... evaluating '$nums{npjg} * $nums{ztfw}' ... 18
can eval 'ldfn + pfsq' to get value for monkey nbrt ... evaluating '$nums{ldfn} + $nums{pfsq}' ... 7
can eval 'szjv + jmsw' to get value for monkey fggm ... evaluating '$nums{szjv} + $nums{jmsw}' ... 11
can eval 'bqgb * hbtf' to get value for monkey dnzt ... evaluating '$nums{bqgb} * $nums{hbtf}' ... 8
can eval 'hzcm / dpcj' to get value for monkey hcsf ... evaluating '$nums{hzcm} / $nums{dpcj}' ... 17
can eval 'qnst * glqg' to get value for monkey hzls ... evaluating '$nums{qnst} * $nums{glqg}' ... 18
can eval 'mznv + sldh' to get value for monkey pgbh ... evaluating '$nums{mznv} + $nums{sldh}' ... 7
can eval 'ndcg * rdvh' to get value for monkey swqh ... evaluating '$nums{ndcg} * $nums{rdvh}' ... 14
can eval 'ggml + sjbj' to get value for monkey dvrg ... evaluating '$nums{ggml} + $nums{sjbj}' ... 47
can eval 'nntd * hpzq' to get value for monkey rtjd ... evaluating '$nums{nntd} * $nums{hpzq}' ... 24
can eval 'hcgb + ljhg' to get value for monkey sgrn ... evaluating '$nums{hcgb} + $nums{ljhg}' ... 29
can eval 'bjzb * zdzj' to get value for monkey bwlh ... evaluating '$nums{bjzb} * $nums{zdzj}' ... 32
can eval 'wcmp * nsvf' to get value for monkey qvds ... evaluating '$nums{wcmp} * $nums{nsvf}' ... 34
can eval 'cwmw * sbrn' to get value for monkey fqrm ... evaluating '$nums{cwmw} * $nums{sbrn}' ... 6
can eval 'ltfv * mlzd' to get value for monkey mfbv ... evaluating '$nums{ltfv} * $nums{mlzd}' ... 46
can eval 'zhgz + mmmq' to get value for monkey pvnc ... evaluating '$nums{zhgz} + $nums{mmmq}' ... 11
can eval 'nvpf * bgjp' to get value for monkey frrd ... evaluating '$nums{nvpf} * $nums{bgjp}' ... 26
can eval 'pftt * cfgg' to get value for monkey gwws ... evaluating '$nums{pftt} * $nums{cfgg}' ... 8
can eval 'czbw - tqpv' to get value for monkey rbcb ... evaluating '$nums{czbw} - $nums{tqpv}' ... 13
can eval 'ncmp * snfr' to get value for monkey gzcn ... evaluating '$nums{ncmp} * $nums{snfr}' ... 10
can eval 'rtcm * pjsf' to get value for monkey tnmd ... evaluating '$nums{rtcm} * $nums{pjsf}' ... 75
can eval 'cvtc + hnfl' to get value for monkey wphf ... evaluating '$nums{cvtc} + $nums{hnfl}' ... 8
can eval 'vzmc * ttwd' to get value for monkey lwtd ... evaluating '$nums{vzmc} * $nums{ttwd}' ... 38
can eval 'cwmz * gvlz' to get value for monkey plfn ... evaluating '$nums{cwmz} * $nums{gvlz}' ... 6
can eval 'nzqw * sntr' to get value for monkey hgmg ... evaluating '$nums{nzqw} * $nums{sntr}' ... 8
can eval 'bvzj * zfrq' to get value for monkey bbhq ... evaluating '$nums{bvzj} * $nums{zfrq}' ... 15
can eval 'gfgz * sjmz' to get value for monkey rppb ... evaluating '$nums{gfgz} * $nums{sjmz}' ... 10
can eval 'trmd + gzcn' to get value for monkey mhcd ... evaluating '$nums{trmd} + $nums{gzcn}' ... 13
can eval 'cfdf * gsch' to get value for monkey bzts ... evaluating '$nums{cfdf} * $nums{gsch}' ... 12
can eval 'zwgp * hjhj' to get value for monkey hbjt ... evaluating '$nums{zwgp} * $nums{hjhj}' ... 6
can eval 'ljpr * nbcq' to get value for monkey mjdp ... evaluating '$nums{ljpr} * $nums{nbcq}' ... 20
can eval 'whhl * hjtv' to get value for monkey nmcj ... evaluating '$nums{whhl} * $nums{hjtv}' ... 10
can eval 'rbwf + vpwg' to get value for monkey tcqg ... evaluating '$nums{rbwf} + $nums{vpwg}' ... 33
can eval 'jhts + zbfv' to get value for monkey cgdd ... evaluating '$nums{jhts} + $nums{zbfv}' ... 51
can eval 'tflh + jtcj' to get value for monkey bbwp ... evaluating '$nums{tflh} + $nums{jtcj}' ... 12
can eval 'rtmg + gtjw' to get value for monkey lsbc ... evaluating '$nums{rtmg} + $nums{gtjw}' ... 22
can eval 'hrdh + nrww' to get value for monkey vcjv ... evaluating '$nums{hrdh} + $nums{nrww}' ... 23
can eval 'njqv * fqmn' to get value for monkey hqvs ... evaluating '$nums{njqv} * $nums{fqmn}' ... 52
can eval 'ghcc * gjgv' to get value for monkey pvqj ... evaluating '$nums{ghcc} * $nums{gjgv}' ... 30
can eval 'ztbw * hjvp' to get value for monkey mmcr ... evaluating '$nums{ztbw} * $nums{hjvp}' ... 155
can eval 'pswr + bcbg' to get value for monkey fwpr ... evaluating '$nums{pswr} + $nums{bcbg}' ... 8
can eval 'hwqf * brws' to get value for monkey tlsq ... evaluating '$nums{hwqf} * $nums{brws}' ... 24
can eval 'ldgn + vsdt' to get value for monkey dbns ... evaluating '$nums{ldgn} + $nums{vsdt}' ... 13
can eval 'fchg * jchv' to get value for monkey dzdf ... evaluating '$nums{fchg} * $nums{jchv}' ... 40
can eval 'hgnl + zfmc' to get value for monkey ssdw ... evaluating '$nums{hgnl} + $nums{zfmc}' ... 8
can eval 'pdqp + sjgf' to get value for monkey crwj ... evaluating '$nums{pdqp} + $nums{sjgf}' ... 13
can eval 'fqrv * wqwm' to get value for monkey lssr ... evaluating '$nums{fqrv} * $nums{wqwm}' ... 6
can eval 'vhss - bttn' to get value for monkey jjmv ... evaluating '$nums{vhss} - $nums{bttn}' ... 7
can eval 'rpgs * fbbv' to get value for monkey tcfw ... evaluating '$nums{rpgs} * $nums{fbbv}' ... 78
can eval 'bpwh + ddff' to get value for monkey blzj ... evaluating '$nums{bpwh} + $nums{ddff}' ... 11
can eval 'jlnn - mthw' to get value for monkey ttfw ... evaluating '$nums{jlnn} - $nums{mthw}' ... 31
can eval 'vnpf * wzlh' to get value for monkey lbgm ... evaluating '$nums{vnpf} * $nums{wzlh}' ... 12
can eval 'zzfj + hgtp' to get value for monkey qnhh ... evaluating '$nums{zzfj} + $nums{hgtp}' ... 31
can eval 'mdzr * zbcs' to get value for monkey qhgh ... evaluating '$nums{mdzr} * $nums{zbcs}' ... 8
can eval 'hzhf + ztvc' to get value for monkey nlnw ... evaluating '$nums{hzhf} + $nums{ztvc}' ... 8
can eval 'ggsl + dlfg' to get value for monkey cmbw ... evaluating '$nums{ggsl} + $nums{dlfg}' ... 31
can eval 'dvnn - sbzd' to get value for monkey sgtj ... evaluating '$nums{dvnn} - $nums{sbzd}' ... 11
can eval 'rgvf * tnbr' to get value for monkey mmml ... evaluating '$nums{rgvf} * $nums{tnbr}' ... 25
can eval 'llhn * wpzc' to get value for monkey dfpv ... evaluating '$nums{llhn} * $nums{wpzc}' ... 33
can eval 'vwng * mnbd' to get value for monkey prpb ... evaluating '$nums{vwng} * $nums{mnbd}' ... 64
can eval 'gnfc * fjrv' to get value for monkey ccfq ... evaluating '$nums{gnfc} * $nums{fjrv}' ... 33
can eval 'mhcd + qmfh' to get value for monkey crdm ... evaluating '$nums{mhcd} + $nums{qmfh}' ... 20
can eval 'wtqc * pmtw' to get value for monkey wtmt ... evaluating '$nums{wtqc} * $nums{pmtw}' ... 27
can eval 'bzcl * szmh' to get value for monkey rmdr ... evaluating '$nums{bzcl} * $nums{szmh}' ... 57
can eval 'lpvq * lbjf' to get value for monkey cqpj ... evaluating '$nums{lpvq} * $nums{lbjf}' ... 21
can eval 'djbw * hzwp' to get value for monkey hmgn ... evaluating '$nums{djbw} * $nums{hzwp}' ... 27
can eval 'rjdm + jttj' to get value for monkey szbv ... evaluating '$nums{rjdm} + $nums{jttj}' ... 10
can eval 'mqcq * qhvn' to get value for monkey vdgf ... evaluating '$nums{mqcq} * $nums{qhvn}' ... 209
can eval 'vtgm * gbcl' to get value for monkey fwqh ... evaluating '$nums{vtgm} * $nums{gbcl}' ... 52
can eval 'cdtv * qmdj' to get value for monkey sstv ... evaluating '$nums{cdtv} * $nums{qmdj}' ... 210
can eval 'vltb + tssz' to get value for monkey hgbb ... evaluating '$nums{vltb} + $nums{tssz}' ... 6
can eval 'mvjf * hshp' to get value for monkey pdsj ... evaluating '$nums{mvjf} * $nums{hshp}' ... 9
can eval 'jpqn * mlcb' to get value for monkey jvht ... evaluating '$nums{jpqn} * $nums{mlcb}' ... 8
can eval 'bgjj * btdd' to get value for monkey sdzn ... evaluating '$nums{bgjj} * $nums{btdd}' ... 22
can eval 'hrzh * npcg' to get value for monkey tvrv ... evaluating '$nums{hrzh} * $nums{npcg}' ... 6
can eval 'vcrs + mgsd' to get value for monkey fzwh ... evaluating '$nums{vcrs} + $nums{mgsd}' ... 7
can eval 'mpss + jmgj' to get value for monkey bwsq ... evaluating '$nums{mpss} + $nums{jmgj}' ... 7
can eval 'hjmh + wwhp' to get value for monkey jcpq ... evaluating '$nums{hjmh} + $nums{wwhp}' ... 7
can eval 'scmj + lcbh' to get value for monkey rglv ... evaluating '$nums{scmj} + $nums{lcbh}' ... 11
can eval 'slfg * pgsd' to get value for monkey dcvp ... evaluating '$nums{slfg} * $nums{pgsd}' ... 10
can eval 'tgsc - lndq' to get value for monkey htgl ... evaluating '$nums{tgsc} - $nums{lndq}' ... 12
can eval 'fhmr + rmvl' to get value for monkey vbrc ... evaluating '$nums{fhmr} + $nums{rmvl}' ... 11
can eval 'hdqg + lzps' to get value for monkey hjzv ... evaluating '$nums{hdqg} + $nums{lzps}' ... 20
can eval 'bfct + lrtt' to get value for monkey lldw ... evaluating '$nums{bfct} + $nums{lrtt}' ... 13
can eval 'pwtv * nhrt' to get value for monkey mlhj ... evaluating '$nums{pwtv} * $nums{nhrt}' ... 21
can eval 'sttd * ngpw' to get value for monkey wjjd ... evaluating '$nums{sttd} * $nums{ngpw}' ... 9
can eval 'tpbc * zzsz' to get value for monkey lclv ... evaluating '$nums{tpbc} * $nums{zzsz}' ... 25
can eval 'dsmr + gqgg' to get value for monkey mzvs ... evaluating '$nums{dsmr} + $nums{gqgg}' ... 7
can eval 'mngp + qdhg' to get value for monkey pmhs ... evaluating '$nums{mngp} + $nums{qdhg}' ... 7
can eval 'nmcj + msfn' to get value for monkey mqrf ... evaluating '$nums{nmcj} + $nums{msfn}' ... 29
can eval 'lvpz * lfgv' to get value for monkey hrdp ... evaluating '$nums{lvpz} * $nums{lfgv}' ... 38
can eval 'mvns + vdjc' to get value for monkey mdmv ... evaluating '$nums{mvns} + $nums{vdjc}' ... 29
can eval 'btfw + njcc' to get value for monkey gjdc ... evaluating '$nums{btfw} + $nums{njcc}' ... 13
can eval 'lfcq * bbqc' to get value for monkey fzwg ... evaluating '$nums{lfcq} * $nums{bbqc}' ... 8
can eval 'qltz * nlvv' to get value for monkey bhrd ... evaluating '$nums{qltz} * $nums{nlvv}' ... 25
can eval 'gsqp * wgpc' to get value for monkey zdvl ... evaluating '$nums{gsqp} * $nums{wgpc}' ... 10
can eval 'brvf * stzh' to get value for monkey ctbm ... evaluating '$nums{brvf} * $nums{stzh}' ... 240
can eval 'pbpf * wshh' to get value for monkey qzvh ... evaluating '$nums{pbpf} * $nums{wshh}' ... 8
can eval 'wvqf * nlbs' to get value for monkey bzrn ... evaluating '$nums{wvqf} * $nums{nlbs}' ... 30
can eval 'ztbc + jvlz' to get value for monkey mfmv ... evaluating '$nums{ztbc} + $nums{jvlz}' ... 11
can eval 'hltd + hjqb' to get value for monkey zwff ... evaluating '$nums{hltd} + $nums{hjqb}' ... 6
can eval 'dwhq + hfch' to get value for monkey wzww ... evaluating '$nums{dwhq} + $nums{hfch}' ... 13
can eval 'twwv * rpwg' to get value for monkey nmwc ... evaluating '$nums{twwv} * $nums{rpwg}' ... 15
can eval 'nwfq * bvwd' to get value for monkey mfrs ... evaluating '$nums{nwfq} * $nums{bvwd}' ... 6
can eval 'nztr * hpnp' to get value for monkey sltt ... evaluating '$nums{nztr} * $nums{hpnp}' ... 24
can eval 'wqgd * zfbp' to get value for monkey zgcl ... evaluating '$nums{wqgd} * $nums{zfbp}' ... 8
can eval 'gmvc + tzpt' to get value for monkey thds ... evaluating '$nums{gmvc} + $nums{tzpt}' ... 10
can eval 'nsqr * vfhr' to get value for monkey fjmd ... evaluating '$nums{nsqr} * $nums{vfhr}' ... 8
can eval 'dfpv / hwgh' to get value for monkey dtcr ... evaluating '$nums{dfpv} / $nums{hwgh}' ... 11
can eval 'ldwp + cdds' to get value for monkey sfzc ... evaluating '$nums{ldwp} + $nums{cdds}' ... 21
can eval 'pzwm + bzhc' to get value for monkey dhgd ... evaluating '$nums{pzwm} + $nums{bzhc}' ... 30
can eval 'tqsb * pbsd' to get value for monkey tcwm ... evaluating '$nums{tqsb} * $nums{pbsd}' ... 34
can eval 'pnqn + dfwh' to get value for monkey ctjg ... evaluating '$nums{pnqn} + $nums{dfwh}' ... 7
can eval 'jfpt * tgnl' to get value for monkey vshz ... evaluating '$nums{jfpt} * $nums{tgnl}' ... 25
can eval 'vpvz * ppvh' to get value for monkey cmrg ... evaluating '$nums{vpvz} * $nums{ppvh}' ... 10
can eval 'vqws * dhjp' to get value for monkey cqtt ... evaluating '$nums{vqws} * $nums{dhjp}' ... 6
can eval 'nbsd * ndjh' to get value for monkey rmmb ... evaluating '$nums{nbsd} * $nums{ndjh}' ... 9
can eval 'chmd + qqjh' to get value for monkey ttdt ... evaluating '$nums{chmd} + $nums{qqjh}' ... 7
can eval 'tzvw * zgfh' to get value for monkey lwsp ... evaluating '$nums{tzvw} * $nums{zgfh}' ... 24
can eval 'jgpt * sgrn' to get value for monkey fqss ... evaluating '$nums{jgpt} * $nums{sgrn}' ... 58
can eval 'rwbt + nhvw' to get value for monkey czzj ... evaluating '$nums{rwbt} + $nums{nhvw}' ... 23
can eval 'lgdv + tmfb' to get value for monkey nczd ... evaluating '$nums{lgdv} + $nums{tmfb}' ... 11
can eval 'fhfg * vgwn' to get value for monkey sljl ... evaluating '$nums{fhfg} * $nums{vgwn}' ... 12
can eval 'qlrc * jllq' to get value for monkey qvqz ... evaluating '$nums{qlrc} * $nums{jllq}' ... 10
can eval 'ztdq * rgrv' to get value for monkey cvqw ... evaluating '$nums{ztdq} * $nums{rgrv}' ... 25
can eval 'slnd * dlqv' to get value for monkey qnvz ... evaluating '$nums{slnd} * $nums{dlqv}' ... 14
can eval 'nnjm * lcdn' to get value for monkey wszs ... evaluating '$nums{nnjm} * $nums{lcdn}' ... 27
can eval 'jbmf - qvrg' to get value for monkey qjwl ... evaluating '$nums{jbmf} - $nums{qvrg}' ... 11
can eval 'dznm + qfhv' to get value for monkey tsjb ... evaluating '$nums{dznm} + $nums{qfhv}' ... 11
can eval 'tvwc + wrst' to get value for monkey tttm ... evaluating '$nums{tvwc} + $nums{wrst}' ... 11
can eval 'mnld * gnfz' to get value for monkey pmlw ... evaluating '$nums{mnld} * $nums{gnfz}' ... 38
can eval 'qtfw + nhld' to get value for monkey rhht ... evaluating '$nums{qtfw} + $nums{nhld}' ... 7
can eval 'lcjr * zhcf' to get value for monkey brjj ... evaluating '$nums{lcjr} * $nums{zhcf}' ... 60
can eval 'bdcr + mlhq' to get value for monkey qldd ... evaluating '$nums{bdcr} + $nums{mlhq}' ... 11
can eval 'cqws * qhnp' to get value for monkey pnhv ... evaluating '$nums{cqws} * $nums{qhnp}' ... 39
can eval 'dddb * thzg' to get value for monkey nzhs ... evaluating '$nums{dddb} * $nums{thzg}' ... 9
can eval 'tvzz - tgzw' to get value for monkey jztg ... evaluating '$nums{tvzz} - $nums{tgzw}' ... 43
can eval 'cngl * fdvd' to get value for monkey jtwc ... evaluating '$nums{cngl} * $nums{fdvd}' ... 16
can eval 'rfhn + pslj' to get value for monkey cjfg ... evaluating '$nums{rfhn} + $nums{pslj}' ... 47
can eval 'mczh * wrlb' to get value for monkey nzzh ... evaluating '$nums{mczh} * $nums{wrlb}' ... 20
can eval 'vgvp * gjbd' to get value for monkey pbln ... evaluating '$nums{vgvp} * $nums{gjbd}' ... 75
can eval 'jqbl * bnfw' to get value for monkey tmbj ... evaluating '$nums{jqbl} * $nums{bnfw}' ... 9
can eval 'spwg / wghp' to get value for monkey wmzq ... evaluating '$nums{spwg} / $nums{wghp}' ... 7
can eval 'pwpn * djsq' to get value for monkey chbm ... evaluating '$nums{pwpn} * $nums{djsq}' ... 32
can eval 'szfd + msqm' to get value for monkey zcvv ... evaluating '$nums{szfd} + $nums{msqm}' ... 31
can eval 'chfb + hcsb' to get value for monkey brdn ... evaluating '$nums{chfb} + $nums{hcsb}' ... 11
can eval 'mztw * cbnw' to get value for monkey bvnq ... evaluating '$nums{mztw} * $nums{cbnw}' ... 22
can eval 'zvbj * jwwc' to get value for monkey vcrq ... evaluating '$nums{zvbj} * $nums{jwwc}' ... 140
can eval 'dnmq * twgf' to get value for monkey dbrd ... evaluating '$nums{dnmq} * $nums{twgf}' ... 130
can eval 'nhtm * rfvr' to get value for monkey brhh ... evaluating '$nums{nhtm} * $nums{rfvr}' ... 9
can eval 'jswd * gcds' to get value for monkey lwbq ... evaluating '$nums{jswd} * $nums{gcds}' ... 25
can eval 'jwnv + qvpv' to get value for monkey qqmc ... evaluating '$nums{jwnv} + $nums{qvpv}' ... 11
can eval 'jfpn + lvcm' to get value for monkey hzzf ... evaluating '$nums{jfpn} + $nums{lvcm}' ... 6
can eval 'wpsm + czzm' to get value for monkey rzml ... evaluating '$nums{wpsm} + $nums{czzm}' ... 17
can eval 'nljj + gzch' to get value for monkey cljj ... evaluating '$nums{nljj} + $nums{gzch}' ... 19
can eval 'nznr / bccw' to get value for monkey zrjq ... evaluating '$nums{nznr} / $nums{bccw}' ... 7
can eval 'qdbt + trwt' to get value for monkey tsbj ... evaluating '$nums{qdbt} + $nums{trwt}' ... 7
can eval 'bdcv * jdrn' to get value for monkey wslc ... evaluating '$nums{bdcv} * $nums{jdrn}' ... 81
can eval 'hdrp * cmnq' to get value for monkey scjv ... evaluating '$nums{hdrp} * $nums{cmnq}' ... 10
can eval 'jllb * hbqq' to get value for monkey djhj ... evaluating '$nums{jllb} * $nums{hbqq}' ... 32
can eval 'fdhj * zcvc' to get value for monkey rscg ... evaluating '$nums{fdhj} * $nums{zcvc}' ... 600
can eval 'gjrq * cgdd' to get value for monkey crwn ... evaluating '$nums{gjrq} * $nums{cgdd}' ... 153
can eval 'trnd + gpsj' to get value for monkey zflg ... evaluating '$nums{trnd} + $nums{gpsj}' ... 17
can eval 'lbdb * fzwh' to get value for monkey btmp ... evaluating '$nums{lbdb} * $nums{fzwh}' ... 14
can eval 'vtdt * rwrh' to get value for monkey zptg ... evaluating '$nums{vtdt} * $nums{rwrh}' ... 10
can eval 'zcpw * scvs' to get value for monkey bltz ... evaluating '$nums{zcpw} * $nums{scvs}' ... 114
can eval 'jrmq * clwh' to get value for monkey bfcq ... evaluating '$nums{jrmq} * $nums{clwh}' ... 15
can eval 'zfcr * dhjw' to get value for monkey jwdv ... evaluating '$nums{zfcr} * $nums{dhjw}' ... 30
can eval 'ttqn * bnwn' to get value for monkey nvld ... evaluating '$nums{ttqn} * $nums{bnwn}' ... 48
can eval 'gzhn + nzbc' to get value for monkey dzjd ... evaluating '$nums{gzhn} + $nums{nzbc}' ... 7
can eval 'lmvh * wmbv' to get value for monkey ttfc ... evaluating '$nums{lmvh} * $nums{wmbv}' ... 70
can eval 'gszl * bshw' to get value for monkey rjsj ... evaluating '$nums{gszl} * $nums{bshw}' ... 14
can eval 'pgzh * vvdb' to get value for monkey hpdb ... evaluating '$nums{pgzh} * $nums{vvdb}' ... 6
can eval 'jbtb + gmwl' to get value for monkey mjcr ... evaluating '$nums{jbtb} + $nums{gmwl}' ... 11
can eval 'nqzd * crph' to get value for monkey wcfz ... evaluating '$nums{nqzd} * $nums{crph}' ... 120
can eval 'rvbv * rscn' to get value for monkey znnf ... evaluating '$nums{rvbv} * $nums{rscn}' ... 22
can eval 'bncf * hgdl' to get value for monkey czrb ... evaluating '$nums{bncf} * $nums{hgdl}' ... 8
can eval 'qqtj * rzml' to get value for monkey wwpw ... evaluating '$nums{qqtj} * $nums{rzml}' ... 51
can eval 'jhrz * mcqq' to get value for monkey mlbf ... evaluating '$nums{jhrz} * $nums{mcqq}' ... 77
can eval 'fvzh - bwbl' to get value for monkey jjgl ... evaluating '$nums{fvzh} - $nums{bwbl}' ... 13
can eval 'pzdl * blzn' to get value for monkey gjgm ... evaluating '$nums{pzdl} * $nums{blzn}' ... 44
can eval 'pzcv + cfzn' to get value for monkey rgrf ... evaluating '$nums{pzcv} + $nums{cfzn}' ... 24
can eval 'hmnm + zmrf' to get value for monkey hhqb ... evaluating '$nums{hmnm} + $nums{zmrf}' ... 11
can eval 'zlbm * mwls' to get value for monkey zldn ... evaluating '$nums{zlbm} * $nums{mwls}' ... 63
can eval 'jsfv * flwj' to get value for monkey lfnn ... evaluating '$nums{jsfv} * $nums{flwj}' ... 16
can eval 'tnbb * nmdg' to get value for monkey sdtm ... evaluating '$nums{tnbb} * $nums{nmdg}' ... 8
can eval 'mfrs * fvfs' to get value for monkey qtvs ... evaluating '$nums{mfrs} * $nums{fvfs}' ... 36
can eval 'mwgp - tsbp' to get value for monkey pbqq ... evaluating '$nums{mwgp} - $nums{tsbp}' ... 8
can eval 'svjb - qbzf' to get value for monkey rvmz ... evaluating '$nums{svjb} - $nums{qbzf}' ... 9
can eval 'twbn + pgbb' to get value for monkey cfch ... evaluating '$nums{twbn} + $nums{pgbb}' ... 23
can eval 'qsjj * rfwp' to get value for monkey bzdc ... evaluating '$nums{qsjj} * $nums{rfwp}' ... 21
can eval 'wgrl + cqzf' to get value for monkey ggvb ... evaluating '$nums{wgrl} + $nums{cqzf}' ... 11
can eval 'jfgq * pvnc' to get value for monkey wnsd ... evaluating '$nums{jfgq} * $nums{pvnc}' ... 22
can eval 'pcjl + llqn' to get value for monkey fnfs ... evaluating '$nums{pcjl} + $nums{llqn}' ... 23
can eval 'mplh * hcsf' to get value for monkey vjnf ... evaluating '$nums{mplh} * $nums{hcsf}' ... 51
can eval 'tqqh * vpff' to get value for monkey trmz ... evaluating '$nums{tqqh} * $nums{vpff}' ... 20
can eval 'mzqt * nfzb' to get value for monkey hpqc ... evaluating '$nums{mzqt} * $nums{nfzb}' ... 9
can eval 'fmjl * sptt' to get value for monkey hddn ... evaluating '$nums{fmjl} * $nums{sptt}' ... 60
can eval 'lwwj + wvvn' to get value for monkey znvs ... evaluating '$nums{lwwj} + $nums{wvvn}' ... 67
can eval 'vjnf * gszb' to get value for monkey sncv ... evaluating '$nums{vjnf} * $nums{gszb}' ... 357
can eval 'lfnn / cscp' to get value for monkey tsbm ... evaluating '$nums{lfnn} / $nums{cscp}' ... 8
can eval 'rvjq + gmbj' to get value for monkey zdvp ... evaluating '$nums{rvjq} + $nums{gmbj}' ... 12
can eval 'sptq * qjwl' to get value for monkey hsvn ... evaluating '$nums{sptq} * $nums{qjwl}' ... 44
can eval 'jcpz * dqfd' to get value for monkey bhmj ... evaluating '$nums{jcpz} * $nums{dqfd}' ... 9
can eval 'znvs * gbgz' to get value for monkey hcgp ... evaluating '$nums{znvs} * $nums{gbgz}' ... 134
can eval 'jjcl * gncw' to get value for monkey mbbm ... evaluating '$nums{jjcl} * $nums{gncw}' ... 12
can eval 'rwns * nczd' to get value for monkey thjf ... evaluating '$nums{rwns} * $nums{nczd}' ... 275
can eval 'fdvq * ssps' to get value for monkey mwhf ... evaluating '$nums{fdvq} * $nums{ssps}' ... 21
can eval 'pqvq + qqhs' to get value for monkey wpnd ... evaluating '$nums{pqvq} + $nums{qqhs}' ... 31
can eval 'zhvf + fvlq' to get value for monkey dphc ... evaluating '$nums{zhvf} + $nums{fvlq}' ... 7
can eval 'wwcs + gbnr' to get value for monkey htps ... evaluating '$nums{wwcs} + $nums{gbnr}' ... 6
can eval 'jvfm * bglc' to get value for monkey vtsh ... evaluating '$nums{jvfm} * $nums{bglc}' ... 145
can eval 'bflz * frpz' to get value for monkey pbhh ... evaluating '$nums{bflz} * $nums{frpz}' ... 8
can eval 'bgwv + mjjz' to get value for monkey csfh ... evaluating '$nums{bgwv} + $nums{mjjz}' ... 11
can eval 'qmwq * bfnt' to get value for monkey sgpw ... evaluating '$nums{qmwq} * $nums{bfnt}' ... 9
can eval 'bbhm * fpvb' to get value for monkey mgtt ... evaluating '$nums{bbhm} * $nums{fpvb}' ... 14
can eval 'mgnw * vpqz' to get value for monkey tplb ... evaluating '$nums{mgnw} * $nums{vpqz}' ... 44
can eval 'sbht * hqsf' to get value for monkey vldd ... evaluating '$nums{sbht} * $nums{hqsf}' ... 75
can eval 'gmzb * dwvt' to get value for monkey ntgv ... evaluating '$nums{gmzb} * $nums{dwvt}' ... 12
can eval 'gzsf + bvsm' to get value for monkey lvpf ... evaluating '$nums{gzsf} + $nums{bvsm}' ... 27
can eval 'dzjq + qhjl' to get value for monkey lzdv ... evaluating '$nums{dzjq} + $nums{qhjl}' ... 7
can eval 'sbvj * hwqr' to get value for monkey dgtq ... evaluating '$nums{sbvj} * $nums{hwqr}' ... 6
can eval 'tczr + slpf' to get value for monkey czbc ... evaluating '$nums{tczr} + $nums{slpf}' ... 7
can eval 'rgqs + hmmh' to get value for monkey mrbj ... evaluating '$nums{rgqs} + $nums{hmmh}' ... 7
can eval 'mfmv * dmgs' to get value for monkey shzb ... evaluating '$nums{mfmv} * $nums{dmgs}' ... 22
can eval 'sldf * gwwf' to get value for monkey vbjz ... evaluating '$nums{sldf} * $nums{gwwf}' ... 6
can eval 'tcjp + lzgf' to get value for monkey dcjp ... evaluating '$nums{tcjp} + $nums{lzgf}' ... 6
can eval 'gdhf + mtzt' to get value for monkey dmfw ... evaluating '$nums{gdhf} + $nums{mtzt}' ... 7
can eval 'dzff * mvgt' to get value for monkey zntq ... evaluating '$nums{dzff} * $nums{mvgt}' ... 147
can eval 'jtmh + pgwj' to get value for monkey twpl ... evaluating '$nums{jtmh} + $nums{pgwj}' ... 24
can eval 'wpds * qhgh' to get value for monkey mdvf ... evaluating '$nums{wpds} * $nums{qhgh}' ... 104
can eval 'nmvg + szrd' to get value for monkey pwjn ... evaluating '$nums{nmvg} + $nums{szrd}' ... 29
can eval 'gcrr * wnsj' to get value for monkey cnww ... evaluating '$nums{gcrr} * $nums{wnsj}' ... 32
can eval 'vbgj * jdfz' to get value for monkey mhlv ... evaluating '$nums{vbgj} * $nums{jdfz}' ... 8
can eval 'wwss + zdvp' to get value for monkey flmc ... evaluating '$nums{wwss} + $nums{zdvp}' ... 23
can eval 'lnnq + gnjv' to get value for monkey zrzv ... evaluating '$nums{lnnq} + $nums{gnjv}' ... 17
can eval 'mmsh * npwz' to get value for monkey cmdr ... evaluating '$nums{mmsh} * $nums{npwz}' ... 9
can eval 'hqvs + qmcr' to get value for monkey hlzb ... evaluating '$nums{hqvs} + $nums{qmcr}' ... 59
can eval 'hgbw * hmgn' to get value for monkey jgtq ... evaluating '$nums{hgbw} * $nums{hmgn}' ... 540
can eval 'zrvc * sfrp' to get value for monkey bssz ... evaluating '$nums{zrvc} * $nums{sfrp}' ... 9
can eval 'tnwz + jttq' to get value for monkey fspt ... evaluating '$nums{tnwz} + $nums{jttq}' ... 23
can eval 'mdmv * mwsp' to get value for monkey prtl ... evaluating '$nums{mdmv} * $nums{mwsp}' ... 319
can eval 'jqss * zfdd' to get value for monkey hpzw ... evaluating '$nums{jqss} * $nums{zfdd}' ... 14
can eval 'bdwd + jzhp' to get value for monkey cbnq ... evaluating '$nums{bdwd} + $nums{jzhp}' ... 21
can eval 'bfsb / cjqh' to get value for monkey gdww ... evaluating '$nums{bfsb} / $nums{cjqh}' ... 9
can eval 'wzgz * wsmq' to get value for monkey zpfz ... evaluating '$nums{wzgz} * $nums{wsmq}' ... 27
can eval 'qbhd - rttm' to get value for monkey bvzm ... evaluating '$nums{qbhd} - $nums{rttm}' ... 22
can eval 'qfhf * crwj' to get value for monkey htdz ... evaluating '$nums{qfhf} * $nums{crwj}' ... 39
can eval 'btmp * hgmr' to get value for monkey vsmd ... evaluating '$nums{btmp} * $nums{hgmr}' ... 28
can eval 'wmzg * zlmz' to get value for monkey qhlp ... evaluating '$nums{wmzg} * $nums{zlmz}' ... 22
can eval 'wrfr * gvgc' to get value for monkey mztr ... evaluating '$nums{wrfr} * $nums{gvgc}' ... 72
can eval 'slwq + qbqs' to get value for monkey dmwb ... evaluating '$nums{slwq} + $nums{qbqs}' ... 9
can eval 'jhtc * wrfq' to get value for monkey ghhj ... evaluating '$nums{jhtc} * $nums{wrfq}' ... 6
can eval 'bnhm + bwlh' to get value for monkey tzzw ... evaluating '$nums{bnhm} + $nums{bwlh}' ... 41
can eval 'tssg * jnbv' to get value for monkey pgvp ... evaluating '$nums{tssg} * $nums{jnbv}' ... 22
can eval 'cvzn + tcvr' to get value for monkey cdgd ... evaluating '$nums{cvzn} + $nums{tcvr}' ... 7
can eval 'ntgl * rgrw' to get value for monkey zfdg ... evaluating '$nums{ntgl} * $nums{rgrw}' ... 10
can eval 'rqwt + pfnq' to get value for monkey hvpt ... evaluating '$nums{rqwt} + $nums{pfnq}' ... 17
can eval 'lltb * ggfr' to get value for monkey vlnh ... evaluating '$nums{lltb} * $nums{ggfr}' ... 38
re-looping...
can eval 'tmbj * cjfg' to get value for monkey bbbm ... evaluating '$nums{tmbj} * $nums{cjfg}' ... 423
can eval 'qrff * gphc' to get value for monkey ttcb ... evaluating '$nums{qrff} * $nums{gphc}' ... 18
can eval 'nhwd * tzzw' to get value for monkey dbfb ... evaluating '$nums{nhwd} * $nums{tzzw}' ... 205
can eval 'trfc + cswj' to get value for monkey qdwv ... evaluating '$nums{trfc} + $nums{cswj}' ... 31
can eval 'cgrs + wzzd' to get value for monkey qczq ... evaluating '$nums{cgrs} + $nums{wzzd}' ... 7
can eval 'nlnw + tbtc' to get value for monkey mwmv ... evaluating '$nums{nlnw} + $nums{tbtc}' ... 11
can eval 'bhjq + hsvn' to get value for monkey tmqv ... evaluating '$nums{bhjq} + $nums{hsvn}' ... 47
can eval 'dvtc - zhss' to get value for monkey trgm ... evaluating '$nums{dvtc} - $nums{zhss}' ... 7
can eval 'gwws * jhnh' to get value for monkey dtrf ... evaluating '$nums{gwws} * $nums{jhnh}' ... 80
can eval 'tttm + ltmj' to get value for monkey nhrq ... evaluating '$nums{tttm} + $nums{ltmj}' ... 16
can eval 'sgcc * wpdr' to get value for monkey qsgr ... evaluating '$nums{sgcc} * $nums{wpdr}' ... 27
can eval 'qwfj * mlfd' to get value for monkey vlts ... evaluating '$nums{qwfj} * $nums{mlfd}' ... 315
can eval 'qjng + rppb' to get value for monkey bqns ... evaluating '$nums{qjng} + $nums{rppb}' ... 18
can eval 'rbgm + dgwm' to get value for monkey lldv ... evaluating '$nums{rbgm} + $nums{dgwm}' ... 13
can eval 'gqws * vshz' to get value for monkey ngsv ... evaluating '$nums{gqws} * $nums{vshz}' ... 50
can eval 'rdtg + gwrh' to get value for monkey spcb ... evaluating '$nums{rdtg} + $nums{gwrh}' ... 83
can eval 'prpb + hpdp' to get value for monkey jvnj ... evaluating '$nums{prpb} + $nums{hpdp}' ... 74
can eval 'glnl * blwr' to get value for monkey vcgb ... evaluating '$nums{glnl} * $nums{blwr}' ... 21
can eval 'cqfs + sfzc' to get value for monkey vpqp ... evaluating '$nums{cqfs} + $nums{sfzc}' ... 24
can eval 'bpsz * ssdw' to get value for monkey drnl ... evaluating '$nums{bpsz} * $nums{ssdw}' ... 24
can eval 'hqrm / lmdn' to get value for monkey jtmt ... evaluating '$nums{hqrm} / $nums{lmdn}' ... 7
can eval 'vbmh + pqwf' to get value for monkey whjf ... evaluating '$nums{vbmh} + $nums{pqwf}' ... 13
can eval 'dccg * mzvs' to get value for monkey njsw ... evaluating '$nums{dccg} * $nums{mzvs}' ... 63
can eval 'dhhw * pdtj' to get value for monkey zjrv ... evaluating '$nums{dhhw} * $nums{pdtj}' ... 42
can eval 'ptcl + fwqh' to get value for monkey pwvl ... evaluating '$nums{ptcl} + $nums{fwqh}' ... 53
can eval 'mlhh * fbdg' to get value for monkey shtm ... evaluating '$nums{mlhh} * $nums{fbdg}' ... 27
can eval 'vgcf + njsc' to get value for monkey gchw ... evaluating '$nums{vgcf} + $nums{njsc}' ... 17
can eval 'jcpq * ttrs' to get value for monkey hpwz ... evaluating '$nums{jcpq} * $nums{ttrs}' ... 14
can eval 'qnqz * qwsj' to get value for monkey gnfg ... evaluating '$nums{qnqz} * $nums{qwsj}' ... 18
can eval 'brwm * rgfr' to get value for monkey jjzv ... evaluating '$nums{brwm} * $nums{rgfr}' ... 33
can eval 'swqh * mhlv' to get value for monkey zspq ... evaluating '$nums{swqh} * $nums{mhlv}' ... 112
can eval 'hfdb * lzdv' to get value for monkey thnc ... evaluating '$nums{hfdb} * $nums{lzdv}' ... 49
can eval 'jsbw * tgfj' to get value for monkey vwqb ... evaluating '$nums{jsbw} * $nums{tgfj}' ... 105
can eval 'qvcr + drnl' to get value for monkey lfbg ... evaluating '$nums{qvcr} + $nums{drnl}' ... 29
can eval 'whhb * vmrr' to get value for monkey qpgm ... evaluating '$nums{whhb} * $nums{vmrr}' ... 27
can eval 'dtpg * prbf' to get value for monkey hhsz ... evaluating '$nums{dtpg} * $nums{prbf}' ... 125
can eval 'bmvj + zhth' to get value for monkey qrnh ... evaluating '$nums{bmvj} + $nums{zhth}' ... 39
can eval 'cvff * wszs' to get value for monkey tght ... evaluating '$nums{cvff} * $nums{wszs}' ... 54
can eval 'ctjg * tzrp' to get value for monkey wchg ... evaluating '$nums{ctjg} * $nums{tzrp}' ... 35
can eval 'wchg / qhgc' to get value for monkey hmnh ... evaluating '$nums{wchg} / $nums{qhgc}' ... 7
can eval 'fggm * hljd' to get value for monkey gflj ... evaluating '$nums{fggm} * $nums{hljd}' ... 22
can eval 'mcvt * gcns' to get value for monkey rnft ... evaluating '$nums{mcvt} * $nums{gcns}' ... 12
can eval 'dmwb + vdgc' to get value for monkey lrfr ... evaluating '$nums{dmwb} + $nums{vdgc}' ... 23
can eval 'mcqn + jzgp' to get value for monkey bjrj ... evaluating '$nums{mcqn} + $nums{jzgp}' ... 13
can eval 'lqnc + mmcr' to get value for monkey mssb ... evaluating '$nums{lqnc} + $nums{mmcr}' ... 246
can eval 'scjv + zdvl' to get value for monkey wzgn ... evaluating '$nums{scjv} + $nums{zdvl}' ... 20
can eval 'lmrz * svfr' to get value for monkey jwnt ... evaluating '$nums{lmrz} * $nums{svfr}' ... 18
can eval 'lwtd / zrff' to get value for monkey qfjp ... evaluating '$nums{lwtd} / $nums{zrff}' ... 19
can eval 'zflg + bzrn' to get value for monkey zjmw ... evaluating '$nums{zflg} + $nums{bzrn}' ... 47
can eval 'ttdt * mczm' to get value for monkey hdsp ... evaluating '$nums{ttdt} * $nums{mczm}' ... 21
can eval 'fzwg + rsqm' to get value for monkey cjbf ... evaluating '$nums{fzwg} + $nums{rsqm}' ... 13
can eval 'bdbh - rnft' to get value for monkey lcvf ... evaluating '$nums{bdbh} - $nums{rnft}' ... 43
can eval 'lbgm + ghsw' to get value for monkey tnlj ... evaluating '$nums{lbgm} + $nums{ghsw}' ... 33
can eval 'llnc * frrd' to get value for monkey bnlp ... evaluating '$nums{llnc} * $nums{frrd}' ... 52
can eval 'rtwt + pnhv' to get value for monkey mqtv ... evaluating '$nums{rtwt} + $nums{pnhv}' ... 41
can eval 'tvbh * ngng' to get value for monkey qrjc ... evaluating '$nums{tvbh} * $nums{ngng}' ... 36
can eval 'pbcv * ttcb' to get value for monkey gmsz ... evaluating '$nums{pbcv} * $nums{ttcb}' ... 54
can eval 'hbjt + rmbr' to get value for monkey dhzm ... evaluating '$nums{hbjt} + $nums{rmbr}' ... 21
can eval 'mhws * bmqt' to get value for monkey ltzc ... evaluating '$nums{mhws} * $nums{bmqt}' ... 48
can eval 'sgtj * tjrj' to get value for monkey ldmv ... evaluating '$nums{sgtj} * $nums{tjrj}' ... 77
can eval 'gtcw * bjbt' to get value for monkey dqnm ... evaluating '$nums{gtcw} * $nums{bjbt}' ... 123
can eval 'vljr + htgl' to get value for monkey wvcw ... evaluating '$nums{vljr} + $nums{htgl}' ... 31
can eval 'rgrf + rftg' to get value for monkey dtpc ... evaluating '$nums{rgrf} + $nums{rftg}' ... 37
can eval 'gfpc * cfwz' to get value for monkey jgcb ... evaluating '$nums{gfpc} * $nums{cfwz}' ... 38
can eval 'czbc + thpf' to get value for monkey cpcn ... evaluating '$nums{czbc} + $nums{thpf}' ... 17
can eval 'gjdc + fqlw' to get value for monkey bnrz ... evaluating '$nums{gjdc} + $nums{fqlw}' ... 18
can eval 'lhpr * qldd' to get value for monkey zmqr ... evaluating '$nums{lhpr} * $nums{qldd}' ... 22
can eval 'tnlj + hdvz' to get value for monkey ndhs ... evaluating '$nums{tnlj} + $nums{hdvz}' ... 59
can eval 'znnf + jdrw' to get value for monkey zjtq ... evaluating '$nums{znnf} + $nums{jdrw}' ... 37
can eval 'slbb * dqnm' to get value for monkey phmp ... evaluating '$nums{slbb} * $nums{dqnm}' ... 492
can eval 'hhqb * swcw' to get value for monkey dcvd ... evaluating '$nums{hhqb} * $nums{swcw}' ... 77
can eval 'djhj * lbpg' to get value for monkey mhtn ... evaluating '$nums{djhj} * $nums{lbpg}' ... 128
can eval 'tltn + fmwf' to get value for monkey vbrh ... evaluating '$nums{tltn} + $nums{fmwf}' ... 29
can eval 'jbfl * qnvz' to get value for monkey vhjz ... evaluating '$nums{jbfl} * $nums{qnvz}' ... 42
can eval 'qtgg + jvfj' to get value for monkey lwfm ... evaluating '$nums{qtgg} + $nums{jvfj}' ... 10
can eval 'bnlp * pdgl' to get value for monkey swft ... evaluating '$nums{bnlp} * $nums{pdgl}' ... 780
can eval 'wnwq + jpjv' to get value for monkey vvcp ... evaluating '$nums{wnwq} + $nums{jpjv}' ... 20
can eval 'zcvv + nbrt' to get value for monkey hrbm ... evaluating '$nums{zcvv} + $nums{nbrt}' ... 38
can eval 'hddn / sghh' to get value for monkey hnbf ... evaluating '$nums{hddn} / $nums{sghh}' ... 30
can eval 'trqf + mlhj' to get value for monkey lqtm ... evaluating '$nums{trqf} + $nums{mlhj}' ... 29
can eval 'czrb * qsnc' to get value for monkey dzhw ... evaluating '$nums{czrb} * $nums{qsnc}' ... 112
can eval 'fqrm + grqp' to get value for monkey gtzb ... evaluating '$nums{fqrm} + $nums{grqp}' ... 8
can eval 'bjrj * wldt' to get value for monkey gdjg ... evaluating '$nums{bjrj} * $nums{wldt}' ... 26
can eval 'rlrr + hmmt' to get value for monkey gvss ... evaluating '$nums{rlrr} + $nums{hmmt}' ... 21
can eval 'qvqz + zfvc' to get value for monkey zlzq ... evaluating '$nums{qvqz} + $nums{zfvc}' ... 23
can eval 'wjrb * tqwn' to get value for monkey gbzp ... evaluating '$nums{wjrb} * $nums{tqwn}' ... 21
can eval 'cmql + mgtt' to get value for monkey hvjb ... evaluating '$nums{cmql} + $nums{mgtt}' ... 31
can eval 'tjlv * wsjc' to get value for monkey hnps ... evaluating '$nums{tjlv} * $nums{wsjc}' ... 48
can eval 'cnlh + hsvl' to get value for monkey tshp ... evaluating '$nums{cnlh} + $nums{hsvl}' ... 43
can eval 'mjdp * fjlh' to get value for monkey jhdm ... evaluating '$nums{mjdp} * $nums{fjlh}' ... 80
can eval 'gjgm / rjrf' to get value for monkey jlgn ... evaluating '$nums{gjgm} / $nums{rjrf}' ... 11
can eval 'gmbs + mchq' to get value for monkey cwgg ... evaluating '$nums{gmbs} + $nums{mchq}' ... 37
can eval 'gjgs * ghhj' to get value for monkey vnmd ... evaluating '$nums{gjgs} * $nums{ghhj}' ... 114
can eval 'jzlh * zrzv' to get value for monkey fcmr ... evaluating '$nums{jzlh} * $nums{zrzv}' ... 34
can eval 'tsjb * vrzd' to get value for monkey dmcl ... evaluating '$nums{tsjb} * $nums{vrzd}' ... 44
can eval 'vwqb + qgnt' to get value for monkey hvdj ... evaluating '$nums{vwqb} + $nums{qgnt}' ... 111
can eval 'sdgf + ltfn' to get value for monkey dthc ... evaluating '$nums{sdgf} + $nums{ltfn}' ... 7
can eval 'pmzs + qjzc' to get value for monkey pfvv ... evaluating '$nums{pmzs} + $nums{qjzc}' ... 13
can eval 'dvrg * wwsc' to get value for monkey jlwb ... evaluating '$nums{dvrg} * $nums{wwsc}' ... 188
can eval 'zpcw + dcjp' to get value for monkey vflt ... evaluating '$nums{zpcw} + $nums{dcjp}' ... 7
can eval 'vvmd * dbns' to get value for monkey hrhl ... evaluating '$nums{vvmd} * $nums{dbns}' ... 26
can eval 'zfhs * ltdw' to get value for monkey wfdf ... evaluating '$nums{zfhs} * $nums{ltdw}' ... 90
can eval 'vfzp * jwdv' to get value for monkey qcvv ... evaluating '$nums{vfzp} * $nums{jwdv}' ... 630
can eval 'gpdv + sgpw' to get value for monkey dbvm ... evaluating '$nums{gpdv} + $nums{sgpw}' ... 11
can eval 'cbnq + crwn' to get value for monkey rmbn ... evaluating '$nums{cbnq} + $nums{crwn}' ... 174
can eval 'vcgb + pspq' to get value for monkey brvq ... evaluating '$nums{vcgb} + $nums{pspq}' ... 31
can eval 'twfn * bvnq' to get value for monkey wngv ... evaluating '$nums{twfn} * $nums{bvnq}' ... 220
can eval 'jdlj * mwmv' to get value for monkey whqf ... evaluating '$nums{jdlj} * $nums{mwmv}' ... 22
can eval 'qczq + dzdq' to get value for monkey gtqm ... evaluating '$nums{qczq} + $nums{dzdq}' ... 11
can eval 'mjcr * mqmq' to get value for monkey hbtg ... evaluating '$nums{mjcr} * $nums{mqmq}' ... 121
can eval 'ndhs * dhnp' to get value for monkey mrsv ... evaluating '$nums{ndhs} * $nums{dhnp}' ... 118
can eval 'cljj * zfdg' to get value for monkey tgfs ... evaluating '$nums{cljj} * $nums{zfdg}' ... 190
can eval 'tshp - bwdn' to get value for monkey jflp ... evaluating '$nums{tshp} - $nums{bwdn}' ... 41
can eval 'brjj + vcjv' to get value for monkey mllb ... evaluating '$nums{brjj} + $nums{vcjv}' ... 83
can eval 'cmnh * rbcb' to get value for monkey jldf ... evaluating '$nums{cmnh} * $nums{rbcb}' ... 39
can eval 'dnzt + strv' to get value for monkey vncg ... evaluating '$nums{dnzt} + $nums{strv}' ... 9
can eval 'cnlj * rvww' to get value for monkey pvgt ... evaluating '$nums{cnlj} * $nums{rvww}' ... 28
can eval 'ldmv + ldlt' to get value for monkey vprd ... evaluating '$nums{ldmv} + $nums{ldlt}' ... 86
can eval 'vsmd * hptn' to get value for monkey bssg ... evaluating '$nums{vsmd} * $nums{hptn}' ... 56
can eval 'pbln / mbmd' to get value for monkey gvnz ... evaluating '$nums{pbln} / $nums{mbmd}' ... 25
can eval 'vcrq + wwpw' to get value for monkey bbdh ... evaluating '$nums{vcrq} + $nums{wwpw}' ... 191
can eval 'vlts + mzcw' to get value for monkey cbcl ... evaluating '$nums{vlts} + $nums{mzcw}' ... 347
can eval 'mqrf - hbrq' to get value for monkey wfcz ... evaluating '$nums{mqrf} - $nums{hbrq}' ... 23
can eval 'rvmz + bvzm' to get value for monkey jmnv ... evaluating '$nums{rvmz} + $nums{bvzm}' ... 31
can eval 'qcrv * bbhq' to get value for monkey grlf ... evaluating '$nums{qcrv} * $nums{bbhq}' ... 45
can eval 'ngsv - cwbn' to get value for monkey crvv ... evaluating '$nums{ngsv} - $nums{cwbn}' ... 38
can eval 'jsdt * fspt' to get value for monkey snvw ... evaluating '$nums{jsdt} * $nums{fspt}' ... 161
can eval 'vjln * lstf' to get value for monkey ghlb ... evaluating '$nums{vjln} * $nums{lstf}' ... 102
can eval 'jdqn * zwbl' to get value for monkey thtq ... evaluating '$nums{jdqn} * $nums{zwbl}' ... 64
can eval 'jbpv + thds' to get value for monkey psph ... evaluating '$nums{jbpv} + $nums{thds}' ... 13
can eval 'hqcs * hwpq' to get value for monkey hvgq ... evaluating '$nums{hqcs} * $nums{hwpq}' ... 46
can eval 'thnc / cdgd' to get value for monkey tgtg ... evaluating '$nums{thnc} / $nums{cdgd}' ... 7
can eval 'wnsd + dtbs' to get value for monkey fhtv ... evaluating '$nums{wnsd} + $nums{dtbs}' ... 42
can eval 'hjbf * hmnh' to get value for monkey gmhw ... evaluating '$nums{hjbf} * $nums{hmnh}' ... 21
can eval 'sfvc * fcmr' to get value for monkey wfmw ... evaluating '$nums{sfvc} * $nums{fcmr}' ... 204
can eval 'dbfb + rjsj' to get value for monkey hwrr ... evaluating '$nums{dbfb} + $nums{rjsj}' ... 219
can eval 'bfhg + bzts' to get value for monkey thgv ... evaluating '$nums{bfhg} + $nums{bzts}' ... 17
can eval 'vnrz * cqpj' to get value for monkey zqzw ... evaluating '$nums{vnrz} * $nums{cqpj}' ... 126
can eval 'qfjp + thwb' to get value for monkey lpzl ... evaluating '$nums{qfjp} + $nums{thwb}' ... 23
can eval 'qgmr + wphf' to get value for monkey fdtp ... evaluating '$nums{qgmr} + $nums{wphf}' ... 13
can eval 'pqvv + cthp' to get value for monkey wnjd ... evaluating '$nums{pqvv} + $nums{cthp}' ... 24
can eval 'hlzb * bnvt' to get value for monkey vpvb ... evaluating '$nums{hlzb} * $nums{bnvt}' ... 295
can eval 'gnfg + fvhd' to get value for monkey qsfp ... evaluating '$nums{gnfg} + $nums{fvhd}' ... 22
can eval 'shtm - mvmw' to get value for monkey fwzc ... evaluating '$nums{shtm} - $nums{mvmw}' ... 23
can eval 'jlgn + bjdn' to get value for monkey llql ... evaluating '$nums{jlgn} + $nums{bjdn}' ... 13
can eval 'lcvf * rjwg' to get value for monkey qfzj ... evaluating '$nums{lcvf} * $nums{rjwg}' ... 473
can eval 'wpnd * hpdb' to get value for monkey rtlf ... evaluating '$nums{wpnd} * $nums{hpdb}' ... 186
can eval 'vbrh * lpmh' to get value for monkey nfgv ... evaluating '$nums{vbrh} * $nums{lpmh}' ... 116
can eval 'qpqd * dbvm' to get value for monkey wgmq ... evaluating '$nums{qpqd} * $nums{dbvm}' ... 33
can eval 'chdb * tbfz' to get value for monkey rzcl ... evaluating '$nums{chdb} * $nums{tbfz}' ... 156
can eval 'dsjn * qpgm' to get value for monkey jjch ... evaluating '$nums{dsjn} * $nums{qpgm}' ... 54
can eval 'czzj * jzvl' to get value for monkey gwlf ... evaluating '$nums{czzj} * $nums{jzvl}' ... 92
can eval 'tplb * qzfj' to get value for monkey nnmv ... evaluating '$nums{tplb} * $nums{qzfj}' ... 176
can eval 'jhzj * dhgd' to get value for monkey dwwv ... evaluating '$nums{jhzj} * $nums{dhgd}' ... 480
can eval 'lrrd + jldf' to get value for monkey zwqv ... evaluating '$nums{lrrd} + $nums{jldf}' ... 61
can eval 'gflj * smfn' to get value for monkey nnfb ... evaluating '$nums{gflj} * $nums{smfn}' ... 44
can eval 'vnhf * pmlw' to get value for monkey rmhm ... evaluating '$nums{vnhf} * $nums{pmlw}' ... 874
can eval 'rsqv * ggvb' to get value for monkey bsnt ... evaluating '$nums{rsqv} * $nums{ggvb}' ... 22
can eval 'vtcl * bbdh' to get value for monkey lnsv ... evaluating '$nums{vtcl} * $nums{bbdh}' ... 3629
can eval 'thgv * bfln' to get value for monkey snzb ... evaluating '$nums{thgv} * $nums{bfln}' ... 85
can eval 'qwwg * pzgh' to get value for monkey jzpr ... evaluating '$nums{qwwg} * $nums{pzgh}' ... 42
can eval 'jqrh * jjmv' to get value for monkey jfpz ... evaluating '$nums{jqrh} * $nums{jjmv}' ... 14
can eval 'lpzl * fpgs' to get value for monkey jmnz ... evaluating '$nums{lpzl} * $nums{fpgs}' ... 46
can eval 'gnwb * gdww' to get value for monkey fbfh ... evaluating '$nums{gnwb} * $nums{gdww}' ... 63
can eval 'mztr - tjjl' to get value for monkey nmrt ... evaluating '$nums{mztr} - $nums{tjjl}' ... 61
can eval 'lncs + tqjz' to get value for monkey qctq ... evaluating '$nums{lncs} + $nums{tqjz}' ... 23
can eval 'mssb / wgvh' to get value for monkey bhpw ... evaluating '$nums{mssb} / $nums{wgvh}' ... 41
can eval 'pgvp / hmrd' to get value for monkey snzj ... evaluating '$nums{pgvp} / $nums{hmrd}' ... 11
can eval 'jlpm + tcwm' to get value for monkey jrhp ... evaluating '$nums{jlpm} + $nums{tcwm}' ... 48
can eval 'blzj * qnfl' to get value for monkey prcj ... evaluating '$nums{blzj} * $nums{qnfl}' ... 33
can eval 'rmpd + lclv' to get value for monkey btbb ... evaluating '$nums{rmpd} + $nums{lclv}' ... 37
can eval 'dgbn * spcb' to get value for monkey nvvv ... evaluating '$nums{dgbn} * $nums{spcb}' ... 166
can eval 'mbbm * pznw' to get value for monkey nvtd ... evaluating '$nums{mbbm} * $nums{pznw}' ... 48
can eval 'qqmc * snmj' to get value for monkey bbpl ... evaluating '$nums{qqmc} * $nums{snmj}' ... 99
can eval 'qmrq + bfcq' to get value for monkey fpnf ... evaluating '$nums{qmrq} + $nums{bfcq}' ... 17
can eval 'sdzn + lwsp' to get value for monkey lhrp ... evaluating '$nums{sdzn} + $nums{lwsp}' ... 46
can eval 'gpmz + pvqj' to get value for monkey tmnn ... evaluating '$nums{gpmz} + $nums{pvqj}' ... 33
can eval 'rhht + gmnz' to get value for monkey vdsm ... evaluating '$nums{rhht} + $nums{gmnz}' ... 8
can eval 'prcj + hrhl' to get value for monkey vvzt ... evaluating '$nums{prcj} + $nums{hrhl}' ... 59
can eval 'dmcl - zmql' to get value for monkey mrgs ... evaluating '$nums{dmcl} - $nums{zmql}' ... 43
can eval 'jflp - rmmb' to get value for monkey nqgd ... evaluating '$nums{jflp} - $nums{rmmb}' ... 32
can eval 'zjmw * tcbw' to get value for monkey qfjv ... evaluating '$nums{zjmw} * $nums{tcbw}' ... 141
can eval 'hrdp - fpbf' to get value for monkey dfjr ... evaluating '$nums{hrdp} - $nums{fpbf}' ... 37
can eval 'prtl * mnfq' to get value for monkey fcjj ... evaluating '$nums{prtl} * $nums{mnfq}' ... 638
can eval 'mrbj * jhph' to get value for monkey sqzj ... evaluating '$nums{mrbj} * $nums{jhph}' ... 49
can eval 'lqtm * pnhc' to get value for monkey dlfz ... evaluating '$nums{lqtm} * $nums{pnhc}' ... 87
can eval 'chbm + nbfl' to get value for monkey tcsl ... evaluating '$nums{chbm} + $nums{nbfl}' ... 37
can eval 'rtnc + zgcl' to get value for monkey rswg ... evaluating '$nums{rtnc} + $nums{zgcl}' ... 71
can eval 'snvw / jtmt' to get value for monkey gtgv ... evaluating '$nums{snvw} / $nums{jtmt}' ... 23
can eval 'wslc - whqf' to get value for monkey hfvv ... evaluating '$nums{wslc} - $nums{whqf}' ... 59
can eval 'qzvh + hdlj' to get value for monkey mbqg ... evaluating '$nums{qzvh} + $nums{hdlj}' ... 9
can eval 'jjzv + jgcb' to get value for monkey gmqs ... evaluating '$nums{jjzv} + $nums{jgcb}' ... 71
can eval 'qvds + pdsj' to get value for monkey jtqr ... evaluating '$nums{qvds} + $nums{pdsj}' ... 43
can eval 'vprd - vcfn' to get value for monkey mpvb ... evaluating '$nums{vprd} - $nums{vcfn}' ... 73
can eval 'rrbw + zntq' to get value for monkey qvhf ... evaluating '$nums{rrbw} + $nums{zntq}' ... 149
can eval 'hgbb * qpsr' to get value for monkey whgn ... evaluating '$nums{hgbb} * $nums{qpsr}' ... 42
can eval 'qfqv + bssg' to get value for monkey mfjw ... evaluating '$nums{qfqv} + $nums{bssg}' ... 59
can eval 'jcjj * tcqg' to get value for monkey mfqp ... evaluating '$nums{jcjj} * $nums{tcqg}' ... 99
can eval 'hfdc + vpqp' to get value for monkey rnwp ... evaluating '$nums{hfdc} + $nums{vpqp}' ... 29
can eval 'tlgw + qdwv' to get value for monkey hwnm ... evaluating '$nums{tlgw} + $nums{qdwv}' ... 41
can eval 'dctp * bhpw' to get value for monkey fhcv ... evaluating '$nums{dctp} * $nums{bhpw}' ... 82
can eval 'dpqg * gtgv' to get value for monkey lfbm ... evaluating '$nums{dpqg} * $nums{gtgv}' ... 46
can eval 'gztj + sqzj' to get value for monkey fwlc ... evaluating '$nums{gztj} + $nums{sqzj}' ... 79
can eval 'hrbm / sfdp' to get value for monkey shhc ... evaluating '$nums{hrbm} / $nums{sfdp}' ... 19
can eval 'djfz * fwzc' to get value for monkey jnsh ... evaluating '$nums{djfz} * $nums{fwzc}' ... 184
can eval 'gscz + nqgd' to get value for monkey hjqh ... evaluating '$nums{gscz} + $nums{nqgd}' ... 35
can eval 'bwsq * rdsv' to get value for monkey pzfd ... evaluating '$nums{bwsq} * $nums{rdsv}' ... 49
can eval 'dthc * dwpr' to get value for monkey mdhm ... evaluating '$nums{dthc} * $nums{dwpr}' ... 77
can eval 'mhtn - bgbh' to get value for monkey zbsm ... evaluating '$nums{mhtn} - $nums{bgbh}' ... 112
can eval 'hmwp * jvnj' to get value for monkey qdph ... evaluating '$nums{hmwp} * $nums{jvnj}' ... 148
can eval 'drvf * cmrg' to get value for monkey tfvm ... evaluating '$nums{drvf} * $nums{cmrg}' ... 130
can eval 'nmwc + znwp' to get value for monkey jjqs ... evaluating '$nums{nmwc} + $nums{znwp}' ... 19
can eval 'nrzt * dtcr' to get value for monkey wwjr ... evaluating '$nums{nrzt} * $nums{dtcr}' ... 33
can eval 'bnrz + pqgz' to get value for monkey dhfc ... evaluating '$nums{bnrz} + $nums{pqgz}' ... 22
can eval 'lfbg + wfps' to get value for monkey vgmt ... evaluating '$nums{lfbg} + $nums{wfps}' ... 37
can eval 'jtwc * mpbs' to get value for monkey qhhc ... evaluating '$nums{jtwc} * $nums{mpbs}' ... 32
can eval 'sltt + wqdp' to get value for monkey jqbh ... evaluating '$nums{sltt} + $nums{wqdp}' ... 29
can eval 'dcvp * ftwr' to get value for monkey csht ... evaluating '$nums{dcvp} * $nums{ftwr}' ... 40
can eval 'hlwh * crdm' to get value for monkey qggf ... evaluating '$nums{hlwh} * $nums{crdm}' ... 40
can eval 'wtbb * shzb' to get value for monkey hqhm ... evaluating '$nums{wtbb} * $nums{shzb}' ... 154
can eval 'dclg * jvht' to get value for monkey cntz ... evaluating '$nums{dclg} * $nums{jvht}' ... 40
can eval 'zprb + mqtv' to get value for monkey zsfr ... evaluating '$nums{zprb} + $nums{mqtv}' ... 49
can eval 'sljl + wpwr' to get value for monkey njzs ... evaluating '$nums{sljl} + $nums{wpwr}' ... 17
can eval 'wzrg + trmz' to get value for monkey zqsw ... evaluating '$nums{wzrg} + $nums{trmz}' ... 22
can eval 'fwbj * dgtq' to get value for monkey prpd ... evaluating '$nums{fwbj} * $nums{dgtq}' ... 36
can eval 'szbv + sdws' to get value for monkey ftnw ... evaluating '$nums{szbv} + $nums{sdws}' ... 11
can eval 'lvgs + hwnm' to get value for monkey ntzg ... evaluating '$nums{lvgs} + $nums{hwnm}' ... 43
can eval 'tzds + hjzv' to get value for monkey qpqh ... evaluating '$nums{tzds} + $nums{hjzv}' ... 37
can eval 'gchw * llrz' to get value for monkey rzfl ... evaluating '$nums{gchw} * $nums{llrz}' ... 51
can eval 'vhjz + cbcl' to get value for monkey plqr ... evaluating '$nums{vhjz} + $nums{cbcl}' ... 389
can eval 'zqzw / clrl' to get value for monkey lcpf ... evaluating '$nums{zqzw} / $nums{clrl}' ... 63
can eval 'hpzw / twrn' to get value for monkey mjdq ... evaluating '$nums{hpzw} / $nums{twrn}' ... 7
can eval 'scts * jztg' to get value for monkey jchs ... evaluating '$nums{scts} * $nums{jztg}' ... 215
can eval 'jqbh + nnqn' to get value for monkey dhvn ... evaluating '$nums{jqbh} + $nums{nnqn}' ... 61
can eval 'cpcn * jzwp' to get value for monkey dlmt ... evaluating '$nums{cpcn} * $nums{jzwp}' ... 34
can eval 'zrfv + nvtd' to get value for monkey vpss ... evaluating '$nums{zrfv} + $nums{nvtd}' ... 53
can eval 'tzlp + fnfs' to get value for monkey lqgn ... evaluating '$nums{tzlp} + $nums{fnfs}' ... 31
can eval 'wcfz + pvwn' to get value for monkey bgmc ... evaluating '$nums{wcfz} + $nums{pvwn}' ... 139
can eval 'rjnl + hnps' to get value for monkey wpms ... evaluating '$nums{rjnl} + $nums{hnps}' ... 59
can eval 'jbjl * vncg' to get value for monkey jtlf ... evaluating '$nums{jbjl} * $nums{vncg}' ... 18
can eval 'gmsz + njzs' to get value for monkey qzhb ... evaluating '$nums{gmsz} + $nums{njzs}' ... 71
can eval 'bzdc + bssz' to get value for monkey vlmj ... evaluating '$nums{bzdc} + $nums{bssz}' ... 30
can eval 'hfvv + pfwc' to get value for monkey zsrr ... evaluating '$nums{hfvv} + $nums{pfwc}' ... 66
can eval 'wzzv + lldv' to get value for monkey dmnl ... evaluating '$nums{wzzv} + $nums{lldv}' ... 23
can eval 'csfh * rfmr' to get value for monkey jnzb ... evaluating '$nums{csfh} * $nums{rfmr}' ... 22
can eval 'htdz + rflz' to get value for monkey phft ... evaluating '$nums{htdz} + $nums{rflz}' ... 43
can eval 'vvzt * qgft' to get value for monkey njjw ... evaluating '$nums{vvzt} * $nums{qgft}' ... 118
can eval 'ttfc + blsf' to get value for monkey szsh ... evaluating '$nums{ttfc} + $nums{blsf}' ... 83
can eval 'sdtm + fhtv' to get value for monkey bbtr ... evaluating '$nums{sdtm} + $nums{fhtv}' ... 50
can eval 'bhmj * nssh' to get value for monkey pgpb ... evaluating '$nums{bhmj} * $nums{nssh}' ... 27
can eval 'brvq + vldd' to get value for monkey gnhm ... evaluating '$nums{brvq} + $nums{vldd}' ... 106
can eval 'vtsh * mvgc' to get value for monkey tzzv ... evaluating '$nums{vtsh} * $nums{mvgc}' ... 290
can eval 'cfch + fjtz' to get value for monkey snpq ... evaluating '$nums{cfch} + $nums{fjtz}' ... 29
can eval 'twpl + wpms' to get value for monkey ldjm ... evaluating '$nums{twpl} + $nums{wpms}' ... 83
can eval 'lwfm + ctzw' to get value for monkey qnvr ... evaluating '$nums{lwfm} + $nums{ctzw}' ... 23
can eval 'hdsp * zwff' to get value for monkey zvhs ... evaluating '$nums{hdsp} * $nums{zwff}' ... 126
can eval 'fpnf + bbwp' to get value for monkey wfft ... evaluating '$nums{fpnf} + $nums{bbwp}' ... 29
can eval 'tghr + mwhf' to get value for monkey bdfs ... evaluating '$nums{tghr} + $nums{mwhf}' ... 31
can eval 'hzgf * hpwz' to get value for monkey tdfb ... evaluating '$nums{hzgf} * $nums{hpwz}' ... 42
can eval 'brhh - zdjv' to get value for monkey lpjz ... evaluating '$nums{brhh} - $nums{zdjv}' ... 7
can eval 'mrsv / lwwb' to get value for monkey zbrj ... evaluating '$nums{mrsv} / $nums{lwwb}' ... 59
can eval 'hpqc * vbww' to get value for monkey mbdd ... evaluating '$nums{hpqc} * $nums{vbww}' ... 27
can eval 'wmzq + clqj' to get value for monkey tqmb ... evaluating '$nums{wmzq} + $nums{clqj}' ... 17
can eval 'mhsb + rscg' to get value for monkey nvsf ... evaluating '$nums{mhsb} + $nums{rscg}' ... 656
can eval 'pvgt / rvqh' to get value for monkey gdsd ... evaluating '$nums{pvgt} / $nums{rvqh}' ... 7
can eval 'jqng + ghlb' to get value for monkey mzdb ... evaluating '$nums{jqng} + $nums{ghlb}' ... 109
can eval 'jwvq * nhrq' to get value for monkey bqlh ... evaluating '$nums{jwvq} * $nums{nhrq}' ... 32
can eval 'jqtt + lvpf' to get value for monkey wgss ... evaluating '$nums{jqtt} + $nums{lvpf}' ... 53
can eval 'nmrt * fldp' to get value for monkey bldf ... evaluating '$nums{nmrt} * $nums{fldp}' ... 244
can eval 'tnzz * dmfw' to get value for monkey gbjm ... evaluating '$nums{tnzz} * $nums{dmfw}' ... 14
can eval 'vsvb + zptg' to get value for monkey dbqm ... evaluating '$nums{vsvb} + $nums{zptg}' ... 19
can eval 'whjf * ffwp' to get value for monkey fczv ... evaluating '$nums{whjf} * $nums{ffwp}' ... 65
can eval 'ftnw * bcmt' to get value for monkey gmgn ... evaluating '$nums{ftnw} * $nums{bcmt}' ... 22
can eval 'pbhh - nrwg' to get value for monkey vntw ... evaluating '$nums{pbhh} - $nums{nrwg}' ... 7
can eval 'ntgv * bpgt' to get value for monkey czfc ... evaluating '$nums{ntgv} * $nums{bpgt}' ... 36
can eval 'mrtl + jgtq' to get value for monkey ggvl ... evaluating '$nums{mrtl} + $nums{jgtq}' ... 556
can eval 'gbzp * gtrr' to get value for monkey smmq ... evaluating '$nums{gbzp} * $nums{gtrr}' ... 42
can eval 'rthw + jwnt' to get value for monkey wrnn ... evaluating '$nums{rthw} + $nums{jwnt}' ... 29
can eval 'llff + bsnt' to get value for monkey mhjg ... evaluating '$nums{llff} + $nums{bsnt}' ... 29
can eval 'hvjb * ttfw' to get value for monkey ztqz ... evaluating '$nums{hvjb} * $nums{ttfw}' ... 961
can eval 'cwgg * vmfd' to get value for monkey mwwt ... evaluating '$nums{cwgg} * $nums{vmfd}' ... 74
can eval 'qhlp * dnrn' to get value for monkey bqtb ... evaluating '$nums{qhlp} * $nums{dnrn}' ... 44
can eval 'wvcw * jjgr' to get value for monkey trvb ... evaluating '$nums{wvcw} * $nums{jjgr}' ... 155
can eval 'wclj * lhrp' to get value for monkey gqcb ... evaluating '$nums{wclj} * $nums{lhrp}' ... 690
can eval 'hcgp / nvtm' to get value for monkey rnwm ... evaluating '$nums{hcgp} / $nums{nvtm}' ... 67
can eval 'mrpz + zspq' to get value for monkey zvgh ... evaluating '$nums{mrpz} + $nums{zspq}' ... 151
can eval 'qzqg * cnww' to get value for monkey sjdd ... evaluating '$nums{qzqg} * $nums{cnww}' ... 64
can eval 'hzls + gdjg' to get value for monkey pmbl ... evaluating '$nums{hzls} + $nums{gdjg}' ... 44
can eval 'mfjw + rstn' to get value for monkey fjss ... evaluating '$nums{mfjw} + $nums{rstn}' ... 66
can eval 'lrfr * wngf' to get value for monkey zmsn ... evaluating '$nums{lrfr} * $nums{wngf}' ... 46
can eval 'whsj * mfqp' to get value for monkey vqcr ... evaluating '$nums{whsj} * $nums{mfqp}' ... 297
can eval 'cshv * vbjz' to get value for monkey fqjf ... evaluating '$nums{cshv} * $nums{vbjz}' ... 60
can eval 'qsgr - lrjm' to get value for monkey dncn ... evaluating '$nums{qsgr} - $nums{lrjm}' ... 23
can eval 'dtrf - rlzd' to get value for monkey qjqr ... evaluating '$nums{dtrf} - $nums{rlzd}' ... 73
can eval 'jtlf + mhvn' to get value for monkey drzg ... evaluating '$nums{jtlf} + $nums{mhvn}' ... 28
can eval 'hrbj * cmdr' to get value for monkey bmvb ... evaluating '$nums{hrbj} * $nums{cmdr}' ... 27
can eval 'gvss * dlbf' to get value for monkey gcjm ... evaluating '$nums{gvss} * $nums{dlbf}' ... 42
can eval 'bdfs * wbqz' to get value for monkey lvmh ... evaluating '$nums{bdfs} * $nums{wbqz}' ... 62
can eval 'cjbf * mmml' to get value for monkey hdtp ... evaluating '$nums{cjbf} * $nums{mmml}' ... 325
can eval 'qrjc / zlpf' to get value for monkey pnvj ... evaluating '$nums{qrjc} / $nums{zlpf}' ... 18
can eval 'nnfb * chrh' to get value for monkey dwfp ... evaluating '$nums{nnfb} * $nums{chrh}' ... 88
can eval 'ltdh + vdsm' to get value for monkey qvsp ... evaluating '$nums{ltdh} + $nums{vdsm}' ... 11
can eval 'nnmv + nlwf' to get value for monkey hspj ... evaluating '$nums{nnmv} + $nums{nlwf}' ... 211
re-looping...
can eval 'qjqr * spnd' to get value for monkey fzzp ... evaluating '$nums{qjqr} * $nums{spnd}' ... 365
can eval 'qctq + htqz' to get value for monkey thrc ... evaluating '$nums{qctq} + $nums{htqz}' ... 31
can eval 'qhhc * rcbb' to get value for monkey rtzl ... evaluating '$nums{qhhc} * $nums{rcbb}' ... 608
can eval 'jrhp / sdsb' to get value for monkey bcfp ... evaluating '$nums{jrhp} / $nums{sdsb}' ... 24
can eval 'hnbf - dqsh' to get value for monkey nbch ... evaluating '$nums{hnbf} - $nums{dqsh}' ... 20
can eval 'nttr + zlzq' to get value for monkey phqq ... evaluating '$nums{nttr} + $nums{zlzq}' ... 28
can eval 'rqjg * jnzb' to get value for monkey wnfd ... evaluating '$nums{rqjg} * $nums{jnzb}' ... 66
can eval 'qfjv / rfvv' to get value for monkey frsc ... evaluating '$nums{qfjv} / $nums{rfvv}' ... 47
can eval 'tqlz + jfpz' to get value for monkey slpm ... evaluating '$nums{tqlz} + $nums{jfpz}' ... 19
can eval 'phmp / dsqp' to get value for monkey mdbh ... evaluating '$nums{phmp} / $nums{dsqp}' ... 123
can eval 'rmbn + thjf' to get value for monkey zzzb ... evaluating '$nums{rmbn} + $nums{thjf}' ... 449
can eval 'gdsd * plfn' to get value for monkey htzb ... evaluating '$nums{gdsd} * $nums{plfn}' ... 42
can eval 'pfvv - fvfc' to get value for monkey mljd ... evaluating '$nums{pfvv} - $nums{fvfc}' ... 11
can eval 'njjw / jpvl' to get value for monkey tblf ... evaluating '$nums{njjw} / $nums{jpvl}' ... 59
can eval 'fjss / gbjs' to get value for monkey clgl ... evaluating '$nums{fjss} / $nums{gbjs}' ... 33
can eval 'clgl + qddq' to get value for monkey crrl ... evaluating '$nums{clgl} + $nums{qddq}' ... 38
can eval 'fbfh + wngv' to get value for monkey qtdg ... evaluating '$nums{fbfh} + $nums{wngv}' ... 283
can eval 'tnhf * qnvr' to get value for monkey dcrf ... evaluating '$nums{tnhf} * $nums{qnvr}' ... 46
can eval 'zvgh * wvfg' to get value for monkey gbwj ... evaluating '$nums{zvgh} * $nums{wvfg}' ... 302
can eval 'wpbb * hvgq' to get value for monkey vcrt ... evaluating '$nums{wpbb} * $nums{hvgq}' ... 92
can eval 'bfbn * vgmt' to get value for monkey dcjm ... evaluating '$nums{bfbn} * $nums{vgmt}' ... 148
can eval 'tght + dlfz' to get value for monkey rpmz ... evaluating '$nums{tght} + $nums{dlfz}' ... 141
can eval 'wzgn + wjjd' to get value for monkey qlpp ... evaluating '$nums{wzgn} + $nums{wjjd}' ... 29
can eval 'lrmn * llql' to get value for monkey dfrp ... evaluating '$nums{lrmn} * $nums{llql}' ... 26
can eval 'mjdq + mdhq' to get value for monkey nhjs ... evaluating '$nums{mjdq} + $nums{mdhq}' ... 11
can eval 'jzpr + bsrr' to get value for monkey swtp ... evaluating '$nums{jzpr} + $nums{bsrr}' ... 53
can eval 'mljd + dhzm' to get value for monkey ctlr ... evaluating '$nums{mljd} + $nums{dhzm}' ... 32
can eval 'czfc - rrzv' to get value for monkey fwqc ... evaluating '$nums{czfc} - $nums{rrzv}' ... 29
can eval 'cqrh + jmnv' to get value for monkey zbhp ... evaluating '$nums{cqrh} + $nums{jmnv}' ... 36
can eval 'hjqh * bqfr' to get value for monkey sqgr ... evaluating '$nums{hjqh} * $nums{bqfr}' ... 245
can eval 'mjgq * dtpc' to get value for monkey sglf ... evaluating '$nums{mjgq} * $nums{dtpc}' ... 481
can eval 'fzzp + crvv' to get value for monkey mwqt ... evaluating '$nums{fzzp} + $nums{crvv}' ... 403
can eval 'fzgw + grlf' to get value for monkey ltdt ... evaluating '$nums{fzgw} + $nums{grlf}' ... 53
can eval 'jmln + mrgs' to get value for monkey njsn ... evaluating '$nums{jmln} + $nums{mrgs}' ... 52
can eval 'thtq / tsbm' to get value for monkey lffg ... evaluating '$nums{thtq} / $nums{tsbm}' ... 8
can eval 'lwbq + vvcp' to get value for monkey mjzc ... evaluating '$nums{lwbq} + $nums{vvcp}' ... 45
can eval 'psph * rprv' to get value for monkey zlqv ... evaluating '$nums{psph} * $nums{rprv}' ... 65
can eval 'bbtr / fnfv' to get value for monkey rsdd ... evaluating '$nums{bbtr} / $nums{fnfv}' ... 25
can eval 'gtzb * qnwm' to get value for monkey sgjl ... evaluating '$nums{gtzb} * $nums{qnwm}' ... 64
can eval 'qqjf + fwlc' to get value for monkey mnrt ... evaluating '$nums{qqjf} + $nums{fwlc}' ... 89
can eval 'vflt * jcsc' to get value for monkey psnc ... evaluating '$nums{vflt} * $nums{jcsc}' ... 14
can eval 'sdpp + fdtp' to get value for monkey dhqz ... evaluating '$nums{sdpp} + $nums{fdtp}' ... 17
can eval 'swtp * lfts' to get value for monkey gndh ... evaluating '$nums{swtp} * $nums{lfts}' ... 106
can eval 'szsh + cwch' to get value for monkey dfzz ... evaluating '$nums{szsh} + $nums{cwch}' ... 107
can eval 'dcvd - dgnd' to get value for monkey gztr ... evaluating '$nums{dcvd} - $nums{dgnd}' ... 59
can eval 'htsd * ntzg' to get value for monkey rtdf ... evaluating '$nums{htsd} * $nums{ntzg}' ... 215
can eval 'gvnz + zmqr' to get value for monkey pgmj ... evaluating '$nums{gvnz} + $nums{zmqr}' ... 47
can eval 'lfbm / fbgq' to get value for monkey nwjp ... evaluating '$nums{lfbm} / $nums{fbgq}' ... 23
can eval 'drzg + pmqr' to get value for monkey vlqf ... evaluating '$nums{drzg} + $nums{pmqr}' ... 29
can eval 'fgdv + zbhp' to get value for monkey jltt ... evaluating '$nums{fgdv} + $nums{zbhp}' ... 90
can eval 'lttm * dhvn' to get value for monkey ndsm ... evaluating '$nums{lttm} * $nums{dhvn}' ... 122
can eval 'bbpl * nzhs' to get value for monkey cwvp ... evaluating '$nums{bbpl} * $nums{nzhs}' ... 891
can eval 'ctlr * wnmh' to get value for monkey czwj ... evaluating '$nums{ctlr} * $nums{wnmh}' ... 64
can eval 'vgqq + qsfp' to get value for monkey ftsd ... evaluating '$nums{vgqq} + $nums{qsfp}' ... 26
can eval 'dhfc / hdlp' to get value for monkey whfz ... evaluating '$nums{dhfc} / $nums{hdlp}' ... 11
can eval 'hqhm + bfvq' to get value for monkey csbg ... evaluating '$nums{hqhm} + $nums{bfvq}' ... 157
can eval 'psnc / lhfg' to get value for monkey tcrp ... evaluating '$nums{psnc} / $nums{lhfg}' ... 7
can eval 'rswg * nhpv' to get value for monkey gczc ... evaluating '$nums{rswg} * $nums{nhpv}' ... 142
can eval 'wgmq * lmnn' to get value for monkey zlgw ... evaluating '$nums{wgmq} * $nums{lmnn}' ... 495
can eval 'cgvd * mwwt' to get value for monkey bwgm ... evaluating '$nums{cgvd} * $nums{mwwt}' ... 148
can eval 'sqgr + dcrf' to get value for monkey qfst ... evaluating '$nums{sqgr} + $nums{dcrf}' ... 291
can eval 'mbqp * gmhw' to get value for monkey zmcz ... evaluating '$nums{mbqp} * $nums{gmhw}' ... 42
can eval 'bgmc + qnhh' to get value for monkey pflr ... evaluating '$nums{bgmc} + $nums{qnhh}' ... 170
can eval 'nvvv / dzcg' to get value for monkey fzld ... evaluating '$nums{nvvv} / $nums{dzcg}' ... 83
can eval 'rjtc * dfjr' to get value for monkey rnws ... evaluating '$nums{rjtc} * $nums{dfjr}' ... 74
can eval 'wrnn * ndvf' to get value for monkey zssf ... evaluating '$nums{wrnn} * $nums{ndvf}' ... 551
can eval 'fbzr * pzfd' to get value for monkey mqcj ... evaluating '$nums{fbzr} * $nums{pzfd}' ... 686
can eval 'zbsm + brdn' to get value for monkey dclt ... evaluating '$nums{zbsm} + $nums{brdn}' ... 123
can eval 'rpmz + qbdz' to get value for monkey wgdr ... evaluating '$nums{rpmz} + $nums{qbdz}' ... 149
can eval 'tblf * rqzl' to get value for monkey nrtr ... evaluating '$nums{tblf} * $nums{rqzl}' ... 118
can eval 'gslf * tcsl' to get value for monkey nssj ... evaluating '$nums{gslf} * $nums{tcsl}' ... 111
can eval 'dbqm + dbrd' to get value for monkey zpfn ... evaluating '$nums{dbqm} + $nums{dbrd}' ... 149
can eval 'sjdd / pmpl' to get value for monkey ngsz ... evaluating '$nums{sjdd} / $nums{pmpl}' ... 32
can eval 'tmnn - mwgb' to get value for monkey pjmr ... evaluating '$nums{tmnn} - $nums{mwgb}' ... 28
can eval 'nfgv * rglv' to get value for monkey qdqr ... evaluating '$nums{nfgv} * $nums{rglv}' ... 1276
can eval 'pgmj * trfs' to get value for monkey ntdl ... evaluating '$nums{pgmj} * $nums{trfs}' ... 94
can eval 'sjpq + wfcz' to get value for monkey zghq ... evaluating '$nums{sjpq} + $nums{wfcz}' ... 24
can eval 'tdfb + dzdf' to get value for monkey phwf ... evaluating '$nums{tdfb} + $nums{dzdf}' ... 82
can eval 'wfft * gwmn' to get value for monkey dmtr ... evaluating '$nums{wfft} * $nums{gwmn}' ... 145
can eval 'fbmb * jjqs' to get value for monkey mqqr ... evaluating '$nums{fbmb} * $nums{jjqs}' ... 38
can eval 'pnvj - zvhh' to get value for monkey rnqg ... evaluating '$nums{pnvj} - $nums{zvhh}' ... 17
can eval 'ndsm / rvnn' to get value for monkey zhlj ... evaluating '$nums{ndsm} / $nums{rvnn}' ... 61
can eval 'fwpr + ntdl' to get value for monkey scwl ... evaluating '$nums{fwpr} + $nums{ntdl}' ... 102
can eval 'fqjf / grnp' to get value for monkey vqdr ... evaluating '$nums{fqjf} / $nums{grnp}' ... 30
can eval 'rzfl + hwdd' to get value for monkey lrdv ... evaluating '$nums{rzfl} + $nums{hwdd}' ... 59
can eval 'zqsw + gbvl' to get value for monkey dlvh ... evaluating '$nums{zqsw} + $nums{gbvl}' ... 23
can eval 'wqjf * fczv' to get value for monkey mrbz ... evaluating '$nums{wqjf} * $nums{fczv}' ... 195
can eval 'snzj * cvqw' to get value for monkey stcn ... evaluating '$nums{snzj} * $nums{cvqw}' ... 275
can eval 'qlpp - qpzb' to get value for monkey sbzz ... evaluating '$nums{qlpp} - $nums{qpzb}' ... 23
can eval 'hhch * mdbh' to get value for monkey pbfn ... evaluating '$nums{hhch} * $nums{mdbh}' ... 615
can eval 'qggf * nwsv' to get value for monkey prgh ... evaluating '$nums{qggf} * $nums{nwsv}' ... 200
can eval 'mbqg + tfdh' to get value for monkey lzcp ... evaluating '$nums{mbqg} + $nums{tfdh}' ... 11
can eval 'cntz + wnjd' to get value for monkey rlmt ... evaluating '$nums{cntz} + $nums{wnjd}' ... 64
can eval 'glfw * thrc' to get value for monkey cfjg ... evaluating '$nums{glfw} * $nums{thrc}' ... 93
can eval 'ldjm + nvld' to get value for monkey jjtn ... evaluating '$nums{ldjm} + $nums{nvld}' ... 131
can eval 'bwgm + qhhr' to get value for monkey fbsb ... evaluating '$nums{bwgm} + $nums{qhhr}' ... 163
can eval 'cdmg * nssj' to get value for monkey dztc ... evaluating '$nums{cdmg} * $nums{nssj}' ... 999
can eval 'czgm * zhlj' to get value for monkey ttvd ... evaluating '$nums{czgm} * $nums{zhlj}' ... 183
can eval 'lmlr * gmgn' to get value for monkey btsb ... evaluating '$nums{lmlr} * $nums{gmgn}' ... 44
can eval 'smmq / qhvs' to get value for monkey mdqz ... evaluating '$nums{smmq} / $nums{qhvs}' ... 7
can eval 'dfrp * fmvz' to get value for monkey fzvw ... evaluating '$nums{dfrp} * $nums{fmvz}' ... 208
can eval 'nvsf + qfst' to get value for monkey trms ... evaluating '$nums{nvsf} + $nums{qfst}' ... 947
can eval 'cntb * gnhm' to get value for monkey zbjp ... evaluating '$nums{cntb} * $nums{gnhm}' ... 530
can eval 'zwqv - ffqb' to get value for monkey dpzm ... evaluating '$nums{zwqv} - $nums{ffqb}' ... 53
can eval 'lqgn + gqtd' to get value for monkey jwtg ... evaluating '$nums{lqgn} + $nums{gqtd}' ... 37
can eval 'cjvp + mbdd' to get value for monkey lgqf ... evaluating '$nums{cjvp} + $nums{mbdd}' ... 29
can eval 'fcjj / mlrp' to get value for monkey tgwc ... evaluating '$nums{fcjj} / $nums{mlrp}' ... 319
can eval 'vhmw * mpvb' to get value for monkey wmdq ... evaluating '$nums{vhmw} * $nums{mpvb}' ... 365
can eval 'fzvw / dgzg' to get value for monkey hfsw ... evaluating '$nums{fzvw} / $nums{dgzg}' ... 104
can eval 'frsc * jcng' to get value for monkey ncjd ... evaluating '$nums{frsc} * $nums{jcng}' ... 94
can eval 'vqcr + rtlf' to get value for monkey lnvq ... evaluating '$nums{vqcr} + $nums{rtlf}' ... 483
can eval 'dcjm + dwwv' to get value for monkey dfnc ... evaluating '$nums{dcjm} + $nums{dwwv}' ... 628
can eval 'scwl - cmbw' to get value for monkey fbfg ... evaluating '$nums{scwl} - $nums{cmbw}' ... 71
can eval 'nrtr + zrjq' to get value for monkey vrgh ... evaluating '$nums{nrtr} + $nums{zrjq}' ... 125
can eval 'ngsz + tznr' to get value for monkey gjgr ... evaluating '$nums{ngsz} + $nums{tznr}' ... 47
can eval 'wgss + hzmw' to get value for monkey hwtj ... evaluating '$nums{wgss} + $nums{hzmw}' ... 79
can eval 'phwf / tzwj' to get value for monkey dmzl ... evaluating '$nums{phwf} / $nums{tzwj}' ... 41
can eval 'zmsn * wwmm' to get value for monkey gbjw ... evaluating '$nums{zmsn} * $nums{wwmm}' ... 92
can eval 'hzzf * zbrj' to get value for monkey tzgb ... evaluating '$nums{hzzf} * $nums{zbrj}' ... 354
can eval 'prpd - dphc' to get value for monkey zlpv ... evaluating '$nums{prpd} - $nums{dphc}' ... 29
can eval 'gcjm + jjch' to get value for monkey vzlt ... evaluating '$nums{gcjm} + $nums{jjch}' ... 96
can eval 'dsrz * bqlh' to get value for monkey npqp ... evaluating '$nums{dsrz} * $nums{bqlh}' ... 64
can eval 'mqqr / zpzp' to get value for monkey ffdf ... evaluating '$nums{mqqr} / $nums{zpzp}' ... 19
can eval 'lcpf * cgqs' to get value for monkey fglb ... evaluating '$nums{lcpf} * $nums{cgqs}' ... 189
can eval 'jwtg + htps' to get value for monkey rcnm ... evaluating '$nums{jwtg} + $nums{htps}' ... 43
can eval 'nwjp + bqtb' to get value for monkey vrcg ... evaluating '$nums{nwjp} + $nums{bqtb}' ... 67
can eval 'tqmb * bbvl' to get value for monkey vtmn ... evaluating '$nums{tqmb} * $nums{bbvl}' ... 34
can eval 'qcvv - fbsb' to get value for monkey fswn ... evaluating '$nums{qcvv} - $nums{fbsb}' ... 467
can eval 'sstv + qzhb' to get value for monkey hgmj ... evaluating '$nums{sstv} + $nums{qzhb}' ... 281
can eval 'humn - jchs' to get value for monkey fhvw ... evaluating '$nums{humn} - $nums{jchs}' ... 506
can eval 'zsfr - hdjh' to get value for monkey dtfj ... evaluating '$nums{zsfr} - $nums{hdjh}' ... 38
can eval 'vrcg + pbqq' to get value for monkey dcbm ... evaluating '$nums{vrcg} + $nums{pbqq}' ... 75
can eval 'lpjz * tmqv' to get value for monkey tlhq ... evaluating '$nums{lpjz} * $nums{tmqv}' ... 329
can eval 'qtdg * sqfw' to get value for monkey brcv ... evaluating '$nums{qtdg} * $nums{sqfw}' ... 566
can eval 'scvq * dmzl' to get value for monkey sqcr ... evaluating '$nums{scvq} * $nums{dmzl}' ... 82
can eval 'vpcf + vlmj' to get value for monkey glzb ... evaluating '$nums{vpcf} + $nums{vlmj}' ... 31
can eval 'lcfj + nbch' to get value for monkey rglj ... evaluating '$nums{lcfj} + $nums{nbch}' ... 37
can eval 'mrbz / nlwl' to get value for monkey qmsm ... evaluating '$nums{mrbz} / $nums{nlwl}' ... 65
can eval 'zzzb * nldh' to get value for monkey ffgz ... evaluating '$nums{zzzb} * $nums{nldh}' ... 2245
can eval 'dmtr + cnsr' to get value for monkey zqzn ... evaluating '$nums{dmtr} + $nums{cnsr}' ... 150
can eval 'wsqn * zsrr' to get value for monkey dpzc ... evaluating '$nums{wsqn} * $nums{zsrr}' ... 3168
can eval 'vcrt * tsbj' to get value for monkey dhdz ... evaluating '$nums{vcrt} * $nums{tsbj}' ... 644
can eval 'gczc / tmcj' to get value for monkey plrv ... evaluating '$nums{gczc} / $nums{tmcj}' ... 71
can eval 'bhrd + sgjl' to get value for monkey wnjm ... evaluating '$nums{bhrd} + $nums{sgjl}' ... 89
can eval 'drfv * ncjd' to get value for monkey vwdj ... evaluating '$nums{drfv} * $nums{ncjd}' ... 282
can eval 'pmbl * wgdc' to get value for monkey lngv ... evaluating '$nums{pmbl} * $nums{wgdc}' ... 88
can eval 'mzdb * tzqz' to get value for monkey nvmb ... evaluating '$nums{mzdb} * $nums{tzqz}' ... 218
can eval 'mlbf / vntw' to get value for monkey jsfc ... evaluating '$nums{mlbf} / $nums{vntw}' ... 11
can eval 'czwj / hgmg' to get value for monkey qnwn ... evaluating '$nums{czwj} / $nums{hgmg}' ... 8
can eval 'bltz + trvb' to get value for monkey gpwj ... evaluating '$nums{bltz} + $nums{trvb}' ... 269
can eval 'hspj * sbcs' to get value for monkey hbgd ... evaluating '$nums{hspj} * $nums{sbcs}' ... 422
can eval 'lzcp * qpqh' to get value for monkey sglv ... evaluating '$nums{lzcp} * $nums{qpqh}' ... 407
can eval 'vwdj - frjt' to get value for monkey qgbs ... evaluating '$nums{vwdj} - $nums{frjt}' ... 191
can eval 'pflr - wssv' to get value for monkey tsvr ... evaluating '$nums{pflr} - $nums{wssv}' ... 163
can eval 'pgpb * tmwt' to get value for monkey bhzf ... evaluating '$nums{pgpb} * $nums{tmwt}' ... 162
can eval 'zlqv * rchm' to get value for monkey mzzd ... evaluating '$nums{zlqv} * $nums{rchm}' ... 130
can eval 'hnmp * bmvb' to get value for monkey lfph ... evaluating '$nums{hnmp} * $nums{bmvb}' ... 54
can eval 'vbfz + snpq' to get value for monkey fwfq ... evaluating '$nums{vbfz} + $nums{snpq}' ... 50
can eval 'tcrp * fhdl' to get value for monkey bjpv ... evaluating '$nums{tcrp} * $nums{fhdl}' ... 21
can eval 'ttvd * tmzp' to get value for monkey nbrn ... evaluating '$nums{ttvd} * $nums{tmzp}' ... 366
can eval 'btrb + tsvr' to get value for monkey znvd ... evaluating '$nums{btrb} + $nums{tsvr}' ... 197
can eval 'rmdr + ftsd' to get value for monkey mfbs ... evaluating '$nums{rmdr} + $nums{ftsd}' ... 83
can eval 'sglf + gndh' to get value for monkey hrzb ... evaluating '$nums{sglf} + $nums{gndh}' ... 587
can eval 'bcfp * rtjd' to get value for monkey rcrh ... evaluating '$nums{bcfp} * $nums{rtjd}' ... 576
can eval 'lffg * srwc' to get value for monkey njrm ... evaluating '$nums{lffg} * $nums{srwc}' ... 40
can eval 'rnws / mvmf' to get value for monkey wgqs ... evaluating '$nums{rnws} / $nums{mvmf}' ... 37
can eval 'btsb - trgm' to get value for monkey zjvw ... evaluating '$nums{btsb} - $nums{trgm}' ... 37
can eval 'gbjm * slrq' to get value for monkey qnzf ... evaluating '$nums{gbjm} * $nums{slrq}' ... 28
can eval 'sglv - zfzp' to get value for monkey hvlt ... evaluating '$nums{sglv} - $nums{zfzp}' ... 395
can eval 'phqq - ctdq' to get value for monkey pqwr ... evaluating '$nums{phqq} - $nums{ctdq}' ... 19
can eval 'pwvl + rcrh' to get value for monkey gchz ... evaluating '$nums{pwvl} + $nums{rcrh}' ... 629
can eval 'dncn * lldw' to get value for monkey vcbz ... evaluating '$nums{dncn} * $nums{lldw}' ... 299
can eval 'rtdf + dhdz' to get value for monkey fjsz ... evaluating '$nums{rtdf} + $nums{dhdz}' ... 859
can eval 'hcpr + vtmn' to get value for monkey mcmg ... evaluating '$nums{hcpr} + $nums{vtmn}' ... 37
can eval 'mdqz * ctmt' to get value for monkey wmcv ... evaluating '$nums{mdqz} * $nums{ctmt}' ... 21
can eval 'dlvh * cjnw' to get value for monkey hzpm ... evaluating '$nums{dlvh} * $nums{cjnw}' ... 598
can eval 'qhzz * wgqs' to get value for monkey mzvc ... evaluating '$nums{qhzz} * $nums{wgqs}' ... 111
can eval 'nbrn / pwjq' to get value for monkey vzrs ... evaluating '$nums{nbrn} / $nums{pwjq}' ... 122
can eval 'gbwj / zbpj' to get value for monkey zhtv ... evaluating '$nums{gbwj} / $nums{zbpj}' ... 151
can eval 'lvvt * hgmj' to get value for monkey gjzp ... evaluating '$nums{lvvt} * $nums{hgmj}' ... 562
can eval 'mwqt + vlnh' to get value for monkey mpgt ... evaluating '$nums{mwqt} + $nums{vlnh}' ... 441
can eval 'crrl + zhpb' to get value for monkey zzvp ... evaluating '$nums{crrl} + $nums{zhpb}' ... 61
can eval 'mjzc + lvmh' to get value for monkey zzng ... evaluating '$nums{mjzc} + $nums{lvmh}' ... 107
can eval 'jmqd * whfz' to get value for monkey mslq ... evaluating '$nums{jmqd} * $nums{whfz}' ... 44
can eval 'lgqf * wtlf' to get value for monkey rrvj ... evaluating '$nums{lgqf} * $nums{wtlf}' ... 116
can eval 'wnfd / njhn' to get value for monkey rrpg ... evaluating '$nums{wnfd} / $nums{njhn}' ... 11
can eval 'rzcl + sbzz' to get value for monkey cmbv ... evaluating '$nums{rzcl} + $nums{sbzz}' ... 179
can eval 'rglj * mqrj' to get value for monkey qnrq ... evaluating '$nums{rglj} * $nums{mqrj}' ... 740
can eval 'pngn * qvsp' to get value for monkey znsz ... evaluating '$nums{pngn} * $nums{qvsp}' ... 539
re-looping...
can eval 'dhqz - znbn' to get value for monkey jjmj ... evaluating '$nums{dhqz} - $nums{znbn}' ... 13
can eval 'gztr + ltvl' to get value for monkey qrgv ... evaluating '$nums{gztr} + $nums{ltvl}' ... 71
can eval 'hzpm / lnwp' to get value for monkey jdlt ... evaluating '$nums{hzpm} / $nums{lnwp}' ... 299
can eval 'stcn / wdqz' to get value for monkey swwc ... evaluating '$nums{stcn} / $nums{wdqz}' ... 55
can eval 'njsn + qqvl' to get value for monkey nfcp ... evaluating '$nums{njsn} + $nums{qqvl}' ... 55
can eval 'bldf + zhtv' to get value for monkey mrnp ... evaluating '$nums{bldf} + $nums{zhtv}' ... 395
can eval 'dclt * llzt' to get value for monkey npcf ... evaluating '$nums{dclt} * $nums{llzt}' ... 246
can eval 'vlqf + zjrv' to get value for monkey wcvt ... evaluating '$nums{vlqf} + $nums{zjrv}' ... 71
can eval 'jjtn * gmcs' to get value for monkey nvhd ... evaluating '$nums{jjtn} * $nums{gmcs}' ... 262
can eval 'ffdf * tcfw' to get value for monkey qgff ... evaluating '$nums{ffdf} * $nums{tcfw}' ... 1482
can eval 'hwtj + ltzc' to get value for monkey bgvq ... evaluating '$nums{hwtj} + $nums{ltzc}' ... 127
can eval 'tvzh * zjvw' to get value for monkey vlgs ... evaluating '$nums{tvzh} * $nums{zjvw}' ... 111
can eval 'tzgb / psjq' to get value for monkey lhtf ... evaluating '$nums{tzgb} / $nums{psjq}' ... 59
can eval 'rsdd * phft' to get value for monkey dcrc ... evaluating '$nums{rsdd} * $nums{phft}' ... 1075
can eval 'sqcr + lpdr' to get value for monkey whmn ... evaluating '$nums{sqcr} + $nums{lpdr}' ... 131
can eval 'bzgj * rnqg' to get value for monkey njgp ... evaluating '$nums{bzgj} * $nums{rnqg}' ... 51
can eval 'wnjm * rssw' to get value for monkey dcjs ... evaluating '$nums{wnjm} * $nums{rssw}' ... 356
can eval 'gqmp + zghq' to get value for monkey gqqr ... evaluating '$nums{gqmp} + $nums{zghq}' ... 29
can eval 'ffgz / nqsv' to get value for monkey gjfh ... evaluating '$nums{ffgz} / $nums{nqsv}' ... 449
can eval 'swwc + dzhw' to get value for monkey sdfb ... evaluating '$nums{swwc} + $nums{dzhw}' ... 167
can eval 'rcnm * ccfq' to get value for monkey frst ... evaluating '$nums{rcnm} * $nums{ccfq}' ... 1419
can eval 'nvhd / tfcr' to get value for monkey rsfb ... evaluating '$nums{nvhd} / $nums{tfcr}' ... 131
can eval 'dfzz * bqbt' to get value for monkey qqbf ... evaluating '$nums{dfzz} * $nums{bqbt}' ... 214
can eval 'slcv + rrvj' to get value for monkey ndph ... evaluating '$nums{slcv} + $nums{rrvj}' ... 149
can eval 'gmqs + hbgd' to get value for monkey jjns ... evaluating '$nums{gmqs} + $nums{hbgd}' ... 493
can eval 'wzww + vqdr' to get value for monkey jmnh ... evaluating '$nums{wzww} + $nums{vqdr}' ... 43
can eval 'qdqr - bbbm' to get value for monkey zfwm ... evaluating '$nums{qdqr} - $nums{bbbm}' ... 853
can eval 'nhjs * csbg' to get value for monkey pmtp ... evaluating '$nums{nhjs} * $nums{csbg}' ... 1727
can eval 'tnmd + npqp' to get value for monkey ztdn ... evaluating '$nums{tnmd} + $nums{npqp}' ... 139
can eval 'zzpg * jjmj' to get value for monkey snvj ... evaluating '$nums{zzpg} * $nums{jjmj}' ... 39
can eval 'gwsq + glzb' to get value for monkey mjms ... evaluating '$nums{gwsq} + $nums{glzb}' ... 34
can eval 'fswn * llbf' to get value for monkey bssw ... evaluating '$nums{fswn} * $nums{llbf}' ... 934
can eval 'zlpv + czrw' to get value for monkey qpts ... evaluating '$nums{zlpv} + $nums{czrw}' ... 61
can eval 'bdsp + wgdr' to get value for monkey jbqr ... evaluating '$nums{bdsp} + $nums{wgdr}' ... 174
can eval 'lsbc + brcv' to get value for monkey dhwc ... evaluating '$nums{lsbc} + $nums{brcv}' ... 588
can eval 'mslq - jfjf' to get value for monkey dwph ... evaluating '$nums{mslq} - $nums{jfjf}' ... 43
can eval 'fhvw / qptt' to get value for monkey zjnw ... evaluating '$nums{fhvw} / $nums{qptt}' ... 253
can eval 'ggvl + mfbs' to get value for monkey qrsq ... evaluating '$nums{ggvl} + $nums{mfbs}' ... 639
can eval 'lrdv * jjgl' to get value for monkey jtrs ... evaluating '$nums{lrdv} * $nums{jjgl}' ... 767
can eval 'ntwf * lhtf' to get value for monkey cpzc ... evaluating '$nums{ntwf} * $nums{lhtf}' ... 413
can eval 'qqbf / dbww' to get value for monkey sztf ... evaluating '$nums{qqbf} / $nums{dbww}' ... 107
can eval 'vzlt - jcfg' to get value for monkey qvrm ... evaluating '$nums{vzlt} - $nums{jcfg}' ... 79
can eval 'jnsh - gjgr' to get value for monkey dbnv ... evaluating '$nums{jnsh} - $nums{gjgr}' ... 137
can eval 'jtqr + gqqr' to get value for monkey rlqt ... evaluating '$nums{jtqr} + $nums{gqqr}' ... 72
can eval 'gchz + prgh' to get value for monkey dcwm ... evaluating '$nums{gchz} + $nums{prgh}' ... 829
can eval 'fbfg * mfbv' to get value for monkey bsdh ... evaluating '$nums{fbfg} * $nums{mfbv}' ... 3266
can eval 'mcmg - rfrr' to get value for monkey phwz ... evaluating '$nums{mcmg} - $nums{rfrr}' ... 32
can eval 'qgbs + qtvs' to get value for monkey cmsl ... evaluating '$nums{qgbs} + $nums{qtvs}' ... 227
can eval 'lvmq + lfph' to get value for monkey zdjn ... evaluating '$nums{lvmq} + $nums{lfph}' ... 67
can eval 'zwqj * cmbv' to get value for monkey vssc ... evaluating '$nums{zwqj} * $nums{cmbv}' ... 895
can eval 'zzng * cvrt' to get value for monkey wlzs ... evaluating '$nums{zzng} * $nums{cvrt}' ... 535
can eval 'fprp * jsfc' to get value for monkey msnn ... evaluating '$nums{fprp} * $nums{jsfc}' ... 121
can eval 'phwz + bhfb' to get value for monkey wtdg ... evaluating '$nums{phwz} + $nums{bhfb}' ... 34
can eval 'dmnl + zqzn' to get value for monkey tjjh ... evaluating '$nums{dmnl} + $nums{zqzn}' ... 173
can eval 'fglb - fqss' to get value for monkey lvzt ... evaluating '$nums{fglb} - $nums{fqss}' ... 131
can eval 'nntf + dtfj' to get value for monkey jnsf ... evaluating '$nums{nntf} + $nums{dtfj}' ... 43
can eval 'zjnw + qrsq' to get value for monkey tqzz ... evaluating '$nums{zjnw} + $nums{qrsq}' ... 892
can eval 'wtdg + qrnh' to get value for monkey vpbr ... evaluating '$nums{wtdg} + $nums{qrnh}' ... 73
can eval 'drpc * gpwj' to get value for monkey tnnc ... evaluating '$nums{drpc} * $nums{gpwj}' ... 1076
can eval 'hfsw - stdj' to get value for monkey btbc ... evaluating '$nums{hfsw} - $nums{stdj}' ... 78
can eval 'mjms / snbb' to get value for monkey vcqb ... evaluating '$nums{mjms} / $nums{snbb}' ... 17
can eval 'qnzf - nlqv' to get value for monkey zgtw ... evaluating '$nums{qnzf} - $nums{nlqv}' ... 23
can eval 'lngv - zpfz' to get value for monkey wzrt ... evaluating '$nums{lngv} - $nums{zpfz}' ... 61
can eval 'vrgh * mflt' to get value for monkey rgnr ... evaluating '$nums{vrgh} * $nums{mflt}' ... 250
can eval 'wlcc + dcbm' to get value for monkey qmzb ... evaluating '$nums{wlcc} + $nums{dcbm}' ... 78
can eval 'bqns + qnwn' to get value for monkey fzdc ... evaluating '$nums{bqns} + $nums{qnwn}' ... 26
can eval 'vzrs * jbqj' to get value for monkey lhcm ... evaluating '$nums{vzrs} * $nums{jbqj}' ... 488
can eval 'bjpv - rltm' to get value for monkey tgff ... evaluating '$nums{bjpv} - $nums{rltm}' ... 17
can eval 'vlgs * nzwm' to get value for monkey jdvr ... evaluating '$nums{vlgs} * $nums{nzwm}' ... 333
can eval 'wfdf + qpts' to get value for monkey vfsl ... evaluating '$nums{wfdf} + $nums{qpts}' ... 151
can eval 'dfnc / jrpm' to get value for monkey jgsv ... evaluating '$nums{dfnc} / $nums{jrpm}' ... 157
can eval 'lbqw * gjfh' to get value for monkey jzdv ... evaluating '$nums{lbqw} * $nums{gjfh}' ... 1347
can eval 'wtmt + fwfq' to get value for monkey bsfr ... evaluating '$nums{wtmt} + $nums{fwfq}' ... 77
can eval 'hrzb + jdlt' to get value for monkey cjgp ... evaluating '$nums{hrzb} + $nums{jdlt}' ... 886
can eval 'gjzp / lnpw' to get value for monkey csgw ... evaluating '$nums{gjzp} / $nums{lnpw}' ... 281
can eval 'trhb * znvd' to get value for monkey lsvp ... evaluating '$nums{trhb} * $nums{znvd}' ... 394
can eval 'ltdt + dbnv' to get value for monkey nzpt ... evaluating '$nums{ltdt} + $nums{dbnv}' ... 190
can eval 'cfjg + whmn' to get value for monkey crqs ... evaluating '$nums{cfjg} + $nums{whmn}' ... 224
can eval 'dpzc / mrzq' to get value for monkey lrql ... evaluating '$nums{dpzc} / $nums{mrzq}' ... 1584
can eval 'zssf + tnnc' to get value for monkey vlzn ... evaluating '$nums{zssf} + $nums{tnnc}' ... 1627
can eval 'qtbp + nfcp' to get value for monkey fqjt ... evaluating '$nums{qtbp} + $nums{nfcp}' ... 59
can eval 'pgbh * zzvp' to get value for monkey qbcg ... evaluating '$nums{pgbh} * $nums{zzvp}' ... 427
can eval 'zmcz * fjsz' to get value for monkey zcrl ... evaluating '$nums{zmcz} * $nums{fjsz}' ... 36078
can eval 'nltl * lvzt' to get value for monkey zvmf ... evaluating '$nums{nltl} * $nums{lvzt}' ... 393
can eval 'hhsz + cpzc' to get value for monkey dlfj ... evaluating '$nums{hhsz} + $nums{cpzc}' ... 538
can eval 'btbb * pqwr' to get value for monkey zgmg ... evaluating '$nums{btbb} * $nums{pqwr}' ... 703
can eval 'jmnh * mdmm' to get value for monkey zfgc ... evaluating '$nums{jmnh} * $nums{mdmm}' ... 473
can eval 'zfwm * ffvc' to get value for monkey qcbc ... evaluating '$nums{zfwm} * $nums{ffvc}' ... 1706
can eval 'wlzs + qvhf' to get value for monkey zhrt ... evaluating '$nums{wlzs} + $nums{qvhf}' ... 684
can eval 'zcrl / bglm' to get value for monkey ddlb ... evaluating '$nums{zcrl} / $nums{bglm}' ... 12026
can eval 'ztdn - zjtq' to get value for monkey qcgt ... evaluating '$nums{ztdn} - $nums{zjtq}' ... 102
can eval 'zjfs * zgtw' to get value for monkey vhgd ... evaluating '$nums{zjfs} * $nums{zgtw}' ... 69
can eval 'tgdl * vlzn' to get value for monkey qpgq ... evaluating '$nums{tgdl} * $nums{vlzn}' ... 8135
can eval 'wcvt * npwq' to get value for monkey jmcg ... evaluating '$nums{wcvt} * $nums{npwq}' ... 426
can eval 'dwph * tqzf' to get value for monkey cnmh ... evaluating '$nums{dwph} * $nums{tqzf}' ... 129
can eval 'rsfb * rvfw' to get value for monkey hcjw ... evaluating '$nums{rsfb} * $nums{rvfw}' ... 262
can eval 'csgw + zlgw' to get value for monkey dhtf ... evaluating '$nums{csgw} + $nums{zlgw}' ... 776
can eval 'mrnp / mrmm' to get value for monkey bscb ... evaluating '$nums{mrnp} / $nums{mrmm}' ... 79
can eval 'vnmd + jnsf' to get value for monkey dmpf ... evaluating '$nums{vnmd} + $nums{jnsf}' ... 157
can eval 'zblw + njrm' to get value for monkey hzvv ... evaluating '$nums{zblw} + $nums{njrm}' ... 47
can eval 'vcqb * slpm' to get value for monkey ppvr ... evaluating '$nums{vcqb} * $nums{slpm}' ... 323
can eval 'ngwj + fzdc' to get value for monkey bpmc ... evaluating '$nums{ngwj} + $nums{fzdc}' ... 29
can eval 'rnwm + bsfr' to get value for monkey bhcp ... evaluating '$nums{rnwm} + $nums{bsfr}' ... 144
can eval 'qgff + tlhq' to get value for monkey bdfc ... evaluating '$nums{qgff} + $nums{tlhq}' ... 1811
can eval 'prtw + fqjt' to get value for monkey cmlh ... evaluating '$nums{prtw} + $nums{fqjt}' ... 79
can eval 'lnsv * pmtp' to get value for monkey rzbs ... evaluating '$nums{lnsv} * $nums{pmtp}' ... 6267283
can eval 'ndph + nvmb' to get value for monkey vhpg ... evaluating '$nums{ndph} + $nums{nvmb}' ... 367
can eval 'chth + wzrt' to get value for monkey gbpd ... evaluating '$nums{chth} + $nums{wzrt}' ... 91
can eval 'dpqr * tgff' to get value for monkey dfwg ... evaluating '$nums{dpqr} * $nums{tgff}' ... 136
can eval 'ggdg * wmcv' to get value for monkey tcnv ... evaluating '$nums{ggdg} * $nums{wmcv}' ... 798
can eval 'jbqr + vhzd' to get value for monkey nsjz ... evaluating '$nums{jbqr} + $nums{vhzd}' ... 191
can eval 'mrpw * sztf' to get value for monkey jgnr ... evaluating '$nums{mrpw} * $nums{sztf}' ... 428
can eval 'snvj * prqz' to get value for monkey wltb ... evaluating '$nums{snvj} * $nums{prqz}' ... 78
can eval 'fzld + sdfb' to get value for monkey pfwp ... evaluating '$nums{fzld} + $nums{sdfb}' ... 250
can eval 'rrpg * vmvr' to get value for monkey qzrf ... evaluating '$nums{rrpg} * $nums{vmvr}' ... 33
can eval 'cnmh + cljv' to get value for monkey fmvh ... evaluating '$nums{cnmh} + $nums{cljv}' ... 130
can eval 'lwnq * qrgv' to get value for monkey dlpm ... evaluating '$nums{lwnq} * $nums{qrgv}' ... 781
can eval 'htzb + zfgc' to get value for monkey whfd ... evaluating '$nums{htzb} + $nums{zfgc}' ... 515
can eval 'qfzj - msnn' to get value for monkey zqmf ... evaluating '$nums{qfzj} - $nums{msnn}' ... 352
can eval 'qbcg / csfn' to get value for monkey tjnv ... evaluating '$nums{qbcg} / $nums{csfn}' ... 61
can eval 'dfwg + vcbz' to get value for monkey lnmz ... evaluating '$nums{dfwg} + $nums{vcbz}' ... 435
can eval 'dcwm * bscb' to get value for monkey gqsd ... evaluating '$nums{dcwm} * $nums{bscb}' ... 65491
can eval 'dszn * cmsl' to get value for monkey tpfs ... evaluating '$nums{dszn} * $nums{cmsl}' ... 1135
can eval 'dsgj * bgvq' to get value for monkey nfwb ... evaluating '$nums{dsgj} * $nums{bgvq}' ... 254
can eval 'rmhm + jjns' to get value for monkey vbhn ... evaluating '$nums{rmhm} + $nums{jjns}' ... 1367
can eval 'hzvv + nhgc' to get value for monkey dsbr ... evaluating '$nums{hzvv} + $nums{nhgc}' ... 107
can eval 'ngfz + gbpd' to get value for monkey ndlf ... evaluating '$nums{ngfz} + $nums{gbpd}' ... 128
can eval 'trqs * njgp' to get value for monkey qvfb ... evaluating '$nums{trqs} * $nums{njgp}' ... 714
can eval 'twmt * vhgd' to get value for monkey dbbw ... evaluating '$nums{twmt} * $nums{vhgd}' ... 414
re-looping...
can eval 'npcf - flmc' to get value for monkey hlzl ... evaluating '$nums{npcf} - $nums{flmc}' ... 223
can eval 'btbc / rzgq' to get value for monkey bcdt ... evaluating '$nums{btbc} / $nums{rzgq}' ... 13
can eval 'vfsl * dfpc' to get value for monkey trcj ... evaluating '$nums{vfsl} * $nums{dfpc}' ... 302
can eval 'gwlf * nzpt' to get value for monkey brqw ... evaluating '$nums{gwlf} * $nums{nzpt}' ... 17480
can eval 'trcj + qnrq' to get value for monkey nnsj ... evaluating '$nums{trcj} + $nums{qnrq}' ... 1042
can eval 'cqfg * qvrm' to get value for monkey nrrj ... evaluating '$nums{cqfg} * $nums{qvrm}' ... 395
can eval 'wlcn * tqzz' to get value for monkey gllg ... evaluating '$nums{wlcn} * $nums{tqzz}' ... 16056
can eval 'vpbr - fcfv' to get value for monkey wtnn ... evaluating '$nums{vpbr} - $nums{fcfv}' ... 53
can eval 'brqw / dwhp' to get value for monkey bcbd ... evaluating '$nums{brqw} / $nums{dwhp}' ... 8740
can eval 'hvlt - qcgt' to get value for monkey bdnr ... evaluating '$nums{hvlt} - $nums{qcgt}' ... 293
can eval 'zhrt - tgfs' to get value for monkey wvwd ... evaluating '$nums{zhrt} - $nums{tgfs}' ... 494
can eval 'jgnr * hcbt' to get value for monkey mgdb ... evaluating '$nums{jgnr} * $nums{hcbt}' ... 856
can eval 'nsjz + ppvr' to get value for monkey gmqt ... evaluating '$nums{nsjz} + $nums{ppvr}' ... 514
can eval 'hcjw / rvpf' to get value for monkey rwss ... evaluating '$nums{hcjw} / $nums{rvpf}' ... 131
can eval 'tmzz * bpmc' to get value for monkey frgr ... evaluating '$nums{tmzz} * $nums{bpmc}' ... 58
can eval 'vhpg * pmhs' to get value for monkey ttds ... evaluating '$nums{vhpg} * $nums{pmhs}' ... 2569
can eval 'grmh * jgsv' to get value for monkey fpvt ... evaluating '$nums{grmh} * $nums{jgsv}' ... 314
can eval 'lrql - nrrj' to get value for monkey ftpn ... evaluating '$nums{lrql} - $nums{nrrj}' ... 1189
can eval 'jdvr + tgwc' to get value for monkey qqwr ... evaluating '$nums{jdvr} + $nums{tgwc}' ... 652
can eval 'zqvq * zdjn' to get value for monkey qmtz ... evaluating '$nums{zqvq} * $nums{zdjn}' ... 134
can eval 'dzfr * wtnn' to get value for monkey bvms ... evaluating '$nums{dzfr} * $nums{wtnn}' ... 106
can eval 'bdnr * fvct' to get value for monkey jnwq ... evaluating '$nums{bdnr} * $nums{fvct}' ... 586
can eval 'qmzb + cqcm' to get value for monkey mgfn ... evaluating '$nums{qmzb} + $nums{cqcm}' ... 88
can eval 'pfwp + dcjs' to get value for monkey vhmn ... evaluating '$nums{pfwp} + $nums{dcjs}' ... 606
can eval 'qcbc / rsrb' to get value for monkey fhqw ... evaluating '$nums{qcbc} / $nums{rsrb}' ... 853
can eval 'qdph + rgnr' to get value for monkey hvww ... evaluating '$nums{qdph} + $nums{rgnr}' ... 398
can eval 'zvmf + jmnz' to get value for monkey gtwp ... evaluating '$nums{zvmf} + $nums{jmnz}' ... 439
can eval 'wltb + jhdm' to get value for monkey tjft ... evaluating '$nums{wltb} + $nums{jhdm}' ... 158
can eval 'vllt * dmpf' to get value for monkey twns ... evaluating '$nums{vllt} * $nums{dmpf}' ... 471
can eval 'rlqt + dzjd' to get value for monkey shql ... evaluating '$nums{rlqt} + $nums{dzjd}' ... 79
can eval 'hlzl + dlmt' to get value for monkey pvvt ... evaluating '$nums{hlzl} + $nums{dlmt}' ... 257
can eval 'sncv - dsbr' to get value for monkey pjss ... evaluating '$nums{sncv} - $nums{dsbr}' ... 250
can eval 'pjmr + cmlh' to get value for monkey vsqp ... evaluating '$nums{pjmr} + $nums{cmlh}' ... 107
can eval 'cfgq * vbhn' to get value for monkey rrwd ... evaluating '$nums{cfgq} * $nums{vbhn}' ... 4101
can eval 'frgr + lqcb' to get value for monkey ldqv ... evaluating '$nums{frgr} + $nums{lqcb}' ... 71
can eval 'jwtj * vsqp' to get value for monkey dtbc ... evaluating '$nums{jwtj} * $nums{vsqp}' ... 214
can eval 'zpfn + crqs' to get value for monkey tftj ... evaluating '$nums{zpfn} + $nums{crqs}' ... 373
can eval 'cghs * jzdv' to get value for monkey rjqm ... evaluating '$nums{cghs} * $nums{jzdv}' ... 9429
can eval 'wmdq - shql' to get value for monkey lzfz ... evaluating '$nums{wmdq} - $nums{shql}' ... 286
can eval 'qzrf + dlgh' to get value for monkey mzcf ... evaluating '$nums{qzrf} + $nums{dlgh}' ... 46
can eval 'bvms - wwjr' to get value for monkey jjpv ... evaluating '$nums{bvms} - $nums{wwjr}' ... 73
can eval 'vdgf + gllg' to get value for monkey wlcr ... evaluating '$nums{vdgf} + $nums{gllg}' ... 16265
can eval 'tftj - jltt' to get value for monkey rcfm ... evaluating '$nums{tftj} - $nums{jltt}' ... 283
can eval 'ddlb + qpgq' to get value for monkey wnlr ... evaluating '$nums{ddlb} + $nums{qpgq}' ... 20161
can eval 'dhtf / fjmd' to get value for monkey hdfz ... evaluating '$nums{dhtf} / $nums{fjmd}' ... 97
can eval 'jmcg + dlfj' to get value for monkey mthm ... evaluating '$nums{jmcg} + $nums{dlfj}' ... 964
can eval 'mgfn + gtqm' to get value for monkey hwrj ... evaluating '$nums{mgfn} + $nums{gtqm}' ... 99
can eval 'shhc + gtwp' to get value for monkey lrhp ... evaluating '$nums{shhc} + $nums{gtwp}' ... 458
can eval 'fmvh + hwrj' to get value for monkey npbc ... evaluating '$nums{fmvh} + $nums{hwrj}' ... 229
can eval 'cjgp - rcfm' to get value for monkey gpjc ... evaluating '$nums{cjgp} - $nums{rcfm}' ... 603
can eval 'vcdg * wnlr' to get value for monkey qftw ... evaluating '$nums{vcdg} * $nums{wnlr}' ... 100805
can eval 'tjnv * qlfg' to get value for monkey zbnv ... evaluating '$nums{tjnv} * $nums{qlfg}' ... 183
can eval 'zvhs + bhcp' to get value for monkey cssf ... evaluating '$nums{zvhs} + $nums{bhcp}' ... 270
can eval 'dbbw + mdhm' to get value for monkey qlzb ... evaluating '$nums{dbbw} + $nums{mdhm}' ... 491
can eval 'csht * pvvt' to get value for monkey qjfj ... evaluating '$nums{csht} * $nums{pvvt}' ... 10280
can eval 'bcbd + gqcb' to get value for monkey rmzr ... evaluating '$nums{bcbd} + $nums{gqcb}' ... 9430
can eval 'jnwq / vnbp' to get value for monkey wfmc ... evaluating '$nums{jnwq} / $nums{vnbp}' ... 293
can eval 'zqmf * whfd' to get value for monkey crwb ... evaluating '$nums{zqmf} * $nums{whfd}' ... 181280
can eval 'lhcm * tpfs' to get value for monkey hcvz ... evaluating '$nums{lhcm} * $nums{tpfs}' ... 553880
can eval 'bcdt * zrnf' to get value for monkey fplh ... evaluating '$nums{bcdt} * $nums{zrnf}' ... 39
can eval 'mgdb + fhqw' to get value for monkey ngzn ... evaluating '$nums{mgdb} + $nums{fhqw}' ... 1709
can eval 'nzzh + nfwb' to get value for monkey psws ... evaluating '$nums{nzzh} + $nums{nfwb}' ... 274
can eval 'dtbc + whgn' to get value for monkey fmzc ... evaluating '$nums{dtbc} + $nums{whgn}' ... 256
can eval 'gmqt / mdgn' to get value for monkey gwld ... evaluating '$nums{gmqt} / $nums{mdgn}' ... 257
can eval 'gbjw + wfmc' to get value for monkey phtj ... evaluating '$nums{gbjw} + $nums{wfmc}' ... 385
can eval 'vhmn / cqtt' to get value for monkey fcwt ... evaluating '$nums{vhmn} / $nums{cqtt}' ... 101
can eval 'qqwr * vbrc' to get value for monkey pblp ... evaluating '$nums{qqwr} * $nums{vbrc}' ... 7172
can eval 'hvww / zrwf' to get value for monkey lwqz ... evaluating '$nums{hvww} / $nums{zrwf}' ... 199
re-looping...
can eval 'dhwc - rwss' to get value for monkey zmmp ... evaluating '$nums{dhwc} - $nums{rwss}' ... 457
can eval 'wlcr / vnvl' to get value for monkey flqq ... evaluating '$nums{wlcr} / $nums{vnvl}' ... 3253
can eval 'vbqt * qlzb' to get value for monkey mwgt ... evaluating '$nums{vbqt} * $nums{qlzb}' ... 982
can eval 'tjft / jtnw' to get value for monkey dmrz ... evaluating '$nums{tjft} / $nums{jtnw}' ... 79
can eval 'zbnv + ctbm' to get value for monkey sztg ... evaluating '$nums{zbnv} + $nums{ctbm}' ... 423
can eval 'cssf - plrv' to get value for monkey bltw ... evaluating '$nums{cssf} - $nums{plrv}' ... 199
can eval 'dpzm * wvwd' to get value for monkey lzrz ... evaluating '$nums{dpzm} * $nums{wvwd}' ... 26182
can eval 'wfmw + lrhp' to get value for monkey zzrq ... evaluating '$nums{wfmw} + $nums{lrhp}' ... 662
can eval 'bqbm * fpvt' to get value for monkey bzps ... evaluating '$nums{bqbm} * $nums{fpvt}' ... 628
can eval 'fwqc + qmtz' to get value for monkey qzzm ... evaluating '$nums{fwqc} + $nums{qmtz}' ... 163
can eval 'mzzd + npbc' to get value for monkey tsvc ... evaluating '$nums{mzzd} + $nums{npbc}' ... 359
can eval 'dcrc + mthm' to get value for monkey ddbh ... evaluating '$nums{dcrc} + $nums{mthm}' ... 2039
can eval 'hdtp + psws' to get value for monkey pgrq ... evaluating '$nums{hdtp} + $nums{psws}' ... 599
can eval 'ldqv * rmzh' to get value for monkey zhrn ... evaluating '$nums{ldqv} * $nums{rmzh}' ... 213
can eval 'bzlt * jjpv' to get value for monkey dmmr ... evaluating '$nums{bzlt} * $nums{jjpv}' ... 219
can eval 'fwzp * pgrq' to get value for monkey wfts ... evaluating '$nums{fwzp} * $nums{pgrq}' ... 1797
can eval 'mzcf + zldn' to get value for monkey rjst ... evaluating '$nums{mzcf} + $nums{zldn}' ... 109
can eval 'gpjc * twns' to get value for monkey vjsg ... evaluating '$nums{gpjc} * $nums{twns}' ... 284013
can eval 'flqq - cwvp' to get value for monkey dmhj ... evaluating '$nums{flqq} - $nums{cwvp}' ... 2362
can eval 'ftlh + fplh' to get value for monkey sswd ... evaluating '$nums{ftlh} + $nums{fplh}' ... 50
can eval 'vjsg + crwb' to get value for monkey vnsp ... evaluating '$nums{vjsg} + $nums{crwb}' ... 465293
can eval 'lwhv * bzps' to get value for monkey gdzl ... evaluating '$nums{lwhv} * $nums{bzps}' ... 1256
can eval 'btbd * dmrz' to get value for monkey cvrf ... evaluating '$nums{btbd} * $nums{dmrz}' ... 237
can eval 'lzfz + tlsq' to get value for monkey lgrv ... evaluating '$nums{lzfz} + $nums{tlsq}' ... 310
can eval 'phtj - ndlf' to get value for monkey btdt ... evaluating '$nums{phtj} - $nums{ndlf}' ... 257
can eval 'zhrn / zgdg' to get value for monkey vqqh ... evaluating '$nums{zhrn} / $nums{zgdg}' ... 71
can eval 'hdfz * bjzd' to get value for monkey nlfw ... evaluating '$nums{hdfz} * $nums{bjzd}' ... 194
can eval 'gdzl / trfr' to get value for monkey hccl ... evaluating '$nums{gdzl} / $nums{trfr}' ... 628
can eval 'zzrq / wsmd' to get value for monkey fpgw ... evaluating '$nums{zzrq} / $nums{wsmd}' ... 331
can eval 'btdt * ntmv' to get value for monkey phmb ... evaluating '$nums{btdt} * $nums{ntmv}' ... 4883
can eval 'znsz + fpgw' to get value for monkey pbbp ... evaluating '$nums{znsz} + $nums{fpgw}' ... 870
can eval 'njsw * lwqz' to get value for monkey bnrb ... evaluating '$nums{njsw} * $nums{lwqz}' ... 12537
can eval 'lsvp * sswd' to get value for monkey gftz ... evaluating '$nums{lsvp} * $nums{sswd}' ... 19700
can eval 'mmcn * fcwt' to get value for monkey slft ... evaluating '$nums{mmcn} * $nums{fcwt}' ... 303
can eval 'rjqm + rmzr' to get value for monkey rjdl ... evaluating '$nums{rjqm} + $nums{rmzr}' ... 18859
can eval 'tmfh * gwld' to get value for monkey wrbt ... evaluating '$nums{tmfh} * $nums{gwld}' ... 514
can eval 'ddbh * bdfc' to get value for monkey szdh ... evaluating '$nums{ddbh} * $nums{bdfc}' ... 3692629
can eval 'lzrz + bsdh' to get value for monkey wcfh ... evaluating '$nums{lzrz} + $nums{bsdh}' ... 29448
can eval 'bltw * hvpt' to get value for monkey sqtt ... evaluating '$nums{bltw} * $nums{hvpt}' ... 3383
can eval 'qjfj + bnrb' to get value for monkey ppcf ... evaluating '$nums{qjfj} + $nums{bnrb}' ... 22817
can eval 'ttds + lgrv' to get value for monkey lggg ... evaluating '$nums{ttds} + $nums{lgrv}' ... 2879
can eval 'pbbp + ngzn' to get value for monkey bvvd ... evaluating '$nums{pbbp} + $nums{ngzn}' ... 2579
can eval 'psnv * tsvc' to get value for monkey zphm ... evaluating '$nums{psnv} * $nums{tsvc}' ... 1077
can eval 'dmmr / cgzf' to get value for monkey sbbv ... evaluating '$nums{dmmr} / $nums{cgzf}' ... 73
re-looping...
can eval 'sztg * lnvq' to get value for monkey vpjv ... evaluating '$nums{sztg} * $nums{lnvq}' ... 204309
can eval 'pzmn * vqqh' to get value for monkey njcg ... evaluating '$nums{pzmn} * $nums{vqqh}' ... 142
can eval 'rjdl * lssr' to get value for monkey qncm ... evaluating '$nums{rjdl} * $nums{lssr}' ... 113154
can eval 'zlvt + qzzm' to get value for monkey nsfp ... evaluating '$nums{zlvt} + $nums{qzzm}' ... 181
can eval 'wrbt / pmfs' to get value for monkey jdgh ... evaluating '$nums{wrbt} / $nums{pmfs}' ... 257
can eval 'phmb + snzb' to get value for monkey mbjm ... evaluating '$nums{phmb} + $nums{snzb}' ... 4968
can eval 'rjst * tgnh' to get value for monkey dbwp ... evaluating '$nums{rjst} * $nums{tgnh}' ... 2071
can eval 'wfts - tfvm' to get value for monkey wbcn ... evaluating '$nums{wfts} - $nums{tfvm}' ... 1667
can eval 'tqnd * dmhj' to get value for monkey hblb ... evaluating '$nums{tqnd} * $nums{dmhj}' ... 14172
can eval 'jdgh + rnwp' to get value for monkey jnqp ... evaluating '$nums{jdgh} + $nums{rnwp}' ... 286
can eval 'fwhd * sqtt' to get value for monkey dczv ... evaluating '$nums{fwhd} * $nums{sqtt}' ... 10149
can eval 'vssc + hccl' to get value for monkey qfmh ... evaluating '$nums{vssc} + $nums{hccl}' ... 1523
can eval 'vnsp * mbjm' to get value for monkey dlnf ... evaluating '$nums{vnsp} * $nums{mbjm}' ... 2311575624
can eval 'nsfp * mqng' to get value for monkey nwrq ... evaluating '$nums{nsfp} * $nums{mqng}' ... 362
can eval 'ppcf * mthg' to get value for monkey czdw ... evaluating '$nums{ppcf} * $nums{mthg}' ... 68451
can eval 'djql + slft' to get value for monkey bqwv ... evaluating '$nums{djql} + $nums{slft}' ... 305
can eval 'sbbv * bjhh' to get value for monkey hnst ... evaluating '$nums{sbbv} * $nums{bjhh}' ... 146
can eval 'dlnf / ddtn' to get value for monkey lmfw ... evaluating '$nums{dlnf} / $nums{ddtn}' ... 1155787812
can eval 'qvfb + zphm' to get value for monkey zsqb ... evaluating '$nums{qvfb} + $nums{zphm}' ... 1791
can eval 'dbjl * bvvd' to get value for monkey ptff ... evaluating '$nums{dbjl} * $nums{bvvd}' ... 5158
can eval 'pblp + dczv' to get value for monkey hwsb ... evaluating '$nums{pblp} + $nums{dczv}' ... 17321
can eval 'qmsm * njcg' to get value for monkey cvhj ... evaluating '$nums{qmsm} * $nums{njcg}' ... 9230
can eval 'gftz + zsqb' to get value for monkey mhsz ... evaluating '$nums{gftz} + $nums{zsqb}' ... 21491
can eval 'tzzv + jnqp' to get value for monkey jmhn ... evaluating '$nums{tzzv} + $nums{jnqp}' ... 576
can eval 'qfmh * gqsd' to get value for monkey dpjv ... evaluating '$nums{qfmh} * $nums{gqsd}' ... 99742793
can eval 'nwrq - dwfp' to get value for monkey drnt ... evaluating '$nums{nwrq} - $nums{dwfp}' ... 274
re-looping...
can eval 'jmhn - mnrt' to get value for monkey zzpp ... evaluating '$nums{jmhn} - $nums{mnrt}' ... 487
can eval 'hwsb + wcfh' to get value for monkey ltgh ... evaluating '$nums{hwsb} + $nums{wcfh}' ... 46769
can eval 'qftw * mhsz' to get value for monkey bblj ... evaluating '$nums{qftw} * $nums{mhsz}' ... 2166400255
can eval 'hblb + swft' to get value for monkey fjds ... evaluating '$nums{hblb} + $nums{swft}' ... 14952
can eval 'tvsv * dbwp' to get value for monkey cghm ... evaluating '$nums{tvsv} * $nums{dbwp}' ... 4142
can eval 'czdw * nnsj' to get value for monkey wlzl ... evaluating '$nums{czdw} * $nums{nnsj}' ... 71325942
can eval 'vpjv + cvhj' to get value for monkey wdwf ... evaluating '$nums{vpjv} + $nums{cvhj}' ... 213539
can eval 'lggg + wbcn' to get value for monkey shpj ... evaluating '$nums{lggg} + $nums{wbcn}' ... 4546
can eval 'hnst + hvdj' to get value for monkey shzg ... evaluating '$nums{hnst} + $nums{hvdj}' ... 257
can eval 'ltgh * cwcg' to get value for monkey whcf ... evaluating '$nums{ltgh} * $nums{cwcg}' ... 93538
can eval 'zzpp * vlfp' to get value for monkey lmrl ... evaluating '$nums{zzpp} * $nums{vlfp}' ... 974
can eval 'rrwd * shpj' to get value for monkey dhmp ... evaluating '$nums{rrwd} * $nums{shpj}' ... 18643146
can eval 'lmrl * nvwj' to get value for monkey lswr ... evaluating '$nums{lmrl} * $nums{nvwj}' ... 4870
can eval 'whcf / zdnj' to get value for monkey flrq ... evaluating '$nums{whcf} / $nums{zdnj}' ... 46769
can eval 'drnt * mfnj' to get value for monkey zqgd ... evaluating '$nums{drnt} * $nums{mfnj}' ... 548
can eval 'ztvl * flrq' to get value for monkey mcfl ... evaluating '$nums{ztvl} * $nums{flrq}' ... 93538
can eval 'mcfl * vpvb' to get value for monkey vvhl ... evaluating '$nums{mcfl} * $nums{vpvb}' ... 27593710
can eval 'bhzf + shzg' to get value for monkey nwpf ... evaluating '$nums{bhzf} + $nums{shzg}' ... 419
can eval 'rzbs + dhmp' to get value for monkey qsnq ... evaluating '$nums{rzbs} + $nums{dhmp}' ... 24910429
can eval 'fjds * ltld' to get value for monkey dlfd ... evaluating '$nums{fjds} * $nums{ltld}' ... 44856
re-looping...
can eval 'cghm / nzgd' to get value for monkey wrwt ... evaluating '$nums{cghm} / $nums{nzgd}' ... 2071
can eval 'qncm + wdwf' to get value for monkey cpzp ... evaluating '$nums{qncm} + $nums{wdwf}' ... 326693
can eval 'nwpf * qgzj' to get value for monkey rnwt ... evaluating '$nums{nwpf} * $nums{qgzj}' ... 1257
can eval 'rnwt - pjss' to get value for monkey hgvq ... evaluating '$nums{rnwt} - $nums{pjss}' ... 1007
can eval 'frst + hgvq' to get value for monkey lnpz ... evaluating '$nums{frst} + $nums{hgvq}' ... 2426
can eval 'dlfd - tjjh' to get value for monkey fnrq ... evaluating '$nums{dlfd} - $nums{tjjh}' ... 44683
can eval 'vvhl + wlzl' to get value for monkey bcbv ... evaluating '$nums{vvhl} + $nums{wlzl}' ... 98919652
can eval 'lswr / rrbl' to get value for monkey vcrl ... evaluating '$nums{lswr} / $nums{rrbl}' ... 974
can eval 'ptff + wrwt' to get value for monkey grjb ... evaluating '$nums{ptff} + $nums{wrwt}' ... 7229
can eval 'bssw + fnrq' to get value for monkey lshr ... evaluating '$nums{bssw} + $nums{fnrq}' ... 45617
re-looping...
can eval 'ftpn * vcrl' to get value for monkey vzfl ... evaluating '$nums{ftpn} * $nums{vcrl}' ... 1158086
can eval 'dpjv + vzfl' to get value for monkey lhbr ... evaluating '$nums{dpjv} + $nums{vzfl}' ... 100900879
can eval 'cpzp + hcvz' to get value for monkey hjmn ... evaluating '$nums{cpzp} + $nums{hcvz}' ... 880573
can eval 'lnpz * mllb' to get value for monkey zrpn ... evaluating '$nums{lnpz} * $nums{mllb}' ... 201358
can eval 'lshr + lnmz' to get value for monkey rvwz ... evaluating '$nums{lshr} + $nums{lnmz}' ... 46052
can eval 'mhjg * grjb' to get value for monkey bmjj ... evaluating '$nums{mhjg} * $nums{grjb}' ... 209641
can eval 'hjmn * nfqb' to get value for monkey lhlp ... evaluating '$nums{hjmn} * $nums{nfqb}' ... 1761146
can eval 'bcbv + lhbr' to get value for monkey pqfp ... evaluating '$nums{bcbv} + $nums{lhbr}' ... 199820531
re-looping...
can eval 'bmjj + zrpn' to get value for monkey vhst ... evaluating '$nums{bmjj} + $nums{zrpn}' ... 410999
can eval 'rvwz / jpsm' to get value for monkey btqs ... evaluating '$nums{rvwz} / $nums{jpsm}' ... 23026
can eval 'zqjr * pqfp' to get value for monkey scnr ... evaluating '$nums{zqjr} * $nums{pqfp}' ... 399641062
can eval 'lhlp * bhcl' to get value for monkey ndfm ... evaluating '$nums{lhlp} * $nums{bhcl}' ... 5283438
can eval 'vhst * gbsr' to get value for monkey hpcs ... evaluating '$nums{vhst} * $nums{gbsr}' ... 821998
can eval 'zbjp + btqs' to get value for monkey lnhh ... evaluating '$nums{zbjp} + $nums{btqs}' ... 23556
re-looping...
can eval 'sjhh * hpcs' to get value for monkey pblr ... evaluating '$nums{sjhh} * $nums{hpcs}' ... 1643996
can eval 'scnr + bblj' to get value for monkey mlgg ... evaluating '$nums{scnr} + $nums{bblj}' ... 2566041317
can eval 'qsnq - pblr' to get value for monkey scfs ... evaluating '$nums{qsnq} - $nums{pblr}' ... 23266433
can eval 'lnhh / qsll' to get value for monkey qwcd ... evaluating '$nums{lnhh} / $nums{qsll}' ... 5889
can eval 'qwcd - bqwv' to get value for monkey mbld ... evaluating '$nums{qwcd} - $nums{bqwv}' ... 5584
can eval 'ndfm * szdh' to get value for monkey czdp ... evaluating '$nums{ndfm} * $nums{szdh}' ... 19509776378502
can eval 'scfs * mtbv' to get value for monkey hjfs ... evaluating '$nums{scfs} * $nums{mtbv}' ... 162865031
can eval 'lmfw + mlgg' to get value for monkey njcm ... evaluating '$nums{lmfw} + $nums{mlgg}' ... 3721829129
can eval 'njcm * nnzg' to get value for monkey rrtr ... evaluating '$nums{njcm} * $nums{nnzg}' ... 14887316516
can eval 'hbtg * hjfs' to get value for monkey lcwh ... evaluating '$nums{hbtg} * $nums{hjfs}' ... 19706668751
re-looping...
can eval 'frcq * mbld' to get value for monkey dmcn ... evaluating '$nums{frcq} * $nums{mbld}' ... 11168
can eval 'rrtr + lcwh' to get value for monkey wnnc ... evaluating '$nums{rrtr} + $nums{lcwh}' ... 34593985267
can eval 'dmcn + rtzl' to get value for monkey rgjs ... evaluating '$nums{dmcn} + $nums{rtzl}' ... 11776
can eval 'mggf * rgjs' to get value for monkey whcj ... evaluating '$nums{mggf} * $nums{rgjs}' ... 35328
can eval 'wnnc * pwjn' to get value for monkey ntpl ... evaluating '$nums{wnnc} * $nums{pwjn}' ... 1003225572743
can eval 'whcj - trms' to get value for monkey tplh ... evaluating '$nums{whcj} - $nums{trms}' ... 34381
re-looping...
can eval 'dztc + tplh' to get value for monkey mbps ... evaluating '$nums{dztc} + $nums{tplh}' ... 35380
can eval 'ntvg * ntpl' to get value for monkey hjpd ... evaluating '$nums{ntvg} * $nums{ntpl}' ... 17054834736631
re-looping...
can eval 'mbps / ptpl' to get value for monkey hsrf ... evaluating '$nums{mbps} / $nums{ptpl}' ... 3538
can eval 'hsrf + dlpm' to get value for monkey fjcc ... evaluating '$nums{hsrf} + $nums{dlpm}' ... 4319
can eval 'fjcc / pwdf' to get value for monkey vtzr ... evaluating '$nums{fjcc} / $nums{pwdf}' ... 617
re-looping...
can eval 'vtzr - cvrf' to get value for monkey bpwz ... evaluating '$nums{vtzr} - $nums{cvrf}' ... 380
re-looping...
can eval 'bpwz * fhcv' to get value for monkey pjnl ... evaluating '$nums{bpwz} * $nums{fhcv}' ... 31160
re-looping...
can eval 'pjnl - zgmg' to get value for monkey nbqm ... evaluating '$nums{pjnl} - $nums{zgmg}' ... 30457
can eval 'nbqm / tgtg' to get value for monkey cpnv ... evaluating '$nums{nbqm} / $nums{tgtg}' ... 4351
can eval 'cpnv + tvrv' to get value for monkey djvg ... evaluating '$nums{cpnv} + $nums{tvrv}' ... 4357
re-looping...
can eval 'gght * djvg' to get value for monkey rzqd ... evaluating '$nums{gght} * $nums{djvg}' ... 43570
re-looping...
can eval 'hwrr + rzqd' to get value for monkey wwmv ... evaluating '$nums{hwrr} + $nums{rzqd}' ... 43789
can eval 'mzvc + wwmv' to get value for monkey qjqd ... evaluating '$nums{mzvc} + $nums{wwmv}' ... 43900
re-looping...
can eval 'qjqd / lvls' to get value for monkey gtqp ... evaluating '$nums{qjqd} / $nums{lvls}' ... 8780
can eval 'gtqp - jlwb' to get value for monkey hcwd ... evaluating '$nums{gtqp} - $nums{jlwb}' ... 8592
re-looping...
can eval 'hcwd * bbdf' to get value for monkey wsjt ... evaluating '$nums{hcwd} * $nums{bbdf}' ... 17184
can eval 'vpss + wsjt' to get value for monkey hqnj ... evaluating '$nums{vpss} + $nums{wsjt}' ... 17237
re-looping...
can eval 'phlq * hqnj' to get value for monkey bstf ... evaluating '$nums{phlq} * $nums{hqnj}' ... 34474
can eval 'bstf - mwgt' to get value for monkey cqqr ... evaluating '$nums{bstf} - $nums{mwgt}' ... 33492
re-looping...
can eval 'cqqr / zzzc' to get value for monkey bcwn ... evaluating '$nums{cqqr} / $nums{zzzc}' ... 16746
can eval 'mdvf + bcwn' to get value for monkey vwmb ... evaluating '$nums{mdvf} + $nums{bcwn}' ... 16850
re-looping...
can eval 'vwmb / lgzs' to get value for monkey rnjh ... evaluating '$nums{vwmb} / $nums{lgzs}' ... 3370
can eval 'rnjh - zmmp' to get value for monkey ffdn ... evaluating '$nums{rnjh} - $nums{zmmp}' ... 2913
can eval 'wsgj * ffdn' to get value for monkey ldhd ... evaluating '$nums{wsgj} * $nums{ffdn}' ... 32043
re-looping...
can eval 'plqr + ldhd' to get value for monkey jfpf ... evaluating '$nums{plqr} + $nums{ldhd}' ... 32432
can eval 'jfpf * cmwv' to get value for monkey ltmq ... evaluating '$nums{jfpf} * $nums{cmwv}' ... 64864
re-looping...
can eval 'ltmq - zqgd' to get value for monkey npvz ... evaluating '$nums{ltmq} - $nums{zqgd}' ... 64316
can eval 'npvz / cghg' to get value for monkey htrg ... evaluating '$nums{npvz} / $nums{cghg}' ... 32158
re-looping...
can eval 'mqcj + htrg' to get value for monkey dpls ... evaluating '$nums{mqcj} + $nums{htrg}' ... 32844
re-looping...
can eval 'dpls / cvgg' to get value for monkey pzzm ... evaluating '$nums{dpls} / $nums{cvgg}' ... 10948
re-looping...
can eval 'pzzm - jtrs' to get value for monkey qfcf ... evaluating '$nums{pzzm} - $nums{jtrs}' ... 10181
can eval 'hrwm * qfcf' to get value for monkey nwmp ... evaluating '$nums{hrwm} * $nums{qfcf}' ... 20362
can eval 'nwmp - mfjq' to get value for monkey dctw ... evaluating '$nums{nwmp} - $nums{mfjq}' ... 20357
re-looping...
can eval 'dctw + pbfn' to get value for monkey qbrf ... evaluating '$nums{dctw} + $nums{pbfn}' ... 20972
can eval 'qbrf / mpdd' to get value for monkey vmnl ... evaluating '$nums{qbrf} / $nums{mpdd}' ... 5243
re-looping...
can eval 'fmzc + vmnl' to get value for monkey lpbs ... evaluating '$nums{fmzc} + $nums{vmnl}' ... 5499
can eval 'lpbs * dqbq' to get value for monkey prhw ... evaluating '$nums{lpbs} * $nums{dqbq}' ... 16497
re-looping...
can eval 'tcnv + prhw' to get value for monkey lmjh ... evaluating '$nums{tcnv} + $nums{prhw}' ... 17295
can eval 'lmjh * jmll' to get value for monkey mdhb ... evaluating '$nums{lmjh} * $nums{jmll}' ... 34590
re-looping...
can eval 'mdhb - nlfw' to get value for monkey prwp ... evaluating '$nums{mdhb} - $nums{nlfw}' ... 34396
re-looping...
can eval 'prwp / bvbp' to get value for monkey lzvh ... evaluating '$nums{prwp} / $nums{bvbp}' ... 8599
re-looping...
can eval 'lzvh - rlmt' to get value for monkey hjfc ... evaluating '$nums{lzvh} - $nums{rlmt}' ... 8535
re-looping...
can eval 'srdc * hjfc' to get value for monkey jhbj ... evaluating '$nums{srdc} * $nums{hjfc}' ... 34140
re-looping...
can eval 'jhbj + ztqz' to get value for monkey hcjq ... evaluating '$nums{jhbj} + $nums{ztqz}' ... 35101
can eval 'hcjq / ctqj' to get value for monkey jzvr ... evaluating '$nums{hcjq} / $nums{ctqj}' ... 3191
can eval 'hjpd - jzvr' to get value for monkey qzhw ... evaluating '$nums{hjpd} - $nums{jzvr}' ... 17054834733440
re-looping...
can eval 'qzhw / ffbn' to get value for monkey dsvv ... evaluating '$nums{qzhw} / $nums{ffbn}' ... 8527417366720
can eval 'mpgt + dsvv' to get value for monkey rswb ... evaluating '$nums{mpgt} + $nums{dsvv}' ... 8527417367161
re-looping...
can eval 'rswb * pfnd' to get value for monkey hppd ... evaluating '$nums{rswb} * $nums{pfnd}' ... 51164504202966
re-looping...
can eval 'hppd + czdp' to get value for monkey root ... evaluating '$nums{hppd} + $nums{czdp}' ... 70674280581468
re-looping...
